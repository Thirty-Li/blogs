import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,e as l,o as r}from"./app-CARu8aWL.js";const a={};function d(i,t){return r(),n("div",null,t[0]||(t[0]=[l('<h1 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h1><p>Go 语言内置的运算符有：</p><ol><li>算术运算符</li><li>关系运算符</li><li>逻辑运算符</li><li>位运算符</li><li>赋值运算符</li></ol><h2 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符"><span>算术运算符</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">+</td><td style="text-align:center;">相加</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;">相减</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:center;">相乘</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:center;">相除</td></tr><tr><td style="text-align:center;">%</td><td style="text-align:center;">求余</td></tr></tbody></table><p><strong>注意：</strong> <code>++</code>（自增）和<code>--</code>（自减）在Go语言中是单独的语句，并不是运算符。</p><h2 id="关系运算符" tabindex="-1"><a class="header-anchor" href="#关系运算符"><span>关系运算符</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">==</td><td style="text-align:center;">检查两个值是否相等，如果相等返回 True 否则返回 False。</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:center;">检查两个值是否不相等，如果不相等返回 True 否则返回 False。</td></tr><tr><td style="text-align:center;">&gt;</td><td style="text-align:center;">检查左边值是否大于右边值，如果是返回 True 否则返回 False。</td></tr><tr><td style="text-align:center;">&gt;=</td><td style="text-align:center;">检查左边值是否大于等于右边值，如果是返回 True 否则返回 False。</td></tr><tr><td style="text-align:center;">&lt;</td><td style="text-align:center;">检查左边值是否小于右边值，如果是返回 True 否则返回 False。</td></tr><tr><td style="text-align:center;">&lt;=</td><td style="text-align:center;">检查左边值是否小于等于右边值，如果是返回 True 否则返回 False。</td></tr></tbody></table><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:center;">逻辑 AND 运算符。 如果两边的操作数都是 True，则为 True，否则为 False。</td></tr><tr><td style="text-align:center;">||</td><td style="text-align:center;">逻辑 OR 运算符。 如果两边的操作数有一个 True，则为 True，否则为 False。</td></tr><tr><td style="text-align:center;">!</td><td style="text-align:center;">逻辑 NOT 运算符。 如果条件为 True，则为 False，否则为 True。</td></tr></tbody></table><h2 id="位运算符" tabindex="-1"><a class="header-anchor" href="#位运算符"><span>位运算符</span></a></h2><p>位运算符对整数在内存中的二进制位进行操作。</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;</td><td style="text-align:center;">参与运算的两数各对应的二进位相与。 （两位均为1才为1）</td></tr><tr><td style="text-align:center;">|</td><td style="text-align:center;">参与运算的两数各对应的二进位相或。 （两位有一个为1就为1）</td></tr><tr><td style="text-align:center;">^</td><td style="text-align:center;">参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为1。 （两位不一样则为1）</td></tr><tr><td style="text-align:center;">«</td><td style="text-align:center;">左移n位就是乘以2的n次方。 “a«b&quot;是把a的各二进位全部左移b位，高位丢弃，低位补0。</td></tr><tr><td style="text-align:center;">»</td><td style="text-align:center;">右移n位就是除以2的n次方。 “a»b&quot;是把a的各二进位全部右移b位。</td></tr></tbody></table><h2 id="赋值运算符" tabindex="-1"><a class="header-anchor" href="#赋值运算符"><span>赋值运算符</span></a></h2><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">=</td><td style="text-align:center;">简单的赋值运算符，将一个表达式的值赋给一个左值</td></tr><tr><td style="text-align:center;">+=</td><td style="text-align:center;">相加后再赋值</td></tr><tr><td style="text-align:center;">-=</td><td style="text-align:center;">相减后再赋值</td></tr><tr><td style="text-align:center;">*=</td><td style="text-align:center;">相乘后再赋值</td></tr><tr><td style="text-align:center;">/=</td><td style="text-align:center;">相除后再赋值</td></tr><tr><td style="text-align:center;">%=</td><td style="text-align:center;">求余后再赋值</td></tr><tr><td style="text-align:center;">«=</td><td style="text-align:center;">左移后赋值</td></tr><tr><td style="text-align:center;">»=</td><td style="text-align:center;">右移后赋值</td></tr><tr><td style="text-align:center;">&amp;=</td><td style="text-align:center;">按位与后赋值</td></tr><tr><td style="text-align:center;">|=</td><td style="text-align:center;">按位或后赋值</td></tr><tr><td style="text-align:center;">^=</td><td style="text-align:center;">按位异或后赋值</td></tr></tbody></table>',15)]))}const g=e(a,[["render",d],["__file","运算符.html.vue"]]),y=JSON.parse('{"path":"/zh/computer/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/golang/%E8%BF%90%E7%AE%97%E7%AC%A6.html","title":"运算符","lang":"zh-CN","frontmatter":{"description":"运算符 Go 语言内置的运算符有： 算术运算符 关系运算符 逻辑运算符 位运算符 赋值运算符 算术运算符 注意： ++（自增）和--（自减）在Go语言中是单独的语句，并不是运算符。 关系运算符 逻辑运算符 位运算符 位运算符对整数在内存中的二进制位进行操作。 赋值运算符","head":[["meta",{"property":"og:url","content":"https://thirty-li.github.io/blogs/blogs/zh/computer/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/golang/%E8%BF%90%E7%AE%97%E7%AC%A6.html"}],["meta",{"property":"og:site_name","content":"Thirty_Li"}],["meta",{"property":"og:title","content":"运算符"}],["meta",{"property":"og:description","content":"运算符 Go 语言内置的运算符有： 算术运算符 关系运算符 逻辑运算符 位运算符 赋值运算符 算术运算符 注意： ++（自增）和--（自减）在Go语言中是单独的语句，并不是运算符。 关系运算符 逻辑运算符 位运算符 位运算符对整数在内存中的二进制位进行操作。 赋值运算符"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-28T08:29:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-28T08:29:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"运算符\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-28T08:29:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Thirty_Li\\",\\"url\\":\\"https://thirty-li.github.io/blogs/\\"}]}"]]},"headers":[{"level":2,"title":"算术运算符","slug":"算术运算符","link":"#算术运算符","children":[]},{"level":2,"title":"关系运算符","slug":"关系运算符","link":"#关系运算符","children":[]},{"level":2,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]},{"level":2,"title":"位运算符","slug":"位运算符","link":"#位运算符","children":[]},{"level":2,"title":"赋值运算符","slug":"赋值运算符","link":"#赋值运算符","children":[]}],"git":{"createdTime":1743150542000,"updatedTime":1743150542000,"contributors":[{"name":"Thirty_Li","email":"thirty_li@qq.com","commits":1}]},"readingTime":{"minutes":1.97,"words":592},"filePathRelative":"zh/computer/编程语言/golang/运算符.md","localizedDate":"2025年3月28日","excerpt":"\\n<p>Go 语言内置的运算符有：</p>\\n<ol>\\n<li>算术运算符</li>\\n<li>关系运算符</li>\\n<li>逻辑运算符</li>\\n<li>位运算符</li>\\n<li>赋值运算符</li>\\n</ol>\\n<h2>算术运算符</h2>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\">运算符</th>\\n<th style=\\"text-align:center\\">描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:center\\">+</td>\\n<td style=\\"text-align:center\\">相加</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">-</td>\\n<td style=\\"text-align:center\\">相减</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">*</td>\\n<td style=\\"text-align:center\\">相乘</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">/</td>\\n<td style=\\"text-align:center\\">相除</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">%</td>\\n<td style=\\"text-align:center\\">求余</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{g as comp,y as data};
