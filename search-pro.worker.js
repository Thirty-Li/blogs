const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":348,\"nextId\":348,\"documentIds\":{\"0\":\"1\",\"1\":\"1#介绍\",\"2\":\"3\",\"3\":\"4\",\"4\":\"4#目录\",\"5\":\"4#编程语言\",\"6\":\"4#计算机网络\",\"7\":\"4#数据库\",\"8\":\"4#操作系统\",\"9\":\"4#git\",\"10\":\"4#docker\",\"11\":\"5\",\"12\":\"6\",\"13\":\"7\",\"14\":\"7#内存分配\",\"15\":\"7#始分配内存\",\"16\":\"7#内存分配策略\",\"17\":\"7#功能使用\",\"18\":\"7@0\",\"19\":\"7@1\",\"20\":\"8\",\"21\":\"8#教程章节\",\"22\":\"8@0\",\"23\":\"9\",\"24\":\"9@0\",\"25\":\"9@1\",\"26\":\"10\",\"27\":\"10#_1-项目初始化\",\"28\":\"10#_2-安装依赖\",\"29\":\"10@0\",\"30\":\"11\",\"31\":\"11#推送代码到-github\",\"32\":\"11#使用-github-pages-发布站点\",\"33\":\"11@0\",\"34\":\"12\",\"35\":\"12#node-js\",\"36\":\"12#_1-点击-download-page-。\",\"37\":\"12#_2-运行安装包-保持所有的默认设置-一路下一步即可。\",\"38\":\"12#_3-然后再在安装路径的根目录下新建两个文件夹-node-cache和node-global-如图所示\",\"39\":\"12#_4-环境配置\",\"40\":\"12#_5-修改缓存目录和全局目录\",\"41\":\"12@0\",\"42\":\"12@1\",\"43\":\"13\",\"44\":\"13#教程章节\",\"45\":\"13@0\",\"46\":\"14\",\"47\":\"14@0\",\"48\":\"15\",\"49\":\"15#📍简介\",\"50\":\"15#📍题目创建\",\"51\":\"15#📌️general-info\",\"52\":\"15#📌️statement\",\"53\":\"15#📌️files\",\"54\":\"15#📌️checker\",\"55\":\"15#📌️interactor\",\"56\":\"15#📌️validator\",\"57\":\"15#📌️tests\",\"58\":\"15#📌️stresses\",\"59\":\"15#📌️solution-files\",\"60\":\"15#📌️invocations\",\"61\":\"15#📌️issues\",\"62\":\"15#📌️packages\",\"63\":\"15@0\",\"64\":\"16\",\"65\":\"16@0\",\"66\":\"17\",\"67\":\"17#教程章节\",\"68\":\"17@0\",\"69\":\"18\",\"70\":\"18#⬇️python-安装\",\"71\":\"18#_1-✅️️下载安装包python官网-。\",\"72\":\"18#_2-✅️️运行安装包。\",\"73\":\"18#⬇️pycharm-安装\",\"74\":\"18#_1-✅️️安装包下载\",\"75\":\"18#_2-✅️️pycharm-安装教程\",\"76\":\"18#_3-✅️️pycharm-常用快捷键\",\"77\":\"18@0\",\"78\":\"18@1\",\"79\":\"19\",\"80\":\"19#_1-✅️️数据合并\",\"81\":\"19#_2-✅️️数据处理\",\"82\":\"19#📌完整代码\",\"83\":\"19@0\",\"84\":\"20\",\"85\":\"20#_1-boss直聘\",\"86\":\"20#✅️url获取\",\"87\":\"20#✅️招聘信息获取\",\"88\":\"20#✅️代码编写\",\"89\":\"20#📌️url获取模块\",\"90\":\"20#📌数据抓取\",\"91\":\"20#✅️源代码如下\",\"92\":\"20#_2-智联招聘\",\"93\":\"20#✅️url获取-1\",\"94\":\"20#✅️招聘信息获取-1\",\"95\":\"20#✅️代码编写-1\",\"96\":\"20#📌url获取模块\",\"97\":\"20#📌数据抓取-1\",\"98\":\"20#✅️源代码如下-1\",\"99\":\"20#_3-前程无忧\",\"100\":\"20#✅️url获取-2\",\"101\":\"20#✅️简单demo编写\",\"102\":\"20@0\",\"103\":\"20@1\",\"104\":\"21\",\"105\":\"21#_1-全国招聘工作工资分布可视化表-html\",\"106\":\"21#📌数据获取\",\"107\":\"21#📌map-chart-地图\",\"108\":\"21#📌line-chart-折线图\",\"109\":\"21#📌bar-chart-柱状图\",\"110\":\"21#📌grid-chart-并行多图\",\"111\":\"21#📌timeline-时间线\",\"112\":\"21#📌完整代码\",\"113\":\"21#📌成果展示\",\"114\":\"21#_2-全国招聘工作数量可视化表-html\",\"115\":\"21#📌数据获取-1\",\"116\":\"21#📌map-chart-地图-1\",\"117\":\"21#📌pie-chart-饼图\",\"118\":\"21#📌grid-chart-并行多图-1\",\"119\":\"21#📌timeline-时间线-1\",\"120\":\"21#📌完整代码-1\",\"121\":\"21#📌成果展示-1\",\"122\":\"21#_3-岗位词云统计-html\",\"123\":\"21#📌数据获取-2\",\"124\":\"21#📌wordcloud-词云图\",\"125\":\"21#📌timeline-时间线-2\",\"126\":\"21#📌完整代码-2\",\"127\":\"21#📌成果展示-2\",\"128\":\"21@0\",\"129\":\"21@1\",\"130\":\"22\",\"131\":\"22#📍1-anaconda\",\"132\":\"22#🔥anaconda-官网下载-国内网络的问题-下载速度很慢-不推荐\",\"133\":\"22#🔥anaconda-使用清华镜像源下载-下载速度快-推荐\",\"134\":\"22#🔥anaconda-安装\",\"135\":\"22#🔥anaconda-配置\",\"136\":\"22#🔥anaconda默认环境保存路径和下载源修改\",\"137\":\"22#📍2-pytorch\",\"138\":\"22#🔥cuda-的安装\",\"139\":\"22#🔥cudnn-的安装\",\"140\":\"22#🔥创建虚拟环境\",\"141\":\"22@0\",\"142\":\"22@1\",\"143\":\"23\",\"144\":\"23#概论\",\"145\":\"23#_1-注释\",\"146\":\"23#_1-1-单行注释\",\"147\":\"23#_1-2-多行注释\",\"148\":\"23#_2-变量\",\"149\":\"23#_2-1-定义变量\",\"150\":\"23#_2-2-使用变量\",\"151\":\"23#_2-3-只读变量\",\"152\":\"23#_2-4-删除变量\",\"153\":\"23#_2-5-变量类型\",\"154\":\"23#_2-6-字符串\",\"155\":\"23#_3-默认变量\",\"156\":\"23#_3-1-文件参数变量\",\"157\":\"23#_3-2-其它参数相关变量\",\"158\":\"23#_4-数组\",\"159\":\"23#_4-1-定义\",\"160\":\"23#_4-2-读取数组中某个元素的值\",\"161\":\"23#_4-3-读取整个数组\",\"162\":\"23#_4-4-数组长度\",\"163\":\"23@0\",\"164\":\"23@1\",\"165\":\"24\",\"166\":\"24#_1-基础\",\"167\":\"24#_1-1-连接\",\"168\":\"24#_1-2-sql-简介\",\"169\":\"24#_1-2-1-sql-通用语法\",\"170\":\"24#_1-2-2-分类\",\"171\":\"24#_2-数据库设计-ddl\",\"172\":\"24#_2-1-数据库操作\",\"173\":\"24#_2-1-1-查询数据库\",\"174\":\"24#_2-1-2-创建数据库\",\"175\":\"24#_2-1-3-使用数据库\",\"176\":\"24#_2-1-4-删除数据库\",\"177\":\"24#_2-2-表操作\",\"178\":\"24#_2-2-1-创建\",\"179\":\"24#_2-2-1-1-语法\",\"180\":\"24#_2-2-1-2-约束\",\"181\":\"24#_2-2-1-3-数据类型\",\"182\":\"24#_2-2-2-查询\",\"183\":\"24#_2-2-3-修改\",\"184\":\"24#_2-2-4-删除\",\"185\":\"24#_3-数据库操作-dml\",\"186\":\"24#_3-1-增加-insert\",\"187\":\"24#_3-2-修改-update\",\"188\":\"24#_3-3-删除-delete\",\"189\":\"24#_4-数据库操作-dql\",\"190\":\"24#_4-1-语法\",\"191\":\"24#_4-2-基本查询\",\"192\":\"24#_4-3-条件查询\",\"193\":\"24#_4-4-聚合函数\",\"194\":\"24#_4-5-分组查询\",\"195\":\"24#_4-6-排序查询\",\"196\":\"24#_4-7-分页查询\",\"197\":\"24#_5-多表设计\",\"198\":\"24#_5-1-一对多-外键约束\",\"199\":\"24#_5-2-一对一\",\"200\":\"24#_5-3-多对多\",\"201\":\"24#_6-多表查询\",\"202\":\"24#_6-1-概述\",\"203\":\"24#_6-1-1-介绍\",\"204\":\"24#_6-1-2-分类\",\"205\":\"24#_6-3-内连接\",\"206\":\"24#_6-3-外连接\",\"207\":\"24#_6-4-子查询\",\"208\":\"24#_6-4-1-介绍\",\"209\":\"24#_6-4-2-标量子查询\",\"210\":\"24#_6-4-3-列子查询\",\"211\":\"24#_6-4-4-行子查询\",\"212\":\"24#_6-4-5-表子查询\",\"213\":\"24#_7-事务\",\"214\":\"24#_7-1-介绍\",\"215\":\"24#_7-2-操作\",\"216\":\"24#_7-3-四大特性\",\"217\":\"24#_8-索引\",\"218\":\"24#_8-1-介绍\",\"219\":\"24#_8-2-结构\",\"220\":\"24#_8-3-语法\",\"221\":\"24@0\",\"222\":\"24@1\",\"223\":\"25\",\"224\":\"25#智能指针的使用\",\"225\":\"25#智能指针的原理\",\"226\":\"25#std-auto-ptr\",\"227\":\"25#std-shared-ptr\",\"228\":\"25#std-shared-ptr的基本设计\",\"229\":\"25#shared-ptr的模拟实现\",\"230\":\"25#std-shared-ptr的线程安全问题\",\"231\":\"25#std-shared-ptr的定制删除器\",\"232\":\"25#std-weak-ptr\",\"233\":\"25#std-shared-ptr的循环引用问题\",\"234\":\"25#std-weak-ptr解决循环引用问题\",\"235\":\"25@0\",\"236\":\"25@1\",\"237\":\"26\",\"238\":\"26#数组定义\",\"239\":\"26#数组的初始化\",\"240\":\"26#方法一\",\"241\":\"26#方法二\",\"242\":\"26#方法三\",\"243\":\"26#数组的遍历\",\"244\":\"26#多维数组\",\"245\":\"26#二维数组的定义\",\"246\":\"26#二维数组的遍历\",\"247\":\"26#数组是值类型\",\"248\":\"27\",\"249\":\"27#输出\",\"250\":\"27#print\",\"251\":\"27#printf\",\"252\":\"27#println\",\"253\":\"27#fptiny\",\"254\":\"27#sprint\",\"255\":\"27#errorf\",\"256\":\"27#格式化占位符\",\"257\":\"27#通用占位符\",\"258\":\"27#布尔型\",\"259\":\"27#整型\",\"260\":\"27#浮点数与复数\",\"261\":\"27#字符串和-byte\",\"262\":\"27#指针\",\"263\":\"27#宽度标识符\",\"264\":\"27#代码\",\"265\":\"27#其他falg\",\"266\":\"27#输入\",\"267\":\"27#fat-scan\",\"268\":\"27#fmt-scanf\",\"269\":\"27#fmt-scanln\",\"270\":\"27#bufio-newreader\",\"271\":\"27#fscan系列\",\"272\":\"27#sscan系列\",\"273\":\"28\",\"274\":\"28#切片的定义\",\"275\":\"28#切片的长度和容量\",\"276\":\"28#切片表达式\",\"277\":\"28#简单切片表达式\",\"278\":\"28#完整切片表达式\",\"279\":\"28#使用make-函数构造切片\",\"280\":\"28#切片的本质\",\"281\":\"28#判断切片是否为空\",\"282\":\"28#切片不能直接比较\",\"283\":\"28#切片的赋值拷贝\",\"284\":\"28#切片遍历\",\"285\":\"28#append-方法为切片添加元素\",\"286\":\"28#切片的扩容策略\",\"287\":\"28#使用copy-函数复制切片\",\"288\":\"28#从切片中删除元素\",\"289\":\"29\",\"290\":\"29#整型\",\"291\":\"29#特殊整型\",\"292\":\"29#数字字面量语法-number-literals-syntax\",\"293\":\"29#浮点型\",\"294\":\"29#复数\",\"295\":\"29#布尔值\",\"296\":\"29#字符串\",\"297\":\"29#字符串转义符\",\"298\":\"29#多行字符串\",\"299\":\"29#字符串的常用操作\",\"300\":\"29#byte和rune类型\",\"301\":\"29#修改字符串\",\"302\":\"29#类型转换\",\"303\":\"30\",\"304\":\"30#标识符\",\"305\":\"30#关键字\",\"306\":\"30#标准声明\",\"307\":\"30#批量声明\",\"308\":\"30#变量的初始化\",\"309\":\"30#类型推导\",\"310\":\"30#短变量声明\",\"311\":\"30#匿名变量\",\"312\":\"30#iota\",\"313\":\"30#几个常见的iota示例\",\"314\":\"31\",\"315\":\"31#if条件判断基本写法\",\"316\":\"31#if条件判断特殊写法\",\"317\":\"31#无限循环\",\"318\":\"32\",\"319\":\"32#算术运算符\",\"320\":\"32#关系运算符\",\"321\":\"32#逻辑运算符\",\"322\":\"32#位运算符\",\"323\":\"32#赋值运算符\",\"324\":\"33\",\"325\":\"33#标签\",\"326\":\"33@0\",\"327\":\"33@1\",\"328\":\"34\",\"329\":\"34@0\",\"330\":\"34@1\",\"331\":\"35\",\"332\":\"35#代码流程\",\"333\":\"35@0\",\"334\":\"35@1\",\"335\":\"36\",\"336\":\"37\",\"337\":\"38\",\"338\":\"39\",\"339\":\"40\",\"340\":\"41\",\"341\":\"42\",\"342\":\"43\",\"343\":\"44\",\"344\":\"45\",\"345\":\"46\",\"346\":\"47\",\"347\":\"48\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,12],\"2\":[1,4],\"3\":[1,9],\"4\":[1],\"5\":[1],\"6\":[1],\"7\":[1],\"8\":[1],\"9\":[1],\"10\":[1],\"11\":[1,3],\"12\":[1,3],\"13\":[1,7],\"14\":[2],\"15\":[1,6],\"16\":[1,15],\"17\":[2,253],\"18\":[null,null,2],\"19\":[null,null,1],\"20\":[1,6],\"21\":[1,4],\"22\":[null,null,2],\"23\":[1,4],\"24\":[null,null,4],\"25\":[null,null,2],\"26\":[1,6],\"27\":[2,53],\"28\":[2,109],\"29\":[null,null,3],\"30\":[1,4],\"31\":[2,50],\"32\":[4,19],\"33\":[null,null,2],\"34\":[1,4],\"35\":[2,12],\"36\":[1],\"37\":[5,3],\"38\":[5],\"39\":[2,32],\"40\":[2,15],\"41\":[null,null,3],\"42\":[null,null,1],\"43\":[1,3],\"44\":[1,3],\"45\":[null,null,2],\"46\":[1,10],\"47\":[null,null,1],\"48\":[1,3],\"49\":[1,43],\"50\":[1,16],\"51\":[2,5],\"52\":[1,38],\"53\":[1,28],\"54\":[1,39],\"55\":[1,13],\"56\":[1,12],\"57\":[1,20],\"58\":[1,19],\"59\":[2,5],\"60\":[1,28],\"61\":[1,4],\"62\":[1,23],\"63\":[null,null,1],\"64\":[1],\"65\":[null,null,1],\"66\":[1,4],\"67\":[1,4],\"68\":[null,null,3],\"69\":[1,4],\"70\":[2,8],\"71\":[1],\"72\":[3,37],\"73\":[2,28],\"74\":[2,7],\"75\":[3,25],\"76\":[3,35],\"77\":[null,null,4],\"78\":[null,null,1],\"79\":[1,5],\"80\":[2,83],\"81\":[2,491],\"82\":[1,560],\"83\":[null,null,4],\"84\":[1,4],\"85\":[2],\"86\":[1,28],\"87\":[1,28],\"88\":[1,2],\"89\":[1,52],\"90\":[1,104],\"91\":[1,162],\"92\":[2],\"93\":[1,17],\"94\":[1,9],\"95\":[1,2],\"96\":[1,44],\"97\":[1,109],\"98\":[1,166],\"99\":[2,7],\"100\":[1,41],\"101\":[1,79],\"102\":[null,null,2],\"103\":[null,null,4],\"104\":[1,13],\"105\":[3],\"106\":[1,74],\"107\":[4,95],\"108\":[4,52],\"109\":[4,63],\"110\":[4,26],\"111\":[3,68],\"112\":[1,236],\"113\":[1],\"114\":[3],\"115\":[1,1],\"116\":[4,84],\"117\":[4,57],\"118\":[4,17],\"119\":[3,65],\"120\":[1,190],\"121\":[1],\"122\":[3],\"123\":[1,38],\"124\":[3,27],\"125\":[3,25],\"126\":[1,107],\"127\":[1],\"128\":[null,null,4],\"129\":[null,null,6],\"130\":[3,29],\"131\":[2,15],\"132\":[6,6],\"133\":[5,13],\"134\":[2,34],\"135\":[2,28],\"136\":[1,64],\"137\":[2,13],\"138\":[2,49],\"139\":[2,36],\"140\":[1,55],\"141\":[null,null,3],\"142\":[null,null,1],\"143\":[2],\"144\":[1,60],\"145\":[2],\"146\":[2,7],\"147\":[3,13],\"148\":[2],\"149\":[3,13],\"150\":[2,14],\"151\":[3,12],\"152\":[3,7],\"153\":[3,22],\"154\":[3,28],\"155\":[2],\"156\":[3,37],\"157\":[3,27],\"158\":[2,6],\"159\":[3,17],\"160\":[3,15],\"161\":[3,12],\"162\":[2,12],\"163\":[null,null,1],\"164\":[null,null,1],\"165\":[2],\"166\":[2],\"167\":[2,32],\"168\":[4,5],\"169\":[4,19],\"170\":[3,27],\"171\":[3,13],\"172\":[3,15],\"173\":[3,11],\"174\":[3,19],\"175\":[4,9],\"176\":[4,28],\"177\":[2,6],\"178\":[3],\"179\":[3,18],\"180\":[3,55],\"181\":[4,156],\"182\":[2,14],\"183\":[3,39],\"184\":[3,13],\"185\":[3,15],\"186\":[5,22],\"187\":[5,37],\"188\":[4,23],\"189\":[3],\"190\":[3,31],\"191\":[3,22],\"192\":[3,52],\"193\":[2,40],\"194\":[3,39],\"195\":[3,27],\"196\":[3,65],\"197\":[2,11],\"198\":[4,52],\"199\":[3,45],\"200\":[3,17],\"201\":[2],\"202\":[3],\"203\":[3,34],\"204\":[4,14],\"205\":[3,29],\"206\":[3,31],\"207\":[3],\"208\":[4,36],\"209\":[4,8],\"210\":[4,11],\"211\":[3,8],\"212\":[4,4],\"213\":[2],\"214\":[3,24],\"215\":[3,32],\"216\":[3,41],\"217\":[2],\"218\":[3,24],\"219\":[3,161],\"220\":[3,19],\"221\":[null,null,1],\"222\":[null,null,1],\"223\":[1],\"224\":[1,74],\"225\":[1,60],\"226\":[3,96],\"227\":[3],\"228\":[3,40],\"229\":[2,97],\"230\":[3,138],\"231\":[3,159],\"232\":[3],\"233\":[3,72],\"234\":[3,88],\"235\":[null,null,6],\"236\":[null,null,1],\"237\":[3,11],\"238\":[2,31],\"239\":[1,2],\"240\":[1,22],\"241\":[1,27],\"242\":[1,20],\"243\":[1,26],\"244\":[1,4],\"245\":[1,18],\"246\":[1,31],\"247\":[1,34],\"248\":[5,11],\"249\":[1,2],\"250\":[1,13],\"251\":[1,14],\"252\":[1,17],\"253\":[1,63],\"254\":[1,41],\"255\":[1,32],\"256\":[1,4],\"257\":[1,53],\"258\":[1,16],\"259\":[1,37],\"260\":[1,42],\"261\":[2,24],\"262\":[1,19],\"263\":[1,22],\"264\":[2,18],\"265\":[1,45],\"266\":[1,7],\"267\":[2,45],\"268\":[2,48],\"269\":[2,39],\"270\":[2,43],\"271\":[1,25],\"272\":[1,45],\"273\":[1,11],\"274\":[1,32],\"275\":[1,6],\"276\":[1,7],\"277\":[1,58],\"278\":[1,38],\"279\":[2,32],\"280\":[1,25],\"281\":[1,8],\"282\":[1,28],\"283\":[1,18],\"284\":[1,23],\"285\":[2,86],\"286\":[1,65],\"287\":[2,36],\"288\":[1,29],\"289\":[1,16],\"290\":[1,38],\"291\":[1,28],\"292\":[5,65],\"293\":[1,31],\"294\":[1,18],\"295\":[1,13],\"296\":[1,21],\"297\":[1,35],\"298\":[1,14],\"299\":[1,25],\"300\":[1,86],\"301\":[1,26],\"302\":[1,34],\"303\":[1],\"304\":[1,3],\"305\":[1,67],\"306\":[1,10],\"307\":[1,10],\"308\":[1,26],\"309\":[1,8],\"310\":[1,19],\"311\":[1,61],\"312\":[1,20],\"313\":[3,34],\"314\":[1],\"315\":[1,41],\"316\":[1,50],\"317\":[1,130],\"318\":[1,7],\"319\":[1,16],\"320\":[1,21],\"321\":[1,15],\"322\":[1,22],\"323\":[1,18],\"324\":[1],\"325\":[1,90],\"326\":[null,null,1],\"327\":[null,null,1],\"328\":[1,75],\"329\":[null,null,2],\"330\":[null,null,1],\"331\":[1,33],\"332\":[1,151],\"333\":[null,null,2],\"334\":[null,null,1],\"335\":[1,3],\"336\":[1],\"337\":[1],\"338\":[1],\"339\":[1],\"340\":[1],\"341\":[2],\"342\":[1],\"343\":[1],\"344\":[1],\"345\":[1],\"346\":[1],\"347\":[1]},\"averageFieldLength\":[1.8473502772913903,36.44729627179458,0.9537738259260736],\"storedFields\":{\"0\":{\"h\":\"个人介绍\"},\"1\":{\"h\":\"介绍\",\"t\":[\"这是一个档案主页的案例。\",\"要使用此布局，你应该在页面 Frontmatter 中设置 home: true 和 portfolio: true。\",\"相关配置文档请见 档案主页。\"]},\"2\":{\"h\":\"算法笔记\",\"t\":[\"此处存放刷题时的思路和笔记，包括算法题、笔试题和面试题等。\"]},\"3\":{\"h\":\"计算机\",\"t\":[\"此处存放一些计算机大类的笔记，包括编程语言、计算机网络、操作系统、数据库、Linux、Git、Docker等等。\"]},\"4\":{\"h\":\"目录\"},\"5\":{\"h\":\"编程语言\"},\"6\":{\"h\":\"计算机网络\"},\"7\":{\"h\":\"数据库\"},\"8\":{\"h\":\"操作系统\"},\"9\":{\"h\":\"Git\"},\"10\":{\"h\":\"Docker\"},\"11\":{\"h\":\"学习笔记\",\"t\":[\"此处存放自己写的一些学习笔记，帮助学习。\"]},\"12\":{\"h\":\"开源项目\",\"t\":[\"此处存放自己写和一些优秀的开源项目，帮助学习。\"]},\"13\":{\"h\":\"Vector\",\"t\":[\"vector是一个动态数组会自动分配和管理内部的内存，使其能够动态地存储元素，具有快速的随机访问能力（O(1)时间复杂度）\"]},\"14\":{\"h\":\"内存分配：\"},\"15\":{\"h\":\"始分配内存\",\"t\":[\"当你创建一个空的vector或通过指定初始大小时，vector会分配一块内存来存储元素。这个初始内存通常比容器实际需要的要大，以容纳未来添加的元素。STL库会自动决定初始内存大小。\"]},\"16\":{\"h\":\"内存分配策略\",\"t\":[\"vector的内存分配策略通常是指数增长的，也就是说，当vector的容量不足以存储新元素时，它会分配一块更大的内存，通常是原内存的两倍。这种策略可以减少频繁的内存分配和复制操作，提高性能。 当vector的内存不足以容纳新元素时，它会分配新的内存，将现有元素从旧内存复制到新内存中，然后释放旧内存。这个过程可能导致元素的重新分配，因此要谨慎处理大型vector的插入操作，因为它们可能会导致性能开销。\"]},\"17\":{\"h\":\"功能使用：\",\"t\":[\"（注意：以下代码块中std::表示标准命名空间，若使用using namespace std;则可以省略)\",\"包含头文件 在使用vector之前，需要包含相应的头文件：\",\"#include <vector>\",\"定义和声明 vector容器的定义和声明可以如下所示：\",\"std::vector<元素类型> 变量名;\",\"例如，要创建一个存储整数的vector，可以这样声明：\",\"std::vector<int> myVector;\",\"初始化 vector可以通过多种方式进行初始化： 无参数初始化：vector对象被创建时为空。\",\"std::vector<int> myVector; // 空的整数向量\",\"指定大小初始化：可以指定容器的大小，所有元素初始化为默认值。\",\"std::vector<int> myVector(5); // 包含5个整数的向量，值为0\",\"指定大小和初始值初始化：可以指定容器的大小和初始值。\",\"std::vector<int> myVector(5, 42); // 包含5个整数的向量，值为42\",\"使用初始化列表初始化：C++11之后，可以使用初始化列表来初始化vector。\",\"std::vector<int> myVector = {1, 2, 3, 4, 5}; //表示包含5个整数的向量，值分别为1，2，3，4，5\",\"成员函数的使用\",\"插入元素：push_back 函数用于在 vector 的末尾添加一个元素。\",\"std::vector<int> myVector; myVector.push_back(42); // 向向量末尾添加元素 42\",\"访问元素：可以使用下标运算符 [] 或 at 函数来访问 vector 中的元素。\",\"int firstElement = myVector[0]; // 访问第一个元素 int secondElement = myVector.at(1); // 访问第二个元素\",\"注意：使用[] 时，该元素必须存在\",\"//错误用法 vector<int>a; a[0]=1;//定义容器a时，容器为空不存在a[0] //正确用法 vector<int>a(10); a[0]=1;\",\"删除元素：pop_back 函数用于删除 vector 末尾的元素。\",\"myVector.pop_back(); // 删除向量末尾的元素\",\"清空容器：clear 函数可以用来清空 vector 中的所有元素。\",\"myVector.clear(); // 清空整个向量\",\"获取容器大小和容量：size 函数用于获取容器中元素的数量，而 capacity 函数用于获取容器的容量。\",\"int size = myVector.size(); // 获取元素数量 int capacity = myVector.capacity(); // 获取容器容量\",\"重设容器大小：resize 函数可以用来改变 vector 的大小，可以指定新大小并指定新元素的默认值。\",\"myVector.resize(10); // 将向量的大小调整为 10，多余的元素被默认值填充 myVector.resize(20, 0); // 将向量的大小调整为 20，多余的元素用 0 填充\",\"预分配内存：reserve 函数可以用来预分配内存，以提高性能。它不会更改 vector 的大小，但会增加容器的容量。\",\"myVector.reserve(100); // 预分配足够的内存以容纳 100 个元素\",\"插入和删除指定位置的元素：insert 函数用于在指定位置插入元素，erase 函数用于删除指定位置的元素。\",\"myVector.insert(myVector.begin() + 2, 99); // 在第三个位置插入元素 99 myVector.erase(myVector.begin() + 1); // 删除第二个位置的元素\",\"获取首尾迭代器：begin 和 end 函数用于获取 vector 的起始和结束迭代器，可用于遍历容器。\",\"for (std::vector<int>::iterator it = myVector.begin(); it != myVector.end(); ++it) { // 使用迭代器访问元素 int element = *it; }\",\"将就地构造的元素插入到向量中：emplace_back 和 emplace 成员函数允许你在容器的末尾或指定位置以构造函数的方式插入新元素，而不是通过拷贝构造或移动构造。 emplace_back 用于在 vector 的末尾插入新元素，而 emplace 则用于在指定位置插入新元素。\",\"#include <iostream> #include <vector> class MyClass { public: MyClass(int a, double b) : integer(a), floating_point(b) {} private: int integer; double floating_point; }; int main() { std::vector<MyClass> myVector; // 使用 emplace_back 在 vector 末尾插入元素 myVector.emplace_back(1, 3.14); // 使用 emplace 在指定位置插入元素 myVector.emplace(myVector.begin() + 1, 7, 1.23); return 0; }\",\"交换两个容器内容：\",\"swap 成员函数将它们的内容互换。注意，swap 不会复制元素，而是直接交换指向元素的内部指针，因此它的执行速度非常快。\",\"swap 成员函数对于在不需要复制大量元素的情况下快速交换容器内容非常有用，尤其是对于大型容器。这有助于减少内存开销和提高性能。\",\"#include <iostream> #include <vector> int main() { std::vector<int> vector1 = {1, 2, 3}; std::vector<int> vector2 = {4, 5, 6}; // 使用 swap 交换 vector1 和 vector2 的内容 vector1.swap(vector2); return 0; }\",\"判断容器是否为空：如果向量为空，则返回 true；如果向量不为空，则返回 false。\",\"vector<int>a; a.empty();\",\"容器遍历 使用迭代器：\",\"#include <iostream> #include <vector> int main() { std::vector<int> myVector = {1, 2, 3, 4, 5}; for (std::vector<int>::iterator it = myVector.begin(); it != myVector.end(); ++it) { std::cout << *it << \\\" \\\"; } return 0; }\",\"使用 C++11 的自动类型推导：\",\"#include <iostream> #include <vector> int main() { std::vector<int> myVector = {1, 2, 3, 4, 5}; for (auto element : myVector) { std::cout << element << \\\" \\\"; } return 0; //注意：此时不能通过element去改变容器内的值 //若想通过element去改变容器内的值，则需要将auto element改为auto &element }\",\"多维vector的使用 定义及初始化 以二维vector为例：\",\"使用默认值初始化：\",\"#include <iostream> #include <vector> int main() { int rows = 3; int cols = 4; // 初始化一个3x4的二维 vector，所有元素都为默认值（0） std::vector<std::vector<int>> twoDimensionalVector(rows, std::vector<int>(cols)); // 输出二维 vector for (int i = 0; i < rows; ++i) { for (int j = 0; j < cols; ++j) { std::cout << twoDimensionalVector[i][j] << \\\" \\\"; } std::cout << std::endl; } return 0; }\",\"指定初始值初始化：\",\"#include <iostream> #include <vector> int main() { int rows = 3; int cols = 4; // 初始化一个3x4的二维 vector，所有元素都初始化为特定值（例如-1） std::vector<std::vector<int>> twoDimensionalVector(rows, std::vector<int>(cols, -1)); // 输出二维 vector for (int i = 0; i < rows; ++i) { for (int j = 0; j < cols; ++j) { std::cout << twoDimensionalVector[i][j] << \\\" \\\"; } std::cout << std::endl; } return 0; }\",\"易错提醒： 越界访问： 访问 std::vector 中的元素时要小心，确保不越界。使用下标访问元素时，确保索引值在有效范围内，否则会导致未定义行为。\",\"std::vector<int> myVector = {1, 2, 3}; int value = myVector[5]; // 这可能导致未定义行为\",\"解决方法： 使用 .at() 成员函数或检查索引范围来避免越界访问。\",\"在循环中修改容器： 在使用迭代器或循环遍历 std::vector 时，不要在循环内修改容器，因为在修改 std::vector 的过程中可能会使迭代器失效，从而导致未定义行为。这是因为 std::vector 可能会重新分配内存来容纳新元素，这会导致旧的迭代器失效。\",\"std::vector<int> myVector = {1, 2, 3}; for (auto it = myVector.begin(); it != myVector.end(); ++it) { if (*it == 2) { myVector.erase(it); // 这可能导致迭代器失效 } }\",\"解决方法：\",\"std::vector<int> myVector = {1, 2, 3, 4, 5}; for (auto it = myVector.begin(); it != myVector.end(); ) { if (*it == 2) { it = myVector.erase(it); // 删除元素并获得下一个有效的迭代器 } else { ++it; // 前进到下一个元素 } }\",\"内存重新分配： 当 std::vector 不断增长时，它可能会频繁地重新分配内存，从而影响性能。使用 reserve() 函数来提前分配足够的内存，以避免频繁的重新分配。\",\"std::vector<int> myVector; for (int i = 0; i < 1000; ++i) { myVector.push_back(i); // 可能导致频繁内存重新分配 } // 改进：提前分配内存 myVector.reserve(1000);\"]},\"18\":{\"c\":[\"Vector\",\"C++\"]},\"19\":{\"c\":[\"STL\"]},\"20\":{\"h\":\"博客搭建\",\"t\":[\"此教程将指引你创建一个 VuePress Theme Hope 项目。\"]},\"21\":{\"h\":\"教程章节\",\"t\":[\"运行环境搭建\",\"创建项目\",\"配置项目\",\"项目部署\"]},\"22\":{\"c\":[\"学习笔记\",\"VuePress\"]},\"23\":{\"h\":\"项目配置\",\"t\":[\"本教程指引你如何配置 VuePress 项目。\"]},\"24\":{\"c\":[\"VuePress\",\"Tutorial\",\"Get Started\"]},\"25\":{\"c\":[\"Project Config\"]},\"26\":{\"h\":\"创建项目\",\"t\":[\"此教程将指引你创建一个 VuePress Theme Hope 项目。\"]},\"27\":{\"h\":\"1. 项目初始化\",\"t\":[\"使用 vuepress-theme-hope 主题提供的脚手架工具创建项目\",\"用管理员模式打开 cmd 窗口\",\"切换到想要放置项目的路径\",\"例如要切换到 E:\\\\Project ，执行 e: 切换到 E 盘，执行 cd [dir] 进入 [dir] 目录\",\"注意\",\"[dir]指的是你将要放置你的项目所在的文件路径\",\"执行以下命令：\",\"npm init vuepress-theme-hope my-docs\",\"注意\",\"这里的 my-docs 是一个参数，代表 VuePress Theme Hope 项目的文件夹名称，在本教程中，我们将项目生成至当前目录下的 my-docs 文件夹。 如果你有需求，你可以更改此参数来使用一个新文件夹名称。\",\"选择一些默认的配置\",\"选择包管理器 npm\",\"设置协议 MIT\",\"项目需要用到多语言么 NO\",\"你想要创建什么类型的项目 docs\",\"是否需要一个自动部署文档到 GitHub Pages 的工作流 YES\",\"选择你想使用的源 当前源\"]},\"28\":{\"h\":\"2. 安装依赖\",\"t\":[\"由于插件之间版本不同容易出现依赖冲突，可以直接修改package.json文件\",\"{ \\\"name\\\": \\\"vuepress-theme-hope-template\\\", \\\"description\\\": \\\"A project of vuepress-theme-hope\\\", \\\"version\\\": \\\"2.0.0\\\", \\\"license\\\": \\\"MIT\\\", \\\"type\\\": \\\"module\\\", \\\"scripts\\\": { \\\"docs:build\\\": \\\"vuepress-vite build src\\\", \\\"docs:clean-dev\\\": \\\"vuepress-vite dev src --clean-cache\\\", \\\"docs:dev\\\": \\\"vuepress-vite dev src\\\", \\\"docs:update-package\\\": \\\"npx vp-update\\\" }, \\\"devDependencies\\\": { \\\"@types/katex\\\": \\\"0.16.7\\\", \\\"@vue/repl\\\": \\\"4.4.2\\\", \\\"@vuepress/bundler-vite\\\": \\\"2.0.0-rc.15\\\", \\\"@vuepress/bundler-webpack\\\": \\\"2.0.0-rc.15\\\", \\\"@vuepress/helper\\\": \\\"2.0.0-rc.47\\\", \\\"@vuepress/plugin-feed\\\": \\\"2.0.0-rc.47\\\", \\\"@vuepress/plugin-revealjs\\\": \\\"2.0.0-rc.48\\\", \\\"@vueuse/core\\\": \\\"11.1.0\\\", \\\"@waline/client\\\": \\\"^3.3.2\\\", \\\"artplayer\\\": \\\"5.1.7\\\", \\\"echarts-wordcloud\\\": \\\"2.1.0\\\", \\\"flowchart.ts\\\": \\\"3.0.1\\\", \\\"katex\\\": \\\"0.16.11\\\", \\\"kotlin-playground\\\": \\\"1.30.0\\\", \\\"markmap-lib\\\": \\\"0.17.0\\\", \\\"markmap-toolbar\\\": \\\"0.17.0\\\", \\\"markmap-view\\\": \\\"0.17.0\\\", \\\"mermaid\\\": \\\"11.2.1\\\", \\\"sandpack-vue3\\\": \\\"3.1.11\\\", \\\"sass-embedded\\\": \\\"1.79.3\\\", \\\"sass-loader\\\": \\\"16.0.2\\\", \\\"vue\\\": \\\"3.5.8\\\", \\\"vuepress\\\": \\\"2.0.0-rc.15\\\", \\\"vuepress-plugin-components\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-plugin-md-enhance\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-plugin-search-pro\\\": \\\"^2.0.0-rc.54\\\", \\\"vuepress-shared\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-theme-hope\\\": \\\"2.0.0-rc.56\\\" } }\",\"用管理员模式在项目根目录(也就是你package.json所在的文件夹目录)执行以下命令，等待自动下载\",\"npm install\",\"下载完成后执行以下命令即可在本地打开博客：\",\"npm run docs:dev\",\"执行过程中出现 vuepress-theme-hope: ✖ @vuepress/plugin-redirect is not installed! 的报错是正常的，不需要管，也不要下载这个插件，容易出现依赖冲突\",\"根据返回的网址，即可在本地访问你的blog\"]},\"29\":{\"c\":[\"VuePress Theme Hope\"]},\"30\":{\"h\":\"项目部署\",\"t\":[\"本教程指引你如何部署 VuePress 项目。\"]},\"31\":{\"h\":\"推送代码到 Github\",\"t\":[\"首先创建一个 GitHub 的仓库，仓库地址是一个普通的形如 https://github.com/<USERNAME>/<REPO> 的格式。\",\"初始化 Git 仓库\",\"git init\",\"连接到远程仓库\",\"git remote add origin https://github.com/<USERNAME>/<REPO>\",\"将当前目录下的所有更改（包括新增、修改或删除的文件）添加到暂存区，准备进行下一次提交\",\"git add .\",\"如果出现有关`CRLF`、`LF`之类换行符的报错，执行以下命令之一：\",\"git config --global core.autocrlf true\",\"git add --renormalize .\",\"将当前暂存区中的更改提交到本地 Git 仓库\",\"git commit -m \\\"提交信息\\\"\",\"将本地 Git 仓库中的更改推送到远程仓库\",\"git push origin 分支\",\"分支具体查看`.github\\\\workflows\\\\deploy-docs.yml`文件\",\"静态部署\",\"npm run docs:build\"]},\"32\":{\"h\":\"使用 Github Pages 发布站点\",\"t\":[\"上一步完成推送后，应该会自动生成 gh-pages 分支，前往 GitHub 仓库的Pages，选择 gh-pages 作为 GitHub Pages 的源。\",\"你的网站将会被发布到 https://<USERNAME>.github.io/<REPO>/ 。\"]},\"33\":{\"c\":[\"VuePress\",\"GitHub\"]},\"34\":{\"h\":\"运行环境搭建\",\"t\":[\"本教程将指导你如何搭建 VuePress 的运行环境。\"]},\"35\":{\"h\":\"Node.js\",\"t\":[\"介绍\",\"Node.js® 是一个基于 Chrome's V8 JavaScript engine的 JavaScript 运行时环境。\",\"你需要下载并安装最新的长期维护版。\"]},\"36\":{\"h\":\"。\"},\"37\":{\"h\":\"2. 运行安装包，保持所有的默认设置，一路下一步即可。\",\"t\":[\"自定义安装路径\",\"不建议安装在C盘，自定义一下安装路径\"]},\"38\":{\"h\":\"3. 然后再在安装路径的根目录下新建两个文件夹， 和 ,如图所示：\"},\"39\":{\"h\":\"4. 环境配置\",\"t\":[\"建好以后开始配置环境：高级系统设置——环境变量\",\"新建一个NODE_HOME，变量值为安装路径\",\"然后再在系统变量的path中添加\",\"%NODE_HOME%\",\"%NODE_HOME%\\\\node_global\",\"%NODE_HOME%\\\\node_cache\",\"然后将用户变量默认的 C:\\\\User\\\\35025\\\\AppDate\\\\Roaming\\\\npm 改成 前面新建文件夹node_global的路径，例如我的是D:\\\\Environment\\\\nodejs\\\\node_globle\",\"到这一步，环境就已经完全配好了，现在开始查看，键盘Win+R进入cmd 输入以下指令\",\"node -v\",\"npm -v\",\"能够正确显示版本号说明安装成功\"]},\"40\":{\"h\":\"5. 修改缓存目录和全局目录\",\"t\":[\"用管理员模式打开 cmd 窗口执行以下指令\",\"-设置缓存到 node_cache 文件夹：\",\"npm config set cache [dir]\",\"-设置全局模块的安装路径到 node_global 文件夹：\",\"npm config set prefix [dir]\",\"[dir]是你对应文件夹的绝对路径\"]},\"41\":{\"c\":[\"环境配置\",\"Node.js\"]},\"42\":{\"c\":[\"Runtime\"]},\"43\":{\"h\":\"题目创建\",\"t\":[\"此教程将指引你使用Polygon平台创建 算法题目。\"]},\"44\":{\"h\":\"教程章节\",\"t\":[\"Polygon\",\"notion\",\"上传题目数据\"]},\"45\":{\"c\":[\"学习笔记\",\"Polygon\"]},\"46\":{\"h\":\"Notion\",\"t\":[\"Notion 是一个互联工作空间，可以管理 Wikis 百科、文档和项目，支持多种内容类型和视图，还有内置的 Al智能助手。\"]},\"47\":{\"c\":[\"Notion\"]},\"48\":{\"h\":\"Polygon\",\"t\":[\"本页面将简要介绍使用多人协作出题平台 Polygon 出题\"]},\"49\":{\"h\":\"📍简介\",\"t\":[\"网址：Index Page - Polygon\",\"Polygon 是一个支持多人协作的出题平台，功能非常完善。官网描述为「Polygon 的使命是为创建编程竞赛题目提供平台。」\",\"在 Codeforces (CF) 出题必须使用 Polygon。在其它地方出题，尤其是多人合作出题时，使用 Polygon 也是不错的选择。\",\"优点\",\"有版本管理系统，多人合作时不会乱成一团，也不需要互相传文件。\",\"出题系统完善，validator、generator、checker、solutions 环环相扣，输出自动生成。\",\"可以为 solutions 设置标签，错解 AC、正解未 AC 都会警告，方便地逐一卡掉错解。\",\"可以方便地对拍，拍出来的数据可以直接添加到题目数据中。\",\"发现问题可以提 issue，而不会被消息刷屏却一直没有 fix。\",\"为日后出 CF 做准备。\",\"……\"]},\"50\":{\"h\":\"📍题目创建\",\"t\":[\"Polygon 的大部分功能都不需要学，能看懂英文就基本能用了。\",\"进入网址后，先注册登陆，然后点击 New Problem 开始创建一个题目表格，注意此处的 Name 只是项目名，不是最终的题目名。\",\"点击 start 开始编辑题目\"]},\"51\":{\"h\":\"📌️General Info\",\"t\":[\"在这个页面中可以设置题目的时间限制、空间限制、题目类型（是否为交互题）。\"]},\"52\":{\"h\":\"📌️Statement\",\"t\":[\"这个页面是用来写题面和题解的。还可以通过 \\\"Review\\\" 按钮来查看题面、validator 与 checker，一般用于审核。 可以通过最上方的 \\\"In HTML\\\" 链接查看渲染后的题面，通过 \\\"Tutorial in HTML\\\" 查看渲染后的题解。\",\"如果需要在题面中添加图片，需要先在下面的 \\\"Statement Resource Files\\\" 中上传图片，然后在题面中加上 \\\\includegraphics{filename.png}。\",\"注意\",\"题面和题解都需要使用 LaTeX 的语法，不能使用 Markdown。\",\"题面编辑内容不包括样例，样例在 Tests 中生成\",\"题面编辑完后需要 Save\"]},\"53\":{\"h\":\"📌️Files\",\"t\":[\"\\\"Source Files\\\" 是用来存放 除了 solutions 外 的其它代码的，如 validator、checker、generator，如果是 IO 式交互题还有 interactor。\",\"如果这些代码需要 include 其它文件，例如 Tree-Generator，需要放在 \\\"Resource Files\\\" 中。\",\"grader 式交互参见 官方教程。\"]},\"54\":{\"h\":\"📌️Checker\",\"t\":[\"testlib.h 提供了一些内置的 checker，在选择框中有简要介绍，也可以选择后再点 \\\"View source\\\" 查看源码。\",\"注意\",\"后续需要自定义 validator、checker、generator、interactor 文件，均需要包含头文件 testlib.h\",\"自行去 https://github.com/MikeMirzayanov/testlib 将项目 clone 下来\",\"如果需要自己编写 checker，请参考官方 checker 教程。\",\"下面的 \\\"Checker tests\\\" 是通过 \\\"Add test\\\" 添加若干组输出以及对应的期望评测结果，然后点击 \\\"Run tests\\\" 就可以测试 checker 是否正确返回了评测结果。\"]},\"55\":{\"h\":\"📌️Interactor\",\"t\":[\"在 General Info 页面中勾选了 Interactive 才有该选项\",\"仅 IO 式交互题需要，请参考官方 interactor 教程。\"]},\"56\":{\"h\":\"📌️Validator\",\"t\":[\"validator 用来检测数据合法性，编写请参考官方 validator 教程。\",\"下面的 \\\"Validator tests\\\" 类似于 \\\"Checker tests\\\"，需要提供输入和期望是否合法，用来测试 validator。\"]},\"57\":{\"h\":\"📌️Tests\",\"t\":[\"这个页面是用来管理数据的。\",\"运行脚本后即可得到下述的各个数据，其中点击每个测试点的 Example 可以将测试点设置为样例，即展示在题面中。\",\"测试点的 Example 如果勾选了 \\\"Use in statements\\\"，这组数据就会成为样例，自动加在题面里。\",\"可以参考 Polygon 提供的教程 使用 Freemarker 来批量生成脚本。\"]},\"58\":{\"h\":\"📌️Stresses\",\"t\":[\"这个页面是用来对拍的。\",\"点击 \\\"Add Stress\\\" 就可以添加一组对拍，\\\"Script pattern\\\" 是一个生成数据的脚本，其中可以使用 \\\"[10..100]\\\" 之类的来表示在一个范围内随机选择。\",\"然后运行对拍，如果拍出错就会显示 \\\"Crashed\\\"，并且可以一键把这组数据加到 Tests 中。\"]},\"59\":{\"h\":\"📌️Solution Files\",\"t\":[\"这个页面是用来放解这道题的代码的，可以是正解也可以是错解。将错解传上来可以便捷地卡掉它们，也可以提醒自己需要卡掉它们。\"]},\"60\":{\"h\":\"📌️Invocations\",\"t\":[\"这个页面是用来运行 solutions 的。\",\"选择代码和测试点就可以运行了，之后可以在列表里点进去（\\\"View\\\"）查看详细信息。\",\"评测状态 \\\"FL\\\" 表示评测出错了，一般是数据没有过 validate 或者 validator/checker/interactor 之类的 RE 了。\\\"RJ\\\" 有两种情况，一种是出现了 \\\"FL\\\"，另一种是这份代码第一个测试点就没有通过。\",\"如果用时在时限的一半到两倍之间，会用黄色标识出来。\",\"如果数据中存在变量没有达到最小值或最大值，会在最下方提醒。\"]},\"61\":{\"h\":\"📌️Issues\",\"t\":[\"用来提 Issue 的地方。\"]},\"62\":{\"h\":\"📌️Packages\",\"t\":[\"Package 包含了一道题的全部信息。Commit Changes 后，点击 Standard 即可进行打包。打包成功后，基本的题目就算创建完成了。\",\"\\\"Verify\\\" 是测试所有 solution 都符合标签（AC、WA、TLE），并且 checker 通过 checker tests，validator 通过 validator tests。\"]},\"63\":{\"c\":[\"Polygon\"]},\"64\":{\"h\":\"上传题目数据\"},\"65\":{\"c\":[\"OJ\"]},\"66\":{\"h\":\"招聘网站爬虫\",\"t\":[\"此教程将指引你创建一个 招聘网站爬虫 项目。\"]},\"67\":{\"h\":\"教程章节\",\"t\":[\"环境配置\",\"数据爬取\",\"数据处理\",\"数据可视化\"]},\"68\":{\"c\":[\"学习笔记\",\"python\",\"爬虫\"]},\"69\":{\"h\":\"环境配置\",\"t\":[\"本教程将指导你如何配置 招聘网站爬虫 的运行环境。\"]},\"70\":{\"h\":\"⬇️Python 安装\",\"t\":[\"前言\",\"人生苦短，快用Python！\",\"Python作为众多编程语言之一，是学习者比较容易上手的一门语言，有着简单、易学、好用等特点\"]},\"71\":{\"h\":\"。\"},\"72\":{\"h\":\"2. ✅️️运行安装包。\",\"t\":[\"相关信息\",\"python安装非常简单，双击下载好的安装包，进入选择安装方式\",\"第一种：Install Now 立即安装，即采用默认安装方式，不能自行指定安装的路径。\",\"第二种：Customize installation 自定义安装，可以自己选择安装的路径（建议自定义安装）。\",\"选择第二种，自定义安装，把最底下Add python.exe to PATH打上勾，否则需要手动添加环境变量\",\"下一步：默认把所有的勾选上即可\",\"下一步：修改安装路径，建议别安装在C盘。如果没有联网，请不要勾选第六项\",\"下一步：安装完成，点击Close关闭即可\",\"安装完成之后，使用win+R键输入cmd进入DOS界面，输入python验证，如下图所示即安装成功，继续输入exit()退出即可\"]},\"73\":{\"h\":\"⬇️Pycharm 安装\",\"t\":[\"相关信息\",\"PyCharm是一款非常好用的Python IDE，由JetBrains开发而成。\",\"官方下载：Download PyCharm: Python IDE for Professional Developers by JetBrains\",\"我下载的是 专业版本\",\"PyCharm针对每个平台都有Professional和Community两个版本，自己可根据自己的需要进行选择。\",\"Professional：专业版（建议选择专业版），功能强大，属于收费版。\",\"Community：社区版，只支持Python开发，开源、免费，用作学习也够用。\"]},\"74\":{\"h\":\"1. ✅️️安装包下载\",\"t\":[\"由于专业版本需要付费，一下包含破解教程\",\"警告\",\"涉及版权，自行选择\",\"微信公众号搜索软件管家\",\"对话中发送pycharm\"]},\"75\":{\"h\":\"2. ✅️️Pycharm 安装教程\",\"t\":[\"下载的内容为 JetBrains 全家桶，安装教程以IDEA为例子\",\"下面将讲解 Pycharm 的安装教程，破解过程与IDEA一致\",\"首先找到解压包下的安装包\",\"PyCharm的安装通用非常简单，双击进行下一步即可\",\"下一步：修改安装路径，建议别放在C盘。\",\"下一步：可以都勾选上\",\"下一步：直接点击Install安装即可\",\"安装完成：点击I want to manually reboot later稍后重启系统\",\"如何破解，请参照公众号文章教程\"]},\"76\":{\"h\":\"3.✅️️Pycharm 常用快捷键\",\"t\":[\"折叠 Ctrl -: 折叠当前代码 Ctrl +: 展开当前代码S Ctrl Shift -: 折叠所有代码 Ctrl Shift +: 展开所有代码 移动 Shift+Enter: 在行中间执行时，智能跳到下一行。 Ctrl+Alt+Enter: 向上插入一行 注释 Ctrl /: 注释、取消注释行 编辑 Ctrl + D: 未选中时，复制当前行到下一行，选中时复制粘贴选中部分。 删除 Ctrl + Y: 删除当前行 查看 Ctrl + Q: 查看文档 缩进 Shift + Tab: 反向退格 替换 Ctrl + r: 替换\",\"以上就是Python+Pycharm的详细安装过程，及PyCharm的使用！\"]},\"77\":{\"c\":[\"Python\",\"Jupyter notebook\",\"pyecharts\"]},\"78\":{\"c\":[\"爬虫\"]},\"79\":{\"h\":\"数据处理\",\"t\":[\"本教程将指导你如何处理 爬取 招聘网站 后的求职信息 。\"]},\"80\":{\"h\":\"1. ✅️️数据合并\",\"t\":[\"前面我们获取了两个网站的数据，我们现在将两个网站数据进行合并\",\"def merge_and_deduplicate(file1, file2, output_file): # 读取两个 CSV 文件的数据 df1 = pd.read_csv(file1) df2 = pd.read_csv(file2) # 合并两个 DataFrame df_combined = pd.concat([df1, df2]) # 去除重复行，假设根据职位、公司、城市字段去重 df_cleaned = df_combined.drop_duplicates(subset=['职位', '公司', '城市']) # 保存合并且去重后的数据到新的 CSV 文件 df_cleaned.to_csv(output_file, index=False) print(f\\\"数据已去重并保存为 {output_file}\\\")\",\"批量收集网站数据\",\"keywords = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] for keyword in keywords: city = '全国' safe_keyword = keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') safe_city = city.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') zhilian_spider = Zhilian(keyword=keyword, city=city) zhilian_spider.run() # 创建 Boss 对象并生成对应的 CSV 文件 boss_spider = Boss(keyword=keyword, city=city) boss_spider.run() file1 = f'Boss直聘_关键词_{safe_keyword}_城市_{safe_city}.csv' file2 = f'智联招聘_关键词_{safe_keyword}_城市_{safe_city}.csv' output_file = f'{safe_keyword}.csv' merge_and_deduplicate(file1, file2, output_file)\"]},\"81\":{\"h\":\"2. ✅️️数据处理\",\"t\":[\"前言\",\"我们在招聘网站中获取到的数据，有些需要进行处理 例如薪资\",\"日期有 时，日，周，月 单位有 元，千，万，k，w 还有一些为面议\",\"比如还有城市\",\"城市对应的省份，我们在获取城市代码的过程中可以获取到它对应的省（参考智联招聘的city.json文件）\",\"但是该文件的省份为缩写，由于我们在后面的可视化表格需要全称，故我们在此一并处理\",\"def getUnit(text): x = 1 if('时' in text): x = 8*30 elif ('周' in text): x = 4 elif ('日' in text) or ('天' in text): x = 30 if('万' in text) or ('w' in text) or ('W' in text): return 10000 * x if('千' in text) or ('k' in text) or ('K' in text): return 1000 * x return 1 * x def getSalary(salary): parts = str(salary).split('-') if len(parts) ==2: part1, part2 = parts ##正则表达式获取数字（包含小数） number1 = re.match(r\\\"(\\\\d+(\\\\.\\\\d+)?)\\\", part1) number2 = re.match(r\\\"(\\\\d+(\\\\.\\\\d+)?)\\\", part2) number1 = number1.group(1) number2 = number2.group(1) text1 = part1[len(number1):] text2 = part2[len(number2):] #获取单位 p1 = getUnit(text1) p2 = getUnit(text2) if not text1 : p1 = p2 return [int(float(number1) * p1), int(float(number2) * p2)] else: return False #获取城市对应省份全称 def getProvince(province): for pro in ['内蒙古自治区', '新疆维吾尔自治区', '西藏自治区', '广西壮族自治区', '宁夏回族自治区', '香港特别行政区', '澳门特别行政区', '北京市','天津市', '重庆市', '上海市']: if province in pro: return pro return province + '省' city_dict = {'北京': '北京', '上海': '上海', '天津': '天津', '重庆': '重庆', '哈尔滨': '黑龙江', '齐齐哈尔': '黑龙江', '牡丹江': '黑龙江', '佳木斯': '黑龙江', '绥化': '黑龙江', '黑河': '黑龙江', '伊春': '黑龙江', '大庆': '黑龙江', '七台河': '黑龙江', '鸡西': '黑龙江', '鹤岗': '黑龙江', '双鸭山': '黑龙江', '大兴安岭地区': '黑龙江', '长春': '吉林', '吉林': '吉林', '四平': '吉林', '通化': '吉林', '白城': '吉林', '辽源': '吉林', '松原': '吉林', '白山': '吉林', '延边朝鲜族自治州': '吉林', '沈阳': '辽宁', '大连': '辽宁', '鞍山': '辽宁', '抚顺': '辽宁', '本溪': '辽宁', '丹东': '辽宁', '锦州': '辽宁', '营口': '辽宁', '阜新': '辽宁', '辽阳': '辽宁', '铁岭': '辽宁', '朝阳': '辽宁', '盘锦': '辽宁', '葫芦岛': '辽宁', '呼和浩特': '内蒙古', '包头': '内蒙古', '乌海': '内蒙古', '通辽': '内蒙古', '赤峰': '内蒙古', '鄂尔多斯': '内蒙古', '呼伦贝尔': '内蒙古', '巴彦淖尔': '内蒙古', '乌兰察布': '内蒙古', '锡林郭勒盟': '内蒙古', '兴安盟': '内蒙古', '阿拉善盟': '内蒙古', '石家庄': '河北', '保定': '河北', '张家口': '河北', '承德': '河北', '唐山': '河北', '廊坊': '河北', '沧州': '河北', '衡水': '河北', '邢台': '河北', '邯郸': '河北', '秦皇岛': '河北', '太原': '山西', '大同': '山西', '阳泉': '山西', '晋中': '山西', '长治': '山西', '晋城': '山西', '临汾': '山西', '运城': '山西', '朔州': '山西', '忻州': '山西', '吕梁': '山西', '西安': '陕西', '咸阳': '陕西', '延安': '陕西', '榆林': '陕西', '渭南': '陕西', '商洛': '陕西', '安康': '陕西', '汉中': '陕西', '宝鸡': '陕西', '铜川': '陕西', '济南': '山东', '青岛': '山东', '淄博': '山东', '德州': '山东', '烟台': '山东', '潍坊': '山东', '济宁': '山东', '泰安': '山东', '临沂': '山东', '菏泽': '山东', '滨州': '山东', '东营': '山东', '威海': '山东', '枣庄': '山东', '日照': '山东', '聊城': '山东', '乌鲁木齐': '新疆', '克拉玛依': '新疆', '昌吉回族自治州': '新疆', '巴音郭楞蒙古自治州': '新疆', '博尔塔拉蒙古自治州': '新疆', '伊犁哈萨克自治州': '新疆', '吐鲁番': '新疆', '哈密': '新疆', '阿克苏地区': '新疆', '克孜勒苏柯尔克孜自治州': '新疆', '喀什地区': '新疆', '和田地区': '新疆', '塔城地区': '新疆', '阿勒泰地区': '新疆', '石河子': '新疆', '阿拉尔': '新疆', '图木舒克': '新疆', '五家渠': '新疆', '铁门关': '新疆', '北屯市': '新疆', '可克达拉市': '新疆', '昆玉市': '新疆', '双河市': '新疆', '新星市': '新疆', '胡杨河市': '新疆', '白杨市': '新疆', '拉萨': '西藏', '日喀则': '西藏', '昌都': '西藏', '林芝': '西藏', '山南': '西藏', '那曲': '西藏', '阿里地区': '西藏', '西宁': '青海', '海东': '青海', '海北藏族自治州': '青海', '黄南藏族自治州': '青海', '海南藏族自治州': '青海', '果洛藏族自治州': '青海', '玉树藏族自治州': '青海', '海西蒙古族藏族自治州': '青海', '兰州': '甘肃', '定西': '甘肃', '平凉': '甘肃', '庆阳': '甘肃', '武威': '甘肃', '金昌': '甘肃', '张掖': '甘肃', '酒泉': '甘肃', '天水': '甘肃', '白银': '甘肃', '陇南': '甘肃', '嘉峪关': '甘肃', '临夏回族自治州': '甘肃', '甘南藏族自治州': '甘肃', '银川': '宁夏', '石嘴山': '宁夏', '吴忠': '宁夏', '固原': '宁夏', '中卫': '宁夏', '郑州': '河南', '安阳': '河南', '新乡': '河南', '许昌': '河南', '平顶山': '河南', '信阳': '河南', '南阳': '河南', '开封': '河南', '洛阳': '河南', '商丘': '河南', '焦作': '河南', '鹤壁': '河南', '濮阳': '河南', '周口': '河南', '漯河': '河南', '驻马店': '河南', '三门峡': '河南', '济源': '河南', '南京': '江苏', '无锡': '江苏', '镇江': '江苏', '苏州': '江苏', '南通': '江苏', '扬州': '江苏', '盐城': '江苏', '徐州': '江苏', '淮安': '江苏', '连云港': '江苏', '常州': '江苏', '泰州': '江苏', '宿迁': '江苏', '武汉': '湖北', '襄阳': '湖北', '鄂州': '湖北', '孝感': '湖北', '黄冈': '湖北', '黄石': '湖北', '咸宁': '湖北', '荆州': '湖北', '宜昌': '湖北', '十堰': '湖北', '随州': '湖北', '荆门': '湖北', '恩施土家族苗族自治州': '湖北', '仙桃': '湖北', '潜江': '湖北', '天门': '湖北', '神农架': '湖北', '杭州': '浙江', '湖州': '浙江', '嘉兴': '浙江', '宁波': '浙江', '绍兴': '浙江', '台州': '浙江', '温州': '浙江', '丽水': '浙江', '金华': '浙江', '衢州': '浙江', '舟山': '浙江', '合肥': '安徽', '蚌埠': '安徽', '芜湖': '安徽', '淮南': '安徽', '马鞍山': '安徽', '安庆': '安徽', '宿州': '安徽', '阜阳': '安徽', '亳州': '安徽', '滁州': '安徽', '淮北': '安徽', '铜陵': '安徽', '宣城': '安徽', '六安': '安徽', '池州': '安徽', '黄山': '安徽', '福州': '福建', '厦门': '福建', '宁德': '福建', '莆田': '福建', '泉州': '福建', '漳州': '福建', '龙岩': '福建', '三明': '福建', '南平': '福建', '南昌': '江西', '九江': '江西', '上饶': '江西', '抚州': '江西', '宜春': '江西', '吉安': '江西', '赣州': '江西', '景德镇': '江西', '萍乡': '江西', '新余': '江西', '鹰潭': '江西', '长沙': '湖南', '湘潭': '湖南', '株洲': '湖南', '衡阳': '湖南', '郴州': '湖南', '常德': '湖南', '益阳': '湖南', '娄底': '湖南', '邵阳': '湖南', '岳阳': '湖南', '张家界': '湖南', '怀化': '湖南', '永州': '湖南', '湘西土家族苗族自治州': '湖南', '贵阳': '贵州', '遵义': '贵州', '安顺': '贵州', '铜仁': '贵州', '毕节': '贵州', '六盘水': '贵州', '黔东南苗族侗族自治州': '贵州', '黔南布依族苗族自治州': '贵州', '黔西南布依族苗族自治州': '贵州', '成都': '四川', '攀枝花': '四川', '自贡': '四川', '绵阳': '四川', '南充': '四川', '达州': '四川', '遂宁': '四川', '广安': '四川', '巴中': '四川', '泸州': '四川', '宜宾': '四川', '内江': '四川', '资阳': '四川', '乐山': '四川', '眉山': '四川', '雅安': '四川', '德阳': '四川', '广元': '四川', '阿坝藏族羌族自治州': '四川', '凉山彝族自治州': '四川', '甘孜藏族自治州': '四川', '广州': '广东', '韶关': '广东', '惠州': '广东', '梅州': '广东', '汕头': '广东', '深圳': '广东', '珠海': '广东', '佛山': '广东', '肇庆': '广东', '湛江': '广东', '江门': '广东', '河源': '广东', '清远': '广东', '云浮': '广东', '潮州': '广东', '东莞': '广东', '中山': '广东', '阳江': '广东', '揭阳': '广东', '茂名': '广东', '汕尾': '广东', '东沙群岛': '广东', '昆明': '云南', '曲靖': '云南', '保山': '云南', '玉溪': '云南', '普洱': '云南', '昭通': '云南', '临沧': '云南', '丽江': '云南', '西双版纳傣族自治州': '云南', '文山壮族苗族自治州': '云南', '红河哈尼族彝族自治州': '云南', '德宏傣族景颇族自治州': '云南', '怒江傈僳族自治州': '云南', '迪庆藏族自治州': '云南', '大理白族自治州': '云南', '楚雄彝族自治州': '云南', '南宁': '广西', '崇左': '广西', '柳州': '广西', '来宾': '广西', '桂林': '广西', '梧州': '广西', '贺州': '广西', '贵港': '广西', '玉林': '广西', '百色': '广西', '钦州': '广西', '河池': '广西', '北海': '广西', '防城港': '广西', '海口': '海南', '三亚': '海南', '三沙': '海南', '儋州': '海南', '五指山': '海南', '琼海': '海南', '文昌': '海南', '万宁': '海南', '东方': '海南', '定安': '海南', '屯昌': '海南', '澄迈': '海南', '临高': '海南', '白沙黎族自治县': '海南', '昌江黎族自治县': '海南', '乐东黎族自治县': '海南', '陵水黎族自治县': '海南', '保亭黎族苗族自治县': '海南', '琼中黎族苗族自治县': '海南', '香港': '香港', '澳门': '澳门', '台湾': '台湾'}\"]},\"82\":{\"h\":\"📌完整代码\",\"t\":[\"from DrissionPage import SessionPage, ChromiumPage import re import csv import pandas as pd def getUnit(text): x = 1 if('时' in text): x = 8*30 elif ('周' in text): x = 4 elif ('日' in text) or ('天' in text): x = 30 if('万' in text) or ('w' in text) or ('W' in text): return 10000 * x if('千' in text) or ('k' in text) or ('K' in text): return 1000 * x return 1 * x def getSalary(salary): parts = str(salary).split('-') if len(parts) ==2: part1, part2 = parts number1 = re.match(r\\\"(\\\\d+(\\\\.\\\\d+)?)\\\", part1) number2 = re.match(r\\\"(\\\\d+(\\\\.\\\\d+)?)\\\", part2) number1 = number1.group(1) number2 = number2.group(1) text1 = part1[len(number1):] text2 = part2[len(number2):] p1 = getUnit(text1) p2 = getUnit(text2) if not text1 : p1 = p2 return [int(float(number1) * p1), int(float(number2) * p2)] else: return False def getProvince(province): for pro in ['内蒙古自治区', '新疆维吾尔自治区', '西藏自治区', '广西壮族自治区', '宁夏回族自治区', '香港特别行政区', '澳门特别行政区', '北京市','天津市', '重庆市', '上海市']: if province in pro: return pro return province + '省' city_dict = {'北京': '北京', '上海': '上海', '天津': '天津', '重庆': '重庆', '哈尔滨': '黑龙江', '齐齐哈尔': '黑龙江', '牡丹江': '黑龙江', '佳木斯': '黑龙江', '绥化': '黑龙江', '黑河': '黑龙江', '伊春': '黑龙江', '大庆': '黑龙江', '七台河': '黑龙江', '鸡西': '黑龙江', '鹤岗': '黑龙江', '双鸭山': '黑龙江', '大兴安岭地区': '黑龙江', '长春': '吉林', '吉林': '吉林', '四平': '吉林', '通化': '吉林', '白城': '吉林', '辽源': '吉林', '松原': '吉林', '白山': '吉林', '延边朝鲜族自治州': '吉林', '沈阳': '辽宁', '大连': '辽宁', '鞍山': '辽宁', '抚顺': '辽宁', '本溪': '辽宁', '丹东': '辽宁', '锦州': '辽宁', '营口': '辽宁', '阜新': '辽宁', '辽阳': '辽宁', '铁岭': '辽宁', '朝阳': '辽宁', '盘锦': '辽宁', '葫芦岛': '辽宁', '呼和浩特': '内蒙古', '包头': '内蒙古', '乌海': '内蒙古', '通辽': '内蒙古', '赤峰': '内蒙古', '鄂尔多斯': '内蒙古', '呼伦贝尔': '内蒙古', '巴彦淖尔': '内蒙古', '乌兰察布': '内蒙古', '锡林郭勒盟': '内蒙古', '兴安盟': '内蒙古', '阿拉善盟': '内蒙古', '石家庄': '河北', '保定': '河北', '张家口': '河北', '承德': '河北', '唐山': '河北', '廊坊': '河北', '沧州': '河北', '衡水': '河北', '邢台': '河北', '邯郸': '河北', '秦皇岛': '河北', '太原': '山西', '大同': '山西', '阳泉': '山西', '晋中': '山西', '长治': '山西', '晋城': '山西', '临汾': '山西', '运城': '山西', '朔州': '山西', '忻州': '山西', '吕梁': '山西', '西安': '陕西', '咸阳': '陕西', '延安': '陕西', '榆林': '陕西', '渭南': '陕西', '商洛': '陕西', '安康': '陕西', '汉中': '陕西', '宝鸡': '陕西', '铜川': '陕西', '济南': '山东', '青岛': '山东', '淄博': '山东', '德州': '山东', '烟台': '山东', '潍坊': '山东', '济宁': '山东', '泰安': '山东', '临沂': '山东', '菏泽': '山东', '滨州': '山东', '东营': '山东', '威海': '山东', '枣庄': '山东', '日照': '山东', '聊城': '山东', '乌鲁木齐': '新疆', '克拉玛依': '新疆', '昌吉回族自治州': '新疆', '巴音郭楞蒙古自治州': '新疆', '博尔塔拉蒙古自治州': '新疆', '伊犁哈萨克自治州': '新疆', '吐鲁番': '新疆', '哈密': '新疆', '阿克苏地区': '新疆', '克孜勒苏柯尔克孜自治州': '新疆', '喀什地区': '新疆', '和田地区': '新疆', '塔城地区': '新疆', '阿勒泰地区': '新疆', '石河子': '新疆', '阿拉尔': '新疆', '图木舒克': '新疆', '五家渠': '新疆', '铁门关': '新疆', '北屯市': '新疆', '可克达拉市': '新疆', '昆玉市': '新疆', '双河市': '新疆', '新星市': '新疆', '胡杨河市': '新疆', '白杨市': '新疆', '拉萨': '西藏', '日喀则': '西藏', '昌都': '西藏', '林芝': '西藏', '山南': '西藏', '那曲': '西藏', '阿里地区': '西藏', '西宁': '青海', '海东': '青海', '海北藏族自治州': '青海', '黄南藏族自治州': '青海', '海南藏族自治州': '青海', '果洛藏族自治州': '青海', '玉树藏族自治州': '青海', '海西蒙古族藏族自治州': '青海', '兰州': '甘肃', '定西': '甘肃', '平凉': '甘肃', '庆阳': '甘肃', '武威': '甘肃', '金昌': '甘肃', '张掖': '甘肃', '酒泉': '甘肃', '天水': '甘肃', '白银': '甘肃', '陇南': '甘肃', '嘉峪关': '甘肃', '临夏回族自治州': '甘肃', '甘南藏族自治州': '甘肃', '银川': '宁夏', '石嘴山': '宁夏', '吴忠': '宁夏', '固原': '宁夏', '中卫': '宁夏', '郑州': '河南', '安阳': '河南', '新乡': '河南', '许昌': '河南', '平顶山': '河南', '信阳': '河南', '南阳': '河南', '开封': '河南', '洛阳': '河南', '商丘': '河南', '焦作': '河南', '鹤壁': '河南', '濮阳': '河南', '周口': '河南', '漯河': '河南', '驻马店': '河南', '三门峡': '河南', '济源': '河南', '南京': '江苏', '无锡': '江苏', '镇江': '江苏', '苏州': '江苏', '南通': '江苏', '扬州': '江苏', '盐城': '江苏', '徐州': '江苏', '淮安': '江苏', '连云港': '江苏', '常州': '江苏', '泰州': '江苏', '宿迁': '江苏', '武汉': '湖北', '襄阳': '湖北', '鄂州': '湖北', '孝感': '湖北', '黄冈': '湖北', '黄石': '湖北', '咸宁': '湖北', '荆州': '湖北', '宜昌': '湖北', '十堰': '湖北', '随州': '湖北', '荆门': '湖北', '恩施土家族苗族自治州': '湖北', '仙桃': '湖北', '潜江': '湖北', '天门': '湖北', '神农架': '湖北', '杭州': '浙江', '湖州': '浙江', '嘉兴': '浙江', '宁波': '浙江', '绍兴': '浙江', '台州': '浙江', '温州': '浙江', '丽水': '浙江', '金华': '浙江', '衢州': '浙江', '舟山': '浙江', '合肥': '安徽', '蚌埠': '安徽', '芜湖': '安徽', '淮南': '安徽', '马鞍山': '安徽', '安庆': '安徽', '宿州': '安徽', '阜阳': '安徽', '亳州': '安徽', '滁州': '安徽', '淮北': '安徽', '铜陵': '安徽', '宣城': '安徽', '六安': '安徽', '池州': '安徽', '黄山': '安徽', '福州': '福建', '厦门': '福建', '宁德': '福建', '莆田': '福建', '泉州': '福建', '漳州': '福建', '龙岩': '福建', '三明': '福建', '南平': '福建', '南昌': '江西', '九江': '江西', '上饶': '江西', '抚州': '江西', '宜春': '江西', '吉安': '江西', '赣州': '江西', '景德镇': '江西', '萍乡': '江西', '新余': '江西', '鹰潭': '江西', '长沙': '湖南', '湘潭': '湖南', '株洲': '湖南', '衡阳': '湖南', '郴州': '湖南', '常德': '湖南', '益阳': '湖南', '娄底': '湖南', '邵阳': '湖南', '岳阳': '湖南', '张家界': '湖南', '怀化': '湖南', '永州': '湖南', '湘西土家族苗族自治州': '湖南', '贵阳': '贵州', '遵义': '贵州', '安顺': '贵州', '铜仁': '贵州', '毕节': '贵州', '六盘水': '贵州', '黔东南苗族侗族自治州': '贵州', '黔南布依族苗族自治州': '贵州', '黔西南布依族苗族自治州': '贵州', '成都': '四川', '攀枝花': '四川', '自贡': '四川', '绵阳': '四川', '南充': '四川', '达州': '四川', '遂宁': '四川', '广安': '四川', '巴中': '四川', '泸州': '四川', '宜宾': '四川', '内江': '四川', '资阳': '四川', '乐山': '四川', '眉山': '四川', '雅安': '四川', '德阳': '四川', '广元': '四川', '阿坝藏族羌族自治州': '四川', '凉山彝族自治州': '四川', '甘孜藏族自治州': '四川', '广州': '广东', '韶关': '广东', '惠州': '广东', '梅州': '广东', '汕头': '广东', '深圳': '广东', '珠海': '广东', '佛山': '广东', '肇庆': '广东', '湛江': '广东', '江门': '广东', '河源': '广东', '清远': '广东', '云浮': '广东', '潮州': '广东', '东莞': '广东', '中山': '广东', '阳江': '广东', '揭阳': '广东', '茂名': '广东', '汕尾': '广东', '东沙群岛': '广东', '昆明': '云南', '曲靖': '云南', '保山': '云南', '玉溪': '云南', '普洱': '云南', '昭通': '云南', '临沧': '云南', '丽江': '云南', '西双版纳傣族自治州': '云南', '文山壮族苗族自治州': '云南', '红河哈尼族彝族自治州': '云南', '德宏傣族景颇族自治州': '云南', '怒江傈僳族自治州': '云南', '迪庆藏族自治州': '云南', '大理白族自治州': '云南', '楚雄彝族自治州': '云南', '南宁': '广西', '崇左': '广西', '柳州': '广西', '来宾': '广西', '桂林': '广西', '梧州': '广西', '贺州': '广西', '贵港': '广西', '玉林': '广西', '百色': '广西', '钦州': '广西', '河池': '广西', '北海': '广西', '防城港': '广西', '海口': '海南', '三亚': '海南', '三沙': '海南', '儋州': '海南', '五指山': '海南', '琼海': '海南', '文昌': '海南', '万宁': '海南', '东方': '海南', '定安': '海南', '屯昌': '海南', '澄迈': '海南', '临高': '海南', '白沙黎族自治县': '海南', '昌江黎族自治县': '海南', '乐东黎族自治县': '海南', '陵水黎族自治县': '海南', '保亭黎族苗族自治县': '海南', '琼中黎族苗族自治县': '海南', '香港': '香港', '澳门': '澳门', '台湾': '台湾'} output_file = f'data.csv' f = open(output_file, mode='w', encoding='utf-8', newline='') csv_writer = csv.DictWriter(f, fieldnames=['keyword', 'name', 'averSalary', 'number']) csv_writer.writeheader() keywords = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] for keyword in keywords: safe_keyword = keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') file = f'{safe_keyword}.csv' df = pd.read_csv(file) city_info = {} for index, row in df.iterrows(): salary = getSalary(row['薪资']) if salary == False: # print(row) continue if row['城市'] in city_dict: city = city_dict[row['城市']] else: # print(row) continue if (city in city_info): city_info[city]['minSalary'] += salary[0] city_info[city]['maxSalary'] += salary[1] city_info[city]['number'] += 1 else: info = { 'minSalary': salary[0], 'maxSalary': salary[1], 'number': 1, 'city': city, } city_info[city] = info aversal=0 number=0 for city in city_info: aversal += int((city_info[city]['minSalary']+city_info[city]['maxSalary'])/(2*city_info[city]['number'])) number += 1 data = { 'keyword': keyword, 'name': getProvince(city), 'averSalary': int((city_info[city]['minSalary']+city_info[city]['maxSalary'])/(2*city_info[city]['number'])), 'number': city_info[city]['number'], } csv_writer.writerow(data) #计算工作的平均工资（后面制作表格需要） print(int(aversal/number),end=', ')\",\"生成的数据如下\",\"12373, 10794, 9616, 15584, 11876, 11348, 14679, 12854, 14158, 15898, 10988, 12989, 15096, 10200, 17128, 18482, 8751\",\"处理完成后的数据如下\"]},\"83\":{\"c\":[\"Python\",\"pandas\",\"re\",\"csv\"]},\"84\":{\"h\":\"数据采集\",\"t\":[\"本教程将指导你如何爬取 招聘网站 中的求职信息 。\"]},\"85\":{\"h\":\"1. Boss直聘\"},\"86\":{\"h\":\"✅️URL获取\",\"t\":[\"打开官网Boss直聘\",\"我们随便搜索一个求职信息如 python\",\"网址中 可以发现有两个参数 qurey=python 和city=100010000\",\"我们再搜索一个求职信息如 java\",\"发现参数qurey=java和city=100010000\",\"通过对比两个网址 qurey代表求职信息即我们搜索框中输入的内容 city可以知道是职业的地区参数， 100010000对应的是全国参数\",\"现在的问题就是每个城市对应的参数是什么\",\"返回到主页，按F12打开开发者工具，选择网络一栏\",\"刷新一下网页（若网络一栏无文件，则需要刷新网页），搜索框中搜索city\",\"找到city.json（就是城市的参数文件）\",\"访问网址 !! city.json !!\",\"每个城市对应的参数都在该网址\"]},\"87\":{\"h\":\"✅️招聘信息获取\",\"t\":[\"刚刚我们获取完url的两个参数信息\",\"以qurey=python city=100010000 举例 所以对应的url = https://www.zhipin.com/web/geek/job?query=python&city=100010000\",\"我们访问网址，打开开发者工具，选择网络一栏\",\"选择 标头 一栏 ，找到请求标头的:path一栏 复制search/joblist.json 后面编写代码需要\",\"以上，我们就完成了编写代码的准备环节\"]},\"88\":{\"h\":\"✅️代码编写\",\"t\":[\"用到的包DrissionPage\",\"使用文档\"]},\"89\":{\"h\":\"📌️URL获取模块\",\"t\":[\" def _get_city_code(self): \\\"\\\"\\\"获取城市编码\\\"\\\"\\\" #生成页面对象 page = SessionPage() #访问在线网页 page.get('https://www.zhipin.com/wapi/zpCommon/data/city.json')#刚刚获取到的city.json网址 json_data = page.json['zpData']['cityList'] for dit in json_data: for city_json in dit['subLevelModelList']: if city_json['name'] == self.city: return str(city_json['code']) return '100010000' # 默认值为全国 def _get_url(self): \\\"\\\"\\\"根据关键词和城市编码生成正确的URL\\\"\\\"\\\" #正则表达式进行替换 self.url = re.sub(r'(?<=query=)[^&]+', self.keyword, self.url) self.url = re.sub(r'(?<=city=)[^&]+', self._get_city_code(), self.url) print(self.url) return self.url\",\"提示\",\"page.json返回的是一个字典类型\",\"'zpData'访问的是\",\"'cityList'访问的是\",\"这里的dit['subLevelModelList']代表\"]},\"90\":{\"h\":\"📌数据抓取\",\"t\":[\"def run(self): \\\"\\\"\\\"爬取数据并写入CSV\\\"\\\"\\\" page = None try: #ChromiumPage区别于SessionPage，它是一个可交互性的网页 page = ChromiumPage() page.listen.start('search/joblist.json')#此处是我们要在网络中获取的数据文件 page.get(self._get_url()) for page_num in range(1000): # 翻页处理 page.scroll.to_bottom() # 滚动到页面底部，加载新内容 response = page.listen.wait() # 等待监听到的请求响应 json_data = response.response.body jobList = json_data['zpData']['jobList'] for job in jobList: data = { '职位': job['jobName'], '城市': job['cityName'], '公司': job['brandName'], '薪资': job['salaryDesc'], '经验': job['jobExperience'], '学历': job['jobDegree'], '领域': job['brandIndustry'], '技能': ', '.join(job['skills']), '福利': ', '.join(job['welfareList']), } self.csv_writer.writerow(data) # 翻页操作 next_page_btn = page.ele('css:.options-pages a:last-of-type') if 'disable' in next_page_btn.attr('class'): break else: next_page_btn.click() # 点击下一页按钮 except Exception as e: print(f\\\"发生错误: {e}\\\") finally: if page: page.quit() # 关闭浏览器实例\",\"提示\",\"关于翻页操作的参数\",\"可以看到下一页的按钮标签名称为 ui-icon-arrow-right\",\"但是同上操作在最后一页下一页的按钮为 disabled\",\"为此做一个区分，下一页的标签在 class = \\\"options-pages\\\" 的最后一个，所以我们使用'css:.options-pages a:last-of-type'来获取最后一个元素，来判断是否进行下一页\"]},\"91\":{\"h\":\"✅️源代码如下\",\"t\":[\"from DrissionPage import SessionPage, ChromiumPage import re import csv class Boss(object): def __init__(self, keyword, city): self.keyword = keyword self.city = city self.url = 'https://www.zhipin.com/web/geek/job?query=python&city=101200100' # 替换掉文件名中的非法字符 safe_keyword = self.keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') safe_city = self.city.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') # 生成文件名 file_name = f'Boss直聘_关键词_{safe_keyword}_城市_{safe_city}.csv' try: self.f = open(file_name, mode='w', encoding='utf-8', newline='') self.csv_writer = csv.DictWriter(self.f, fieldnames=[ '职位', '城市', '公司', '薪资', '经验', '学历', '领域', '技能', '福利', ]) self.csv_writer.writeheader() except Exception as e: print(f\\\"打开文件时发生错误: {e}\\\") self.f = None # 确保如果文件打开失败，self.f 不会被引用 def __del__(self): \\\"\\\"\\\"确保在对象销毁时关闭CSV文件\\\"\\\"\\\" if hasattr(self, 'f') and self.f: # 检查是否存在 f 属性 self.f.close() def _get_city_code(self): \\\"\\\"\\\"获取城市编码\\\"\\\"\\\" page = SessionPage() page.get('https://www.zhipin.com/wapi/zpCommon/data/city.json') json_data = page.json['zpData']['cityList'] for dit in json_data: for city_json in dit['subLevelModelList']: if city_json['name'] == self.city: return str(city_json['code']) return '100010000' # 默认值为全国 def _get_url(self): \\\"\\\"\\\"根据关键词和城市编码生成正确的URL\\\"\\\"\\\" self.url = re.sub(r'(?<=query=)[^&]+', self.keyword, self.url) self.url = re.sub(r'(?<=city=)[^&]+', self._get_city_code(), self.url) print(self.url) return self.url def run(self): \\\"\\\"\\\"爬取数据并写入CSV\\\"\\\"\\\" page = None try: page = ChromiumPage() page.listen.start('search/joblist.json') page.get(self._get_url()) for page_num in range(1000): # 翻页处理 page.scroll.to_bottom() # 滚动到页面底部，加载新内容 response = page.listen.wait() # 等待监听到的请求响应 json_data = response.response.body jobList = json_data['zpData']['jobList'] for job in jobList: data = { '职位': job['jobName'], '城市': job['cityName'], '公司': job['brandName'], '薪资': job['salaryDesc'], '经验': job['jobExperience'], '学历': job['jobDegree'], '领域': job['brandIndustry'], '技能': ', '.join(job['skills']), '福利': ', '.join(job['welfareList']), } self.csv_writer.writerow(data) # 翻页操作 next_page_btn = page.ele('css:.options-pages a:last-of-type') if 'disable' in next_page_btn.attr('class'): break else: next_page_btn.click() # 点击下一页按钮 except Exception as e: print(f\\\"发生错误: {e}\\\") finally: if page: page.quit() # 关闭浏览器实例 if __name__ == '__main__': city = input('请输入城市名：') keyword = input('请输入搜索关键词：') # 确保用户输入不为空 if keyword: boss_spider = Boss(keyword=keyword, city=city) boss_spider.run() else: print(\\\"关键词和城市名不能为空！\\\")\"]},\"92\":{\"h\":\"2. 智联招聘\"},\"93\":{\"h\":\"✅️URL获取\",\"t\":[\"打开官网智联招聘\",\"同理\",\"基础URL https://www.zhaopin.com/sou/?jl=489&kw=python&p=2\",\"参数有3个，jl=城市，kw=招聘岗位，p=页面\",\"城市参数网址\",\"每个城市对应的参数都在该网址\"]},\"94\":{\"h\":\"✅️招聘信息获取\",\"t\":[\"有别于Boss直聘\",\"你在搜索公司名称时，发现找不到对应的json文件\",\"但我们翻到第二页的时候\",\"对应的文件找到了\",\"获取到:path: search/positions\"]},\"95\":{\"h\":\"✅️代码编写\",\"t\":[\"用到的包DrissionPage\",\"使用文档\"]},\"96\":{\"h\":\"📌URL获取模块\",\"t\":[\" def _get_city_code(self): \\\"\\\"\\\"获取城市编码\\\"\\\"\\\" page = SessionPage() page.get('https://fe-api.zhaopin.com/c/i/search/base/data') json_data = page.json['data']['allCity'] for dit in json_data: if dit['name'] == self.city: return str(dit['code']) for city_json in dit['sublist']: if city_json['name'] == self.city: return str(city_json['code']) return '489' # 默认值为全国 def _get_url(self): \\\"\\\"\\\"根据关键词和城市编码生成正确的URL\\\"\\\"\\\" self.url = re.sub(r'(?<=jl=)[^&]+', self._get_city_code(), self.url) self.url = re.sub(r'(?<=kw=)[^&]+', self.keyword, self.url) print(self.url) return self.url\"]},\"97\":{\"h\":\"📌数据抓取\",\"t\":[\" def run(self): \\\"\\\"\\\"爬取数据并写入CSV\\\"\\\"\\\" page = None try: page = ChromiumPage() page.listen.start('/search/positions') page.get(self._get_url()) page.scroll.to_bottom() # 滚动到页面底部，加载新内容 page.ele('css:.soupager__btn').click() for page_num in range(1000): # 翻页处理 page.scroll.to_bottom() # 滚动到页面底部，加载新内容 response = page.listen.wait() # 等待监听到的请求响应 json_data = response.response.body jobList = json_data['data']['list'] for job in jobList: data = { '职位': job['name'], '城市': job['workCity'], '公司': job['companyName'], '薪资': job['salary60'], '经验': job['workingExp'], '学历': job['education'], '领域': job['industryName'], '技能': ', '.join(skill['name'] for skill in job['jobSkillTags']), '福利': ', '.join(job['jobKnowledgeWelfareFeatures']), } self.csv_writer.writerow(data) # 翻页操作 next_page_btn = page.ele('css:.soupager a:last-of-type') if 'soupager__btn--disable' in next_page_btn.attr('class'): break else: next_page_btn.click() # 点击下一页按钮 except Exception as e: print(f\\\"发生错误: {e}\\\") finally: if page: page.quit() # 关闭浏览器实例\",\"提示\",\"关于翻页操作的参数\",\"![](https://github.com/Thirty-Li/typoraImg/blob/main/blogImage/b2bd99163d8d5d91f9d80dbe5e761275.png?raw=true\",\"可以看到上一页和下一页的按钮标签名称都为 btn soupager__btn\",\"为此做一个区分，下一页的标签在 class = \\\"soupager\\\" 的最后一个，所以我们使用'css:.soupager a:last-of-type'来获取最后一个元素，来判断是否进行下一页\",\"最后一页的下一页的标签为 'soupager__btn--disable'\"]},\"98\":{\"h\":\"✅️源代码如下\",\"t\":[\"import time from DrissionPage import SessionPage, ChromiumPage import re import csv class Zhilian(object): def __init__(self, keyword, city): self.keyword = keyword self.city = city self.url = 'https://www.zhaopin.com/sou/?jl=489&kw=python&p=2' # 替换掉文件名中的非法字符 safe_keyword = self.keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') safe_city = self.city.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') # 生成文件名 file_name = f'智联招聘_关键词_{safe_keyword}_城市_{safe_city}.csv' try: self.f = open(file_name, mode='w', encoding='utf-8', newline='') self.csv_writer = csv.DictWriter(self.f, fieldnames=[ '职位', '城市', '公司', '薪资', '经验', '学历', '领域', '技能', '福利', ]) self.csv_writer.writeheader() except Exception as e: print(f\\\"打开文件时发生错误: {e}\\\") self.f = None # 确保如果文件打开失败，self.f 不会被引用 def __del__(self): \\\"\\\"\\\"确保在对象销毁时关闭CSV文件\\\"\\\"\\\" if hasattr(self, 'f') and self.f: # 检查是否存在 f 属性 self.f.close() def _get_city_code(self): \\\"\\\"\\\"获取城市编码\\\"\\\"\\\" page = SessionPage() page.get('https://fe-api.zhaopin.com/c/i/search/base/data') json_data = page.json['data']['allCity'] for dit in json_data: if dit['name'] == self.city: return str(dit['code']) for city_json in dit['sublist']: if city_json['name'] == self.city: return str(city_json['code']) return '489' # 默认值为全国 def _get_url(self): \\\"\\\"\\\"根据关键词和城市编码生成正确的URL\\\"\\\"\\\" self.url = re.sub(r'(?<=jl=)[^&]+', self._get_city_code(), self.url) self.url = re.sub(r'(?<=kw=)[^&]+', self.keyword, self.url) print(self.url) return self.url def run(self): \\\"\\\"\\\"爬取数据并写入CSV\\\"\\\"\\\" page = None try: page = ChromiumPage() page.listen.start('/search/positions') page.get(self._get_url()) time.sleep(2) page.scroll.to_bottom() # 滚动到页面底部，加载新内容 page.ele('css:.soupager__btn').click() for page_num in range(1000): # 翻页处理 page.scroll.to_bottom() # 滚动到页面底部，加载新内容 response = page.listen.wait() # 等待监听到的请求响应 json_data = response.response.body jobList = json_data['data']['list'] for job in jobList: data = { '职位': job['name'], '城市': job['workCity'], '公司': job['companyName'], '薪资': job['salary60'], '经验': job['workingExp'], '学历': job['education'], '领域': job['industryName'], '技能': ', '.join(skill['name'] for skill in job['jobSkillTags']), '福利': ', '.join(job['jobKnowledgeWelfareFeatures']), } self.csv_writer.writerow(data) # 翻页操作 next_page_btn = page.ele('css:.soupager a:last-of-type') if 'soupager__btn--disable' in next_page_btn.attr('class'): break else: next_page_btn.click() # 点击下一页按钮 except Exception as e: print(f\\\"发生错误: {e}\\\") finally: if page: page.quit() # 关闭浏览器实例 if __name__ == '__main__': city = input('请输入城市名：') keyword = input('请输入搜索关键词：') # 确保用户输入不为空 if keyword: Zhilian_spider = Zhilian(keyword=keyword, city=city) Zhilian_spider.run() else: print(\\\"关键词和城市名不能为空！\\\")\"]},\"99\":{\"h\":\"3. 前程无忧\",\"t\":[\"打开官网前程无忧\",\"前情提要\",\"由于该网站招聘信息 技能要求和福利 等信息在一块，后期数据处理很麻烦，故在这里只教程如何爬取内容\"]},\"100\":{\"h\":\"✅️URL获取\",\"t\":[\"https://we.51job.com/pc/search?jobArea=020000&keyword=java&searchType=2&keywordType=\",\"四个参数\",\"jobArea 城市参数 keyword 职业关键字 searchType 1 搜公司 2 搜全文 keywordType 作用不大\",\"城市参数 https://js.51jobcdn.com/in/js/2023/dd/dd_city.json\",\"监听参数 job/search-pc\",\"但是\",\"例子\",\"需要手动验证\",\"所以该网站不能像前面俩一样爬取（大家可以尝试编写代码，突破验证）\",\"通过直接爬取网页元素（该方法相较于前面，比较麻烦）\"]},\"101\":{\"h\":\"✅️简单demo编写\",\"t\":[\"根据页面元素可以得到，页面中一个工作的信息包含在 class=joblist_item中 所以我们可以通过ChromiumPage()对象的eles方法获取页面中所有joblist_item\",\"公司信息如图所示\",\"公司标签如图所示\",\"import json from pprint import pprint from DrissionPage import SessionPage, ChromiumPage page = ChromiumPage() page.get('https://we.51job.com/pc/search?jobArea=020000&keyword=java&searchType=2&keywordType=') # 获取所有职位信息所在的div标签 divs = page.eles('css:.joblist-item') for div in divs: # 提取具体的数据内容 info = div.ele('css:.joblist-item-job').attr('sensorsdata') # 把json字符串转为json字典数据 json_data = json.loads(info) # 公司姓名 c_name = div.ele('css:.cname').attr('title') # 公司领域 dc = div.ele('css:.dc').text # 提取标签 tags = ','.join([i.text for i in div.eles('css:.tag')]) # 提取相关数据内容，保存在字典内 dit = { '职位': json_data['jobTitle'], '薪资': json_data['jobSalary'], '城市': json_data['jobArea'], '经验': json_data['jobYear'], '学历': json_data['jobDegree'], '公司': c_name, '领域': dc, '标签': tags, } print(dit)\",\"以上就是 前程无忧 网站信息爬取过程\"]},\"102\":{\"c\":[\"Python\",\"DrissionPage\"]},\"103\":{\"c\":[\"Boss 直聘\",\"智联招聘\",\"前程无忧\"]},\"104\":{\"h\":\"数据可视化\",\"t\":[\"本教程将指导你如何制作可视化图表 。\",\"前言\",\"需要用到的库有 jupyter notebook 、pyecharts\",\"安装jupyter notebook\",\"pip install jupyter notebook\",\"运行jupyter notebook\",\"jupyter notebook\",\"pip install pyecharts\",\"官方文档可参考pyecharts\",\"以及一些表格的例子pyecharts-gallery\"]},\"105\":{\"h\":\"1. 全国招聘工作工资分布可视化表.html\"},\"106\":{\"h\":\"📌数据获取\",\"t\":[\"# 之前数据清洗过之后的文件 file = f'data.csv' df = pd.read_csv(file) data = [] work = {} for index, row in df.iterrows(): keyword = row['keyword'] province = row['name'] averSalary = row['averSalary'] number = row['number'] if keyword not in work: work[keyword] = {'work': keyword, 'data': []} work[keyword]['data'].append({ 'province': province, 'value': [averSalary, number, province] }) data = list(work.values()) work_list = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] # 数据清洗中得出的平均工资 total_num = [12373, 10794, 9616, 15584, 11876, 11348, 14679, 12854, 14158, 15898, 10988, 12989, 15096, 10200, 17128, 18482, 8751] maxNum = 60000 # 定义的最大值 minNum = 5000 # 定义的最小值\",\"生成的 data 如下\"]},\"107\":{\"h\":\"📌map_chart（地图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"map_data = [ [[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work ][0] min_data, max_data = (minNum, maxNum) map_chart = ( Map() .add( series_name=\\\"\\\", data_pair=[[x[0], x[1][0]] for x in map_data], # 传入的为二维列表，对应的为省份名称和对应职位的工资 （相当于横纵坐标） zoom=1, # 地图的缩放比 center=[130, 25], is_map_symbol_show=False, tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), # 设置鼠标放置旁边时，显示具体数据 ) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"全国各省份平均工资 数据来源：boss直聘，智联招聘\\\", # 标题 subtitle=\\\"\\\", pos_left=\\\"center\\\", pos_top=\\\"top\\\", title_textstyle_opts=opts.TextStyleOpts( font_size=25 ), ), tooltip_opts=opts.TooltipOpts( is_show=True, formatter=JsCode( \\\"\\\"\\\"function(params) { if ('value' in params.data) { return params.data.value[2] + ': ' + params.data.value[0]; } }\\\"\\\"\\\" ), ), # 设置热力图 visualmap_opts=opts.VisualMapOpts( is_calculable=True, dimension=0, pos_left=\\\"30\\\", pos_top=\\\"top\\\", range_text=[\\\"High\\\", \\\"Low\\\"], range_color=[\\\"lightskyblue\\\", \\\"yellow\\\", \\\"orangered\\\"],# 定义热力图中的颜色 textstyle_opts=opts.TextStyleOpts(color=\\\"#ddd\\\"), min_=min_data, max_=max_data, # 定义热力图的最大值和最小值 ), ) )\"]},\"108\":{\"h\":\"📌line_chart（折线图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" line_chart = ( Line() .add_xaxis(work_list) # 横坐标 .add_yaxis( '', total_num, # 纵坐标 markpoint_opts=opts.MarkPointOpts(data=[opts.MarkPointItem(type_=\\\"max\\\")]), # 展示所有数据中最大的一项 tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{c}\\\"), # 设置鼠标放置旁边时，显示具体数据 ) .set_series_opts(label_opts=opts.LabelOpts(is_show=False)) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"全国岗位平均工资（单位：元）\\\", pos_left=\\\"72%\\\", pos_top=\\\"5%\\\" #标题 ) ) )\"]},\"109\":{\"h\":\"📌bar_chart（柱状图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" bar_x_data = [x[0] for x in map_data] # 横坐标 bar_y_data = [{\\\"work\\\": x[0], \\\"value\\\": x[1][0]} for x in map_data] #纵坐标 bar = ( Bar() .add_xaxis(xaxis_data=bar_x_data) .add_yaxis( series_name=\\\"\\\", y_axis=bar_y_data, label_opts=opts.LabelOpts( is_show=True, position=\\\"right\\\", formatter=\\\"{b} : {c}\\\" # 将具体数据固定在表格的右边 ), ) .reversal_axis() .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"各省份平均工资（单位：元/月）\\\", pos_left=\\\"0%\\\", pos_top=\\\"45%\\\" # 标题 ), xaxis_opts=opts.AxisOpts( max_=60000, axislabel_opts=opts.LabelOpts(is_show=False) ), yaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(is_show=False)), tooltip_opts=opts.TooltipOpts(is_show=False), ) )\"]},\"110\":{\"h\":\"📌grid_chart（并行多图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" grid_chart = ( Grid() .add( bar, grid_opts=opts.GridOpts( pos_left=\\\"10\\\", pos_right=\\\"45%\\\", pos_top=\\\"50%\\\", pos_bottom=\\\"5\\\" # 控制表格位置 ), ) .add( line_chart, grid_opts=opts.GridOpts( pos_left=\\\"58%\\\", pos_right=\\\"65\\\", pos_top=\\\"10%\\\", pos_bottom=\\\"50%\\\" # 控制表格位置 ), ) .add(map_chart, grid_opts=opts.GridOpts()) )\"]},\"111\":{\"h\":\"📌timeline （时间线）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" timeline = Timeline( init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.DARK) ) for y in work_list: # 按照职业将对应图表添加到时间线上 g = get_work_chart(work=y) timeline.add(g, time_point=str(y)) timeline.add_schema( orient=\\\"vertical\\\", # 纵向排列 is_auto_play=True, # 自动播放 is_inverse=True, # 反向播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） pos_right=\\\"5\\\", # 右边距设置为 5 pos_top=\\\"20\\\", # 上边距设置为 20 pos_bottom=\\\"20\\\", # 下边距设置为 20 width=\\\"60\\\", # 时间轴的宽度 label_opts=opts.LabelOpts(is_show=True, color=\\\"#fff\\\", position=\\\"left\\\"), # 文本位置设置为右侧 ) timeline.render(\\\"全国招聘工作工资分布可视化表.html\\\")\"]},\"112\":{\"h\":\"📌完整代码\",\"t\":[\"from pprint import pprint import pyecharts.options as opts from pyecharts.globals import ThemeType from pyecharts.commons.utils import JsCode from pyecharts.charts import Timeline, Grid, Bar, Map, Pie, Line import pandas as pd file = f'data.csv' df = pd.read_csv(file) data = [] work = {} for index, row in df.iterrows(): keyword = row['keyword'] province = row['name'] averSalary = row['averSalary'] number = row['number'] if keyword not in work: work[keyword] = {'work': keyword, 'data': []} work[keyword]['data'].append({ 'province': province, 'value': [averSalary, number, province] }) data = list(work.values()) work_list = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] total_num = [12373, 10794, 9616, 15584, 11876, 11348, 14679, 12854, 14158, 15898, 10988, 12989, 15096, 10200, 17128, 18482, 8751] maxNum = 60000 minNum = 5000 def get_work_chart(work: str): map_data = [ [[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work ][0] min_data, max_data = (minNum, maxNum) map_chart = ( Map() .add( series_name=\\\"\\\", data_pair=[[x[0], x[1][0]] for x in map_data], zoom=1, center=[130, 25], is_map_symbol_show=False, tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), ) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"全国各省份平均工资 数据来源：boss直聘，智联招聘\\\", subtitle=\\\"\\\", pos_left=\\\"center\\\", pos_top=\\\"top\\\", title_textstyle_opts=opts.TextStyleOpts( font_size=25 ), ), tooltip_opts=opts.TooltipOpts( is_show=True, formatter=JsCode( \\\"\\\"\\\"function(params) { if ('value' in params.data) { return params.data.value[2] + ': ' + params.data.value[0]; } }\\\"\\\"\\\" ), ), visualmap_opts=opts.VisualMapOpts( is_calculable=True, dimension=0, pos_left=\\\"30\\\", pos_top=\\\"top\\\", range_text=[\\\"High\\\", \\\"Low\\\"], range_color=[\\\"lightskyblue\\\", \\\"yellow\\\", \\\"orangered\\\"], textstyle_opts=opts.TextStyleOpts(color=\\\"#ddd\\\"), min_=min_data, max_=max_data, ), ) ) line_chart = ( Line() .add_xaxis(work_list) .add_yaxis( '', total_num, markpoint_opts=opts.MarkPointOpts(data=[opts.MarkPointItem(type_=\\\"max\\\")]), tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{c}\\\"), ) .set_series_opts(label_opts=opts.LabelOpts(is_show=False)) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"全国岗位平均工资（单位：元）\\\", pos_left=\\\"72%\\\", pos_top=\\\"5%\\\" ) ) ) bar_x_data = [x[0] for x in map_data] bar_y_data = [{\\\"work\\\": x[0], \\\"value\\\": x[1][0]} for x in map_data] bar = ( Bar() .add_xaxis(xaxis_data=bar_x_data) .add_yaxis( series_name=\\\"\\\", y_axis=bar_y_data, label_opts=opts.LabelOpts( is_show=True, position=\\\"right\\\", formatter=\\\"{b} : {c}\\\" ), ) .reversal_axis() .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"各省份平均工资（单位：元/月）\\\", pos_left=\\\"0%\\\", pos_top=\\\"45%\\\" ), xaxis_opts=opts.AxisOpts( max_=60000, axislabel_opts=opts.LabelOpts(is_show=False) ), yaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(is_show=False)), tooltip_opts=opts.TooltipOpts(is_show=False), ) ) grid_chart = ( Grid() .add( bar, grid_opts=opts.GridOpts( pos_left=\\\"10\\\", pos_right=\\\"45%\\\", pos_top=\\\"50%\\\", pos_bottom=\\\"5\\\" ), ) .add( line_chart, grid_opts=opts.GridOpts( pos_left=\\\"58%\\\", pos_right=\\\"65\\\", pos_top=\\\"10%\\\", pos_bottom=\\\"50%\\\" ), ) .add(map_chart, grid_opts=opts.GridOpts()) ) return grid_chart if __name__ == \\\"__main__\\\": timeline = Timeline( init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.DARK) ) for y in work_list: g = get_work_chart(work=y) timeline.add(g, time_point=str(y)) timeline.add_schema( orient=\\\"vertical\\\", # 纵向排列 is_auto_play=True, # 自动播放 is_inverse=True, # 反向播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） pos_right=\\\"5\\\", # 右边距设置为 5 pos_top=\\\"20\\\", # 上边距设置为 20 pos_bottom=\\\"20\\\", # 下边距设置为 20 width=\\\"60\\\", # 时间轴的宽度 label_opts=opts.LabelOpts(is_show=True, color=\\\"#fff\\\", position=\\\"left\\\"), # 文本位置设置为右侧 ) timeline.render(\\\"全国招聘工作工资分布可视化表.html\\\")\"]},\"113\":{\"h\":\"📌成果展示\"},\"114\":{\"h\":\"2. 全国招聘工作数量可视化表.html\"},\"115\":{\"h\":\"📌数据获取\",\"t\":[\"获取数据与上图一样\"]},\"116\":{\"h\":\"📌map_chart（地图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"# 区别于上面 def get_map_chart(work:str): map_data = [[x[0], x[1][1]] for x in [[[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work][0]] #这边x[1][1]获取的是工作岗位的数量，其他参数与上面类似，这里就不过多赘述 map_chart = ( Map() .add( series_name=\\\"\\\", data_pair=map_data, center=[130, 25], is_map_symbol_show=False, tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), ) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"全国招聘数量分布 数据来源：boss直聘，智联招聘\\\", subtitle=\\\"\\\", pos_left=\\\"center\\\", pos_top=\\\"top\\\", title_textstyle_opts=opts.TextStyleOpts( font_size=25 ), ), visualmap_opts=opts.VisualMapOpts( is_calculable=True, dimension=0, pos_left=\\\"30\\\", pos_top=\\\"top\\\", range_text=[\\\"High\\\", \\\"Low\\\"], range_color=[\\\"lightskyblue\\\", \\\"yellow\\\", \\\"orangered\\\"], textstyle_opts=opts.TextStyleOpts(color=\\\"#ddd\\\"), min_=0, max_=400, ), ) ) return map_chart\"]},\"117\":{\"h\":\"📌pie_chart（饼图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"def get_pie_chart(work:str): pie_data = [[x[0], x[1][1]] for x in [[[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work][0]] # 获取的数据与地图一样 pie_chart = ( Pie() .add( series_name=\\\"\\\", data_pair=pie_data, radius=[\\\"15%\\\", \\\"35%\\\"], center=[\\\"80%\\\", \\\"82%\\\"], itemstyle_opts=opts.ItemStyleOpts( border_width=1, border_color=\\\"rgba(0,0,0,0.3)\\\" ), ) .set_global_opts( tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), # 设置鼠标放置旁边时，显示具体数据 legend_opts=opts.LegendOpts(is_show=False), ) ) return pie_chart\"]},\"118\":{\"h\":\"📌grid_chart（并行多图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"def get_grid_chart(work:str): grid_chart = ( Grid() .add(get_pie_chart(work), grid_opts=opts.GridOpts()) .add(get_map_chart(work), grid_opts=opts.GridOpts()) ) return grid_chart\"]},\"119\":{\"h\":\"📌timeline （时间线）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" timeline = Timeline(init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.DARK)) for work in work_list: timeline.add(get_grid_chart(work), time_point=str(work)) timeline.add_schema( orient=\\\"vertical\\\", # 纵向排列 is_auto_play=True, # 自动播放 is_inverse=True, # 反向播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） pos_right=\\\"5\\\", # 右边距设置为 5 pos_top=\\\"20\\\", # 上边距设置为 20 pos_bottom=\\\"20\\\", # 下边距设置为 20 width=\\\"60\\\", # 时间轴的宽度 label_opts=opts.LabelOpts(is_show=True, color=\\\"#fff\\\", position=\\\"left\\\"), # 文本位置设置为右侧 ) timeline.render(\\\"全国招聘工作数量可视化表.html\\\")\"]},\"120\":{\"h\":\"📌完整代码\",\"t\":[\"from pprint import pprint import pyecharts.options as opts from pyecharts.globals import ThemeType from pyecharts.charts import Timeline, Grid, Bar, Map, Pie, Line, Page import pandas as pd file = f'data.csv' df = pd.read_csv(file) data =[] work = {} for index, row in df.iterrows(): keyword = row['keyword'] province = row['name'] averSalary = row['averSalary'] number = row['number'] if keyword not in work: work[keyword] = {'work': keyword, 'data': []} work[keyword]['data'].append({ 'province': province, 'value': [averSalary, number, province] }) data = list(work.values()) work_list = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] def get_map_chart(work:str): map_data = [[x[0], x[1][1]] for x in [[[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work][0]] map_chart = ( Map() .add( series_name=\\\"\\\", data_pair=map_data, center=[130, 25], is_map_symbol_show=False, tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), ) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"全国招聘数量分布 数据来源：boss直聘，智联招聘\\\", subtitle=\\\"\\\", pos_left=\\\"center\\\", pos_top=\\\"top\\\", title_textstyle_opts=opts.TextStyleOpts( font_size=25 ), ), visualmap_opts=opts.VisualMapOpts( is_calculable=True, dimension=0, pos_left=\\\"30\\\", pos_top=\\\"top\\\", range_text=[\\\"High\\\", \\\"Low\\\"], range_color=[\\\"lightskyblue\\\", \\\"yellow\\\", \\\"orangered\\\"], textstyle_opts=opts.TextStyleOpts(color=\\\"#ddd\\\"), min_=0, max_=400, ), ) ) return map_chart def get_pie_chart(work:str): pie_data = [[x[0], x[1][1]] for x in [[[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work][0]] pie_chart = ( Pie() .add( series_name=\\\"\\\", data_pair=pie_data, radius=[\\\"15%\\\", \\\"35%\\\"], center=[\\\"80%\\\", \\\"82%\\\"], itemstyle_opts=opts.ItemStyleOpts( border_width=1, border_color=\\\"rgba(0,0,0,0.3)\\\" ), ) .set_global_opts( tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), legend_opts=opts.LegendOpts(is_show=False), ) ) return pie_chart def get_grid_chart(work:str): grid_chart = ( Grid() .add(get_pie_chart(work), grid_opts=opts.GridOpts()) .add(get_map_chart(work), grid_opts=opts.GridOpts()) ) return grid_chart if __name__ == \\\"__main__\\\": timeline = Timeline(init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.DARK)) for work in work_list: timeline.add(get_grid_chart(work), time_point=str(work)) timeline.add_schema( orient=\\\"vertical\\\", # 纵向排列 is_auto_play=True, # 自动播放 is_inverse=True, # 反向播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） pos_right=\\\"5\\\", # 右边距设置为 5 pos_top=\\\"20\\\", # 上边距设置为 20 pos_bottom=\\\"20\\\", # 下边距设置为 20 width=\\\"60\\\", # 时间轴的宽度 label_opts=opts.LabelOpts(is_show=True, color=\\\"#fff\\\", position=\\\"left\\\"), # 文本位置设置为右侧 ) timeline.render(\\\"全国招聘工作数量可视化表.html\\\")\"]},\"121\":{\"h\":\"📌成果展示\"},\"122\":{\"h\":\"3. 岗位词云统计.html\"},\"123\":{\"h\":\"📌数据获取\",\"t\":[\" safe_keyword = keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') #获取对应职业文件姓名 file = f'{safe_keyword}.csv' df = pd.read_csv(file) # 读取对应excel count = {} # 统计该词出现的次数 for index, row in df.iterrows(): skills = row['技能'] # 获取'技能'一列 parts = str(skills).split(', ') # 以', '为分割符 for part in parts: if part in count: count[part] += 1 else: count[part] = 1 words=[] # 词云 for part in count: words.append((part, count[part]))\"]},\"124\":{\"h\":\"📌WordCloud（词云图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"c = ( WordCloud() .add( \\\"\\\", words, word_size_range=[20, 100], textstyle_opts=opts.TextStyleOpts(font_family=\\\"cursive\\\"), ) .set_global_opts(title_opts=opts.TitleOpts(title=keyword+\\\"岗位技能词云\\\")) )\"]},\"125\":{\"h\":\"📌timeline（时间线）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"timeline.add_schema( is_auto_play=True, # 自动播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） width=\\\"1400\\\", # 时间轴的宽度 ) timeline.render('岗位词云统计.html')\"]},\"126\":{\"h\":\"📌完整代码\",\"t\":[\"from pyecharts import options as opts from pyecharts.charts import WordCloud,Timeline import pandas as pd keywords = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] timeline = Timeline(init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.LIGHT)) for keyword in keywords: safe_keyword = keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') file = f'{safe_keyword}.csv' df = pd.read_csv(file) count = {} for index, row in df.iterrows(): skills = row['技能'] parts = str(skills).split(', ') for part in parts: if part in count: count[part] += 1 else: count[part] = 1 words=[] for part in count: words.append((part, count[part])) c = ( WordCloud() .add( \\\"\\\", words, word_size_range=[20, 100], textstyle_opts=opts.TextStyleOpts(font_family=\\\"cursive\\\"), ) .set_global_opts(title_opts=opts.TitleOpts(title=keyword+\\\"岗位技能词云\\\")) ) timeline.add(c, time_point=str(keyword)) timeline.add_schema( is_auto_play=True, # 自动播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） width=\\\"1400\\\", # 时间轴的宽度 ) timeline.render('岗位词云统计.html')\"]},\"127\":{\"h\":\"📌成果展示\"},\"128\":{\"c\":[\"Python\",\"Jupyter Notebook\",\"pyecharts\"]},\"129\":{\"c\":[\"地图\",\"柱状图\",\"折线图\",\"饼图\",\"时间轴\",\"词云图\"]},\"130\":{\"h\":\"YOLOv11(Ultralytics)环境配置\",\"t\":[\"前言\",\"yolo11 是 Ultralytics 公司 yolo 系列实时目标检测器的最新迭代版本，它以尖端的准确性、速度和效率重新定义了可能实现的性能。在之前 yolo 版本取得的显著进步基础上，yolo11 在架构和训练方法上进行了重大改进，使其成为各种计算机视觉任务中的通用选择。除了传统的目标检测外，yolo11 还支持目标跟踪、实例分割、姿态估计、OBB 定向物体检测（旋转目标检测）等视觉任务。\",\"如果已经会配置 yolov8 的环境，本文不需要重复配置，下载最新的 yolov11 训练文件即可。\"]},\"131\":{\"h\":\"📍1. Anaconda\",\"t\":[\"前言\",\"Anaconda 是一个开源的 Python 和 R 语言的发行版本，主要用于数据科学、机器学习和科学计算。它包含了大量的科学计算库和工具，并且提供了一个方便的环境管理工具，使得用户可以轻松地创建、管理和切换不同的 Python 环境。\"]},\"132\":{\"h\":\"🔥Anaconda 官网下载（国内网络的问题，下载速度很慢，不推荐）\",\"t\":[\"Anaconda官网\",\"Anaconda可以在Windows、MacOS、Linux系统平台中安装和使用，下载的时候找到对应的点击即可。\"]},\"133\":{\"h\":\"🔥Anaconda 使用清华镜像源下载（下载速度快，推荐）\",\"t\":[\"Anaconda清华镜像源下载\",\"我的电脑是windows系统，我这里选择下载最新版本的 Anaconda3-2024.10-1-Windows-x86_64.exe 下载完成我们就可以得到一个exe文件。\"]},\"134\":{\"h\":\"🔥Anaconda 安装\",\"t\":[\"Step1: 直接点击next\",\"Step2: 点击 I Agree\",\"Step3: 选择 ALL users（选择仅个人的话，后面使用可能会报错）,然后点击next\",\"Step4: 选择 anaconda 的安装位置\",\"注意\",\"这里建议修改为其他盘,要不然下载的包和创建的环境都在C盘，占用空间，后面介绍如何把创建的环境和下载的包都装在自己想装的盘里。\",\"Step5: 这里把三个勾全部打上，然后点击 Install , anaconda 开始安装\",\"🔒创建开始菜单 🔒base环境以python3.12创建 🔒清除包缓存\",\"Step6: 后续就是等待安装完成即可，这一步取决于电脑的性能。\"]},\"135\":{\"h\":\"🔥Anaconda 配置\",\"t\":[\"Step1: 打开高级系统设置，找到环境变量\",\"Step2: 系统变量选择path，双击进入\",\"step3: 新建环境变量【根据自己刚刚安装的路径，添加以下几个变量】\",\"D:\\\\anaconda3\",\"D:\\\\anaconda3\\\\Scripts\",\"D:\\\\anaconda3\\\\Library\\\\bin\",\"D:\\\\anaconda3\\\\Library\\\\mingw-w64\\\\bin\",\"step4: 安装测试\",\"在windows菜单栏搜索 Anaconda ,打开anaconda prompt\",\"输入这行代码，查看版本号，检查是否成功安装\",\"conda --version\"]},\"136\":{\"h\":\"🔥Anaconda默认环境保存路径和下载源修改\",\"t\":[\"因为还涉及到环境和包的下载，这里默认是下载在C盘的，我们需要更改下载的位置，以免占C盘系统盘内存；最后再添加镜像源方便下载环境的包（网速更快）\",\"C:\\\\Users\\\\你的用户名\",\"根据上述文件路径可以找到.condarc，用记事本打开\",\"删除其他的，输入以下指令【注意修改为自己想要的安装路径，最后的路径一定是落在envs和pkgs】\",\"envs_dirs: - D:\\\\Anaconda\\\\envs pkgs_dirs: - D:\\\\Anaconda\\\\pkgs channels: - defaults\",\"strl + s 保存\",\"conda镜像源的配置，因为conda很多下载的东西在国外，默认的下载速度往往会很慢，这里建议修改为清华的镜像源，打开anaconda prompt，输入以下指令\",\"# 添加清华源 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ # 添加阿里云镜像源 conda config --add channels https://mirrors.aliyun.com/anaconda/pkgs/free/ conda config --add channels https://mirrors.aliyun.com/anaconda/pkgs/main/ # 添加中科大源 conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/ conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/ conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/ conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/ conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/ conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/ # （可选）设置搜索时显示通道地址 conda config --set show_channel_urls yes\"]},\"137\":{\"h\":\"📍2. Pytorch\",\"t\":[\"前言\",\"PyTorch（Python Torch）是一个开源的机器学习库，主要用于深度学习任务。它由 Facebook 的人工智能研究小组开发，提供了灵活的张量（tensor）数据结构和强大的深度学习工具。\"]},\"138\":{\"h\":\"🔥CUDA 的安装\",\"t\":[\"版本检查\",\"打开cmd，命令行中输入指令nvidia-smi，查看 cuda 版本，博主的最高支持的 CUDA 版本为12.3，CUDA版本向下兼容，所以12.3版本以下的 CUDA，都可以选择安装\",\"软件安装\",\"下载链接：CUDA Toolkit Archive | NVIDIA Developer\",\"选择自己电脑对应的CUDA版本，点击Toolkit后准备安装包下载\",\"配置如图所示，最后点击下载即可\",\"打开安装包，点击“OK”，开始cuda下载（这里的路径按照默认来就行，不建议修改路径）\",\"解压完成后，系统检查安装程序的系统兼容性，等待片刻\",\"选择<精简>安装，点击“下一步”\",\"同意协议，点击“Next”，开始安装\",\"显示安装程序已完成，点击\\\"关闭\\\"\",\"环境验证\",\"高级系统设置中打开环境变量\",\"检查是否有图中的两个CUDA路径\",\"打开cmd，在命令行中输入nvcc --version，如下图所示，即为安装成功\"]},\"139\":{\"h\":\"🔥CUDNN 的安装\",\"t\":[\"cudnn的版本号下载时要注意与cuda版本号对应\",\"下载链接：cuDNN Archive | NVIDIA Developer\",\"cudnn网址需要注册账号并登录，这个自行注册就行\",\"此网址也可能需要科学上网\",\"进入网址，找到对应版本的cudnn（比如博主下载的CUDA版本12.3，这里选个for CUDA 12.x的进行下载）\",\"选择第一个，点击进行下载（cudnn就是一个压缩包）\",\"解压之后打开文件夹如下\",\"将上图这三个文件复制粘贴到CUDA的文件夹地址下（环境变量中的路径可查看）即可\",\"环境变量中的CUDA文件夹路径\",\"例如博主的路径为C:\\\\Program Files\\\\NVIDIA GPU Computing Toolkit\\\\CUDA\\\\v12.3\\\\lib 就将上述三个文件复制在C:\\\\Program Files\\\\NVIDIA GPU Computing Toolkit\\\\CUDA\\\\v12.3目录下即可\"]},\"140\":{\"h\":\"🔥创建虚拟环境\",\"t\":[\"step1: 打开 anaconda prompt\",\"默认进入的是base环境，base环境的版本与下载的anaconda3版本有关，因此不建议直接使用，需要新建环境，在新建环境之前建议更改默认的pip源和conda源可加速下载速度。\",\"step2: 这里创建一个名为yolov11，python版本为3.10的虚拟环境，也可以修改为其他名或者python版本，建议使用python3.9以上版本，选择替换即可。\",\"conda create -n yolov11 python=3.10\",\"step3: 回车后出现新建环境提醒输入y继续，耐心等待全部下载完成后自动安装。\",\"step4: 创建完之后输入以下指令进入yolov11环境之中\",\"conda activate yolov11\",\"step5: 安装pytorch\",\"进入yolov11环境，之后输入下方命令即可安装pytorch,耐心等待安装完成\",\"pip install torch==2.0.0+cu118 torchvision==0.15.1+cu118 --extra-index-url https://download.pytorch.org/whl/cu118\",\"step6: 安装ultralytics\",\"pip install ultralytics\",\"以上就完成了环境的搭建\"]},\"141\":{\"c\":[\"环境配置\",\"yolo\",\"Pytorch\"]},\"142\":{\"c\":[\"Anaconda3\"]},\"143\":{\"h\":\"Shell 语法\"},\"144\":{\"h\":\"概论\",\"t\":[\"shell 是我们通过命令行与操作系统沟通的语言。\",\"shell 脚本可以直接在命令行中执行，也可以将一套逻辑组织成一个文件，方便复用。 AC Terminal 中的命令行可以看成是一个\\\"shell脚本在逐行执行\\\"。\",\"Linux 中常见的 shell 脚本有很多种，常见的有：\",\"Bourne Shell ( /usr/bin/sh 或 /bin/sh )\",\"Bourne Again Shell ( /bin/bash )\",\"C Shell ( /usr/bin/csh )\",\"K Shell ( /usr/bin/ksh )\",\"zsh ...\",\"Linux 系统中一般默认使用 bash，所以接下来讲解 bash 中的语法。 文件开头需要写 #! /bin/bash ，指明 bash 为脚本解释器。\",\"学习技巧\",\"不要死记硬背，遇到含糊不清的地方，可以在 AC Terminal 里实际运行一遍。\",\"脚本示例\",\"新建一个 test.sh 文件，内容如下：\",\"#! /bin/bash echo \\\"Hello World!\\\"\",\"运行方式\",\"作为可执行文件\",\"acs@9e0ebfcd82d7:~$ chmod +x test.sh # 使脚本具有可执行权限 acs@9e0ebfcd82d7:~$ ./test.sh # 当前路径下执行 Hello World! # 脚本输出 acs@9e0ebfcd82d7:~$ /home/acs/test.sh # 绝对路径下执行 Hello World! # 脚本输出 acs@9e0ebfcd82d7:~$ ~/test.sh # 家目录路径下执行 Hello World! # 脚本输出\",\"用解释器执行\",\"acs@9e0ebfcd82d7:~$ bash test.sh Hello World! # 脚本输出\"]},\"145\":{\"h\":\"1. 注释\"},\"146\":{\"h\":\"1.1 单行注释\",\"t\":[\"每行中 # 之后的内容均是注释。\",\"# 这是一行注释 echo 'Hello World' # 这也是注释\"]},\"147\":{\"h\":\"1.2 多行注释\",\"t\":[\"格式：\",\":<<EOF 第一行注释 第二行注释 第三行注释 EOF\",\"其中 EOF 可以换成其它任意字符串。例如：\",\":<<abc 第一行注释 第二行注释 第三行注释 abc :<<! 第一行注释 第二行注释 第三行注释 !\"]},\"148\":{\"h\":\"2. 变量\"},\"149\":{\"h\":\"2.1 定义变量\",\"t\":[\"定义变量，不需要加 $ 符号，例如：\",\"name1='yxc' # 单引号定义字符串 name2=\\\"yxc\\\" # 双引号定义字符串 name3=yxc # 也可以不加引号，同样表示字符串\"]},\"150\":{\"h\":\"2.2 使用变量\",\"t\":[\"使用变量，需要加上 $ 符号，或者 ${} 符号。花括号是可选的，主要为了帮助解释器识别变量边界。\",\"name=yxc echo $name # 输出yxc echo ${name} # 输出yxc echo ${name}acwing # 输出yxcacwing\"]},\"151\":{\"h\":\"2.3 只读变量\",\"t\":[\"使用 readonly 或者 declare 可以将变量变为只读。\",\"name=yxc readonly name declare -r name # 两种写法均可 name=abc # 会报错，因为此时name只读\"]},\"152\":{\"h\":\"2.4 删除变量\",\"t\":[\"unset 可以删除变量。\",\"name=yxc unset name echo $name # 输出空行\"]},\"153\":{\"h\":\"2.5 变量类型\",\"t\":[\"自定义变量（局部变量）\",\"子进程不能访问的变量\",\"环境变量（全局变量）\",\"子进程可以访问的变量\",\"自定义变量改成环境变量：\",\"acs@9e0ebfcd82d7:~$ name=yxc # 定义变量 acs@9e0ebfcd82d7:~$ export name # 第一种方法 acs@9e0ebfcd82d7:~$ declare -x name # 第二种方法\",\"环境变量改为自定义变量：\",\"acs@9e0ebfcd82d7:~$ export name=yxc # 定义环境变量 acs@9e0ebfcd82d7:~$ declare +x name # 改为自定义变量\"]},\"154\":{\"h\":\"2.6 字符串\",\"t\":[\"字符串可以用单引号，也可以用双引号，也可以不用引号。\",\"单引号与双引号的区别：\",\"单引号中的内容会原样输出，不会执行、不会取变量；\",\"双引号中的内容可以执行、可以取变量；\",\"name=yxc # 不用引号 echo 'hello, $name \\\\\\\"hh\\\\\\\"' # 单引号字符串，输出 hello, $name \\\\\\\"hh\\\\\\\" echo \\\"hello, $name \\\\\\\"hh\\\\\\\"\\\" # 双引号字符串，输出 hello, yxc \\\"hh\\\"\",\"获取字符串长度\",\"name=\\\"yxc\\\" echo ${#name} # 输出3\",\"提取子串\",\"name=\\\"hello, yxc\\\" echo ${name:0:5} # 提取从0开始的5个字符\"]},\"155\":{\"h\":\"3. 默认变量\"},\"156\":{\"h\":\"3. 1 文件参数变量\",\"t\":[\"在执行 shell 脚本时，可以向脚本传递参数。$1 是第一个参数，$2 是第二个参数，以此类推。特殊的，$0 是文件名（包含路径）。例如：\",\"创建文件 test.sh ：\",\"#! /bin/bash echo \\\"文件名：\\\"$0 echo \\\"第一个参数：\\\"$1 echo \\\"第二个参数：\\\"$2 echo \\\"第三个参数：\\\"$3 echo \\\"第四个参数：\\\"$4\",\"然后执行该脚本：\",\"acs@9e0ebfcd82d7:~$ chmod +x test.sh acs@9e0ebfcd82d7:~$ ./test.sh 1 2 3 4 文件名：./test.sh 第一个参数：1 第二个参数：2 第三个参数：3 第四个参数：4\"]},\"157\":{\"h\":\"3.2 其它参数相关变量\",\"t\":[\"参数\",\"说明\",\"$#\",\"代表文件传入的参数个数，如上例中值为4\",\"$*\",\"由所有参数构成的用空格隔开的字符串，如上例中值为 \\\"$1 $2 $3 $4\\\"\",\"$@\",\"每个参数分别用双引号括起来的字符串，如上例中值为 \\\"$1\\\" \\\"$2\\\" \\\"$3\\\" \\\"$4\\\"\",\"$$\",\"脚本当前运行的进程ID\",\"$?\",\"上一条命令的退出状态（注意不是stdout，而是exit code）。0表示正常退出，其他值表示错误\",\"$(command)\",\"返回 command这条命令的stdout（可嵌套）\",\"command\",\"返回 command 这条命令的stdout（不可嵌套）\"]},\"158\":{\"h\":\"4. 数组\",\"t\":[\"数组中可以存放多个不同类型的值，只支持一维数组，初始化时不需要指明数组大小。 数组 下标从0开始。\"]},\"159\":{\"h\":\"4.1 定义\",\"t\":[\"数组用小括号表示，元素之间用空格隔开。例如：\",\"array=(1 abc \\\"def\\\" yxc)\",\"也可以直接定义数组中某个元素的值：\",\"array[0]=1 array[1]=abc array[2]=\\\"def\\\" array[3]=yxc\"]},\"160\":{\"h\":\"4.2 读取数组中某个元素的值\",\"t\":[\"格式：\",\"${array[index]}\",\"例如：\",\"array=(1 abc \\\"def\\\" yxc) echo ${array[0]} echo ${array[1]} echo ${array[2]} echo ${array[3]}\"]},\"161\":{\"h\":\"4.3 读取整个数组\",\"t\":[\"格式：\",\"${array[@]} # 第一种写法 ${array[*]} # 第二种写法\",\"例如：\",\"array=(1 abc \\\"def\\\" yxc) echo ${array[@]} # 第一种写法 echo ${array[*]} # 第二种写法\"]},\"162\":{\"h\":\"4.4 数组长度\",\"t\":[\"类似于字符串\",\"${#array[@]} # 第一种写法 ${#array[*]} # 第二种写法\",\"例如：\",\"array=(1 abc \\\"def\\\" yxc) echo ${#array[@]} # 第一种写法 echo ${#array[*]} # 第二种写法\"]},\"163\":{\"c\":[\"Linux\"]},\"164\":{\"c\":[\"基础\"]},\"165\":{\"h\":\"MySQL 基础知识\"},\"166\":{\"h\":\"1. 基础\"},\"167\":{\"h\":\"1.1 连接\",\"t\":[\"MySQL服务器启动完毕后，然后再使用如下指令，来连接 MySQL 服务器：\",\"mysql -u用户名 -p密码 [-h数据库服务器的IP地址 -P端口号]\",\"命令解释\",\"-h 参数不加，默认连接的是本地 127.0.0.1 的 MySQL 服务器\",\"-P 参数不加，默认连接的端口号是 3306\",\"上述指令，可以有两种形式：\",\"密码直接在 -p 参数之后直接指定 （这种方式不安全，密码直接以明文形式出现在命令行）\",\"密码在 -p 回车之后，在命令行中输入密码，然后回车\"]},\"168\":{\"h\":\"1.2 SQL 简介\",\"t\":[\"SQL：结构化查询语言。一门操作关系型数据库的编程语言，定义操作所有关系型数据库的统一标准。\"]},\"169\":{\"h\":\"1.2.1 SQL 通用语法\",\"t\":[\"1、SQL 语句可以单行或多行书写，以分号结尾。\",\"2、SQL 语句可以使用空格/缩进来增强语句的可读性。\",\"3、MySQL 数据库的 SQL 语句不区分大小写。\",\"4、注释：\",\"单行注释：-- 注释内容或 # 注释内容 (MySQL特有)\",\"多行注释： /* 注释内容 */\"]},\"170\":{\"h\":\"1.2.2 分类\",\"t\":[\"SQL 语句根据其功能被分为四大类：DDL、DML、DQL、DCL\",\"分类\",\"全称\",\"说明\",\"DDL\",\"Data Definition Language\",\"数据定义语言，用来定义数据库对象(数据库，表，字段)\",\"DML\",\"Data Manipulation Language\",\"数据操作语言，用来对数据库表中的数据进行增删改\",\"DQL\",\"Data Query Language\",\"数据查询语言，用来查询数据库中表的记录\",\"DCL\",\"Data Control Language\",\"数据控制语言，用来创建数据库用户、控制数据库的访问权限\"]},\"171\":{\"h\":\"2. 数据库设计-DDL\",\"t\":[\"针对于数据库设计，主要包括三个阶段：\",\"数据库设计阶段 \",\"参照页面原型以及需求文档设计数据库表结构\",\"数据库操作阶段 \",\"根据业务功能的实现，编写SQL语句对数据表中的数据进行增删改查操作\",\"数据库优化阶段 \",\"通过数据库的优化来提高数据库的访问性能。优化手段：索引、SQL优化、分库分表等\"]},\"172\":{\"h\":\"2.1 数据库操作\",\"t\":[\"DDL 英文全称是 Data Definition Language (数据定义语言)，用来定义数据库对象(数据库、表)。\",\"DDL 中数据库的常见操作：查询、创建、使用、删除。\"]},\"173\":{\"h\":\"2.1.1 查询数据库\",\"t\":[\"查询所有数据库：\",\"show databases;\",\"查询当前数据库：\",\"select database();\",\"用法\",\"我们要操作某一个数据库，必须要切换到对应的数据库中。\",\"通过指令 select database()，就可以查询到当前所处的数据库\"]},\"174\":{\"h\":\"2.1.2 创建数据库\",\"t\":[\"语法：\",\"create database [ if not exists ] 数据库名;\",\"注意：在同一个数据库服务器中，不能创建两个名称相同的数据库，否则将会报错。\",\"可以使用 if not exists 来避免这个问题\",\"-- 数据库不存在,则创建该数据库；如果存在则不创建 create database if not extists my_database;\"]},\"175\":{\"h\":\"2.1.3 使用数据库\",\"t\":[\"语法：\",\"use 数据库名 ;\",\"切换数据库\",\"我们要操作某一个数据库下的表时，就需要通过该指令，切换到对应的数据库下，否则不能操作。\"]},\"176\":{\"h\":\"2.1.4 删除数据库\",\"t\":[\"语法：\",\"drop database [ if exists ] 数据库名 ;\",\"如果删除一个不存在的数据库，将会报错。\",\"可以加上参数 if exists ，如果数据库存在，再执行删除，否则不执行删除。\",\"案例：删除 itcast 数据库\",\"drop database if exists itcast; -- itcast数据库存在时删除\",\"命令执行效果如下：\",\"说明\",\"上述语法中的 database，也可以替换成 schema\",\"如：create schema db01;\",\"如：show schemas;\"]},\"177\":{\"h\":\"2.2 表操作\",\"t\":[\"关于表结构的操作也是包含四个部分：创建表、查询表、修改表、删除表。\"]},\"178\":{\"h\":\"2.2.1 创建\"},\"179\":{\"h\":\"2.2.1.1 语法\",\"t\":[\"create table 表名( 字段1 字段1类型 [约束] [comment 字段1注释 ], 字段2 字段2类型 [约束] [comment 字段2注释 ], ...... 字段n 字段n类型 [约束] [comment 字段n注释 ] ) [ comment 表注释 ] ;\",\"注意： [ ] 中的内容为可选参数； 最后一个字段后面没有逗号\"]},\"180\":{\"h\":\"2.2.1.2 约束\",\"t\":[\"概念：所谓约束就是作用在表中字段上的规则，用于限制存储在表中的数据。\",\"作用：就是来保证数据库当中数据的正确性、有效性和完整性。\",\"在MySQL数据库当中，提供了以下5种约束：\",\"约束\",\"描述\",\"关键字\",\"非空约束\",\"限制该字段值不能为null\",\"not null\",\"唯一约束\",\"保证字段的所有数据都是唯一、不重复的\",\"unique\",\"主键约束\",\"主键是一行数据的唯一标识，要求非空且唯一\",\"primary key\",\"默认约束\",\"保存数据时，如果未指定该字段值，则采用默认值\",\"default\",\"外键约束\",\"让两张表的数据建立连接，保证数据的一致性和完整性\",\"foreign key\",\"注意：约束是作用于表中字段上的，可以在创建表/修改表的时候添加约束。\",\"MySQL数据库为解决id问题，提供了一个关键字：auto_increment（自动增长）\",\"主键自增：auto_increment\",\"每次插入新的行记录时，数据库自动生成 id 字段(主键)下的值\",\"具有 auto_increment 的数据列是一个正数序列开始增长(从 1 开始自增)\"]},\"181\":{\"h\":\"2.2.1.3 数据类型\",\"t\":[\"MySQL中的数据类型主要分为三类：数值类型、字符串类型、日期时间类型。\",\"数值类型\",\"类型\",\"大小\",\"有符号(SIGNED)范围\",\"无符号(UNSIGNED)范围\",\"描述\",\"TINYINT\",\"1byte\",\"(-128，127)\",\"(0，255)\",\"小整数值\",\"SMALLINT\",\"2bytes\",\"(-32768，32767)\",\"(0，65535)\",\"大整数值\",\"MEDIUMINT\",\"3bytes\",\"(-8388608，8388607)\",\"(0，16777215)\",\"大整数值\",\"INT/INTEGER\",\"4bytes\",\"(-2147483648，2147483647)\",\"(0，4294967295)\",\"大整数值\",\"BIGINT\",\"8bytes\",\"(-263，263-1)\",\"(0，2^64-1)\",\"极大整数值\",\"FLOAT\",\"4bytes\",\"(-3.402823466 E+38，3.402823466351 E+38)\",\"0 和 (1.175494351 E-38，3.402823466 E+38)\",\"单精度浮点数值\",\"DOUBLE\",\"8bytes\",\"(-1.7976931348623157 E+308，1.7976931348623157 E+308)\",\"0 和 (2.2250738585072014 E-308，1.7976931348623157 E+308)\",\"双精度浮点数值\",\"DECIMAL\",\"依赖于M(精度)和D(标度)的值\",\"依赖于M(精度)和D(标度)的值\",\"小数值(精确定点数)\",\"字符串类型\",\"类型\",\"大小\",\"描述\",\"CHAR\",\"0-255 bytes\",\"定长字符串(需要指定长度)\",\"VARCHAR\",\"0-65535 bytes\",\"变长字符串(需要指定长度)\",\"TINYBLOB\",\"0-255 bytes\",\"不超过255个字符的二进制数据\",\"TINYTEXT\",\"0-255 bytes\",\"短文本字符串\",\"BLOB\",\"0-65 535 bytes\",\"二进制形式的长文本数据\",\"TEXT\",\"0-65 535 bytes\",\"长文本数据\",\"MEDIUMBLOB\",\"0-16 777 215 bytes\",\"二进制形式的中等长度文本数据\",\"MEDIUMTEXT\",\"0-16 777 215 bytes\",\"中等长度文本数据\",\"LONGBLOB\",\"0-4 294 967 295 bytes\",\"二进制形式的极大文本数据\",\"LONGTEXT\",\"0-4 294 967 295 bytes\",\"极大文本数据\",\"char 与 varchar 都可以描述字符串，char 是定长字符串，指定长度多长，就占用多少个字符，和字段值的长度无关 。 而 varchar 是变长字符串，指定的长度为最大占用长度 。相对来说，char 的性能会更高些。\",\"示例： 用户名 username ---长度不定, 最长不会超过50 username varchar(50) 手机号 phone ---固定长度为11 phone char(11)\",\"日期时间类型\",\"类型\",\"大小\",\"范围\",\"格式\",\"描述\",\"DATE\",\"3\",\"1000-01-01 至 9999-12-31\",\"YYYY-MM-DD\",\"日期值\",\"TIME\",\"3\",\"-838:59:59 至 838:59:59\",\"HH:MM:SS\",\"时间值或持续时间\",\"YEAR\",\"1\",\"1901 至 2155\",\"YYYY\",\"年份值\",\"DATETIME\",\"8\",\"1000-01-01 00:00:00 至 9999-12-31 23:59:59\",\"YYYY-MM-DD HH:MM:SS\",\"混合日期和时间值\",\"TIMESTAMP\",\"4\",\"1970-01-01 00:00:01 至 2038-01-19 03:14:07\",\"YYYY-MM-DD HH:MM:SS\",\"混合日期和时间值，时间戳\"]},\"182\":{\"h\":\"2.2.2 查询\",\"t\":[\"查询当前数据库所有表\",\"show tables;\",\"查看指定表结构\",\"desc 表名 ; #可以查看指定表的字段、字段的类型、是否可以为NULL、是否存在默认值等信息\",\"查询指定表的建表语句\",\"show create table 表名 ;\"]},\"183\":{\"h\":\"2.2.3 修改\",\"t\":[\"添加字段\",\"alter table 表名 add 字段名 类型(长度) [comment 注释] [约束];\",\"案例： 为 tb_emp 表添加字段 qq，字段类型为 varchar(11)\",\"alter table tb_emp add qq varchar(11) comment 'QQ号码';\",\"修改数据类型\",\"alter table 表名 modify 字段名 新数据类型(长度);\",\"alter table 表名 change 旧字段名 新字段名 类型(长度) [comment 注释] [约束];\",\"案例：修改 qq 字段名为 qq_num，字段类型 varchar(13)\",\"alter table tb_emp change qq qq_num varchar(13) comment 'QQ号码';\",\"删除字段\",\"alter table 表名 drop 字段名;\",\"修改表名\",\"rename table 表名 to 新表名;\"]},\"184\":{\"h\":\"2.2.4 删除\",\"t\":[\"删除表语法：\",\"drop table [ if exists ] 表名;\",\"if exists ：只有表名存在时才会删除该表，表名不存在，则不执行删除操作(如果不加该参数项，删除一张不存在的表，执行将会报错)。\"]},\"185\":{\"h\":\"3. 数据库操作-DML\",\"t\":[\"DML英文全称是 Data Manipulation Language (数据操作语言)，用来对数据库中表的数据记录进行增、删、改操作。\",\"添加数据（INSERT）\",\"修改数据（UPDATE）\",\"删除数据（DELETE）\"]},\"186\":{\"h\":\"3.1 增加 (insert)\",\"t\":[\"insert 语法：\",\"向指定字段添加数据\",\"insert into 表名 (字段名1, 字段名2) values (值1, 值2);\",\"全部字段添加数据\",\"insert into 表名 values (值1, 值2, ...);\",\"批量添加数据（指定字段）\",\"insert into 表名 (字段名1, 字段名2) values (值1, 值2), (值1, 值2);\",\"批量添加数据（全部字段）\",\"insert into 表名 values (值1, 值2, ...), (值1, 值2, ...);\",\"Insert 操作的注意事项：\",\"插入数据时，指定的字段顺序需要与值的顺序是一一对应的。\",\"字符串和日期型数据应该包含在引号中。\",\"插入的数据大小，应该在字段的规定范围内。\"]},\"187\":{\"h\":\"3.2 修改 (update)\",\"t\":[\"update 语法：\",\"update 表名 set 字段名1 = 值1 , 字段名2 = 值2 , .... [where 条件] ;\",\"案例：将 tb_emp 表中 id 为 1 的员工，姓名 name 字段更新为'张三'\",\"update tb_emp set name='张三',update_time=now() where id=1;\",\"注意事项\",\"修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的所有数据。\",\"在修改数据时，一般需要同时修改公共字段 update_time，将其修改为当前操作时间。\"]},\"188\":{\"h\":\"3.3 删除 (delete)\",\"t\":[\"delete 语法：\",\"delete from 表名 [where 条件] ;\",\"注意事项\",\"DELETE 语句的条件可以有，也可以没有，如果没有条件，则会删除整张表的所有数据。\",\"DELETE 语句不能删除某一个字段的值(可以使用 UPDATE，将该字段值置为 NULL 即可)。\",\"当进行删除全部数据操作时，会提示询问是否确认删除所有数据，直接点击 Execute 即可。\"]},\"189\":{\"h\":\"4. 数据库操作-DQL\"},\"190\":{\"h\":\"4.1 语法\",\"t\":[\"DQL 查询语句，语法结构如下：\",\"SELECT 字段列表 FROM 表名列表 WHERE 条件列表 GROUP BY 分组字段列表 HAVING 分组后条件列表 ORDER BY 排序字段列表 LIMIT 分页参数\",\"查询分为以下几种类型：\",\"基本查询（不带任何条件）\",\"条件查询（where）\",\"分组查询（group by）\",\"排序查询（order by）\",\"分页查询（limit）\"]},\"191\":{\"h\":\"4.2 基本查询\",\"t\":[\"在基本查询的 DQL 语句中，不带任何的查询条件，语法如下：\",\"查询多个字段\",\"select 字段1, 字段2, 字段3 from 表名;\",\"查询所有字段（通配符）\",\"select * from 表名;\",\"设置别名\",\"select 字段1 [ as 别名1 ] , 字段2 [ as 别名2 ] from 表名;\",\"去除重复记录\",\"select distinct 字段列表 from 表名;\"]},\"192\":{\"h\":\"4.3 条件查询\",\"t\":[\"语法：\",\"select 字段列表 from 表名 where 条件列表 ; -- 条件列表：意味着可以有多个条件\",\"在SQL语句当中构造条件的运算符分为两类：\",\"比较运算符\",\"逻辑运算符\",\"常用的比较运算符如下:\",\"比较运算符\",\"功能\",\">\",\"大于\",\">=\",\"大于等于\",\"<\",\"小于\",\"<=\",\"小于等于\",\"=\",\"等于\",\"<> 或 !=\",\"不等于\",\"between ... and ...\",\"在某个范围之内(含最小、最大值)\",\"in(...)\",\"在in之后的列表中的值，多选一\",\"like 占位符\",\"模糊匹配(_匹配单个字符, %匹配任意个字符)\",\"is null\",\"是null\",\"常用的逻辑运算符如下:\",\"逻辑运算符\",\"功能\",\"and 或 &&\",\"并且 (多个条件同时成立)\",\"or 或 ||\",\"或者 (多个条件任意一个成立)\",\"not 或 !\",\"非 , 不是\"]},\"193\":{\"h\":\"4.4 聚合函数\",\"t\":[\"使用聚合函数查询是纵向查询，它是对一列的值进行计算，然后返回一个结果值。（将一列数据作为一个整体，进行纵向计算）\",\"语法：\",\"select 聚合函数(字段列表) from 表名 ;\",\"注意 : 聚合函数会忽略空值，对NULL值不作为统计。\",\"常用聚合函数：\",\"函数\",\"功能\",\"count\",\"统计数量\",\"max\",\"最大值\",\"min\",\"最小值\",\"avg\",\"平均值\",\"sum\",\"求和\",\"说明\",\"count ：按照列去统计有多少行数据。\",\"在根据指定的列统计的时候，如果这一列中有 null 的行，该行不会被统计在其中。\",\"sum ：计算指定列的数值和，如果不是数值类型，那么计算结果为0\",\"max ：计算指定列的最大值\",\"min ：计算指定列的最小值\",\"avg ：计算指定列的平均值\"]},\"194\":{\"h\":\"4.5 分组查询\",\"t\":[\"分组： 按照某一列或者某几列，把相同的数据进行合并输出。\",\"分组其实就是按列进行分类(指定列下相同的数据归为一类)，然后可以对分类完的数据进行合并计算。\",\"分组查询通常会使用聚合函数进行计算。\",\"语法：\",\"select 字段列表 from 表名 [where 条件] group by 分组字段名 [having 分组后过滤条件];\",\"注意事项\",\"分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义\",\"执行顺序：where > 聚合函数 > having\",\"where 与 having 区别（面试题）\",\"执行时机不同：where 是分组之前进行过滤，不满足 where 条件，不参与分组；而 having 是分组之后对结果进行过滤。\",\"判断条件不同：where 不能对聚合函数进行判断，而 having 可以。\"]},\"195\":{\"h\":\"4.6 排序查询\",\"t\":[\"排序在日常开发中是非常常见的一个操作，有升序排序，也有降序排序。\",\"语法：\",\"select 字段列表 from 表名 [where 条件列表] [group by 分组字段 ] order by 字段1 排序方式1 , 字段2 排序方式2 … ;\",\"排序方式：\",\"ASC ：升序（默认值）\",\"DESC：降序\",\"注意事项：如果是升序, 可以不指定排序方式ASC\"]},\"196\":{\"h\":\"4.7 分页查询\",\"t\":[\"分页操作在业务系统开发时，也是非常常见的一个功能，日常我们在网站中看到的各种各样的分页条，后台也都需要借助于数据库的分页操作。\",\"分页查询语法：\",\"select 字段列表 from 表名 limit 起始索引, 查询记录数 ;\",\"注意事项\",\"起始索引从 0 开始。\",\"计算公式：起始索引 = （查询页码 - 1）* 每页显示记录数\",\"分页查询是数据库的方言，不同的数据库有不同的实现，MySQL 中是 LIMIT\",\"如果查询的是第一页数据，起始索引可以省略，直接简写为 limit 条数\",\"前端查询数据库的流程：\",\"前端在请求服务端时，传递的参数 \",\"当前页码 page\",\"每页显示条数 pageSize\",\"后端需要响应什么数据给前端 \",\"所查询到的数据列表（存储到 List 集合中）\",\"总记录数\",\"示例\",\"后台给前端返回的数据包含：List 集合（数据列表）、total（总记录数）\",\"当数据量较大时，通常封装到 PageBean 对象中，并将该对象转换为 json 格式的数据响应回给浏览器。\",\"@Data @NoArgsConstructor @AllArgsConstructor public class PageBean { private Long total; // 总记录数 private List rows; // 当前页数据列表 }\"]},\"197\":{\"h\":\"5. 多表设计\",\"t\":[\"项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：\",\"一对多（多对一）\",\"多对多\",\"一对一\"]},\"198\":{\"h\":\"5.1 一对多 - 外键约束\",\"t\":[\"一对多关系实现：在数据库表中多的一方，添加字段，来关联属于一这方的主键。\",\"外键约束：让两张表的数据建立连接，保证数据的一致性和完整性。\",\"对应的关键字：foreign key\",\"语法：\",\"-- 创建表时指定 create table 表名( 字段名 数据类型, ... [constraint] [外键名称] foreign key (外键字段名) references 主表 (主表列名) ); -- 建完表后，添加外键 alter table 表名 add constraint 外键名称 foreign key(外键字段名) references 主表(主表列名);\",\"物理外键和逻辑外键\",\"物理外键\",\"概念：使用 foreign key 定义外键关联另外一张表。\",\"缺点： \",\"影响增、删、改的效率（需要检查外键关系）。\",\"仅用于单节点数据库，不适用与分布式、集群场景。\",\"容易引发数据库的死锁问题，消耗性能。\",\"逻辑外键\",\"概念：在业务层逻辑中，解决外键关联。\",\"通过逻辑外键，就可以很方便的解决上述问题。\",\"在现在的企业开发中，很少会使用物理外键，都是使用逻辑外键。 甚至在一些数据库开发规范中，会明确指出禁止使用物理外键 foreign key\"]},\"199\":{\"h\":\"5.2 一对一\",\"t\":[\"一对一关系表在实际开发中应用起来比较简单，通常是用来做单表的拆分，也就是将一张大表拆分成两张小表，将大表中的一些基础字段放在一张表当中，将其他的字段放在另外一张表当中，以此来提高数据的操作效率。\",\"一对一的应用场景：用户表(基本信息+身份信息)\",\"基本信息：用户的ID、姓名、性别、手机号、学历\",\"身份信息：民族、生日、身份证号、身份证签发机关，身份证的有效期(开始时间、结束时间)\",\"如果在业务系统当中，对用户的基本信息查询频率特别的高，但是对于用户的身份信息查询频率很低，此时出于提高查询效率的考虑，可以将这张大表拆分成两张小表，第一张表存放的是用户的基本信息，而第二张表存放的就是用户的身份信息。他们两者之间一对一的关系，一个用户只能对应一个身份证，而一个身份证也只能关联一个用户。\",\"那么在数据库层面怎么去体现上述两者之间是一对一的关系呢？\",\"其实一对一我们可以看成一种特殊的一对多。一对多我们是怎么设计表关系的？是不是在多的一方添加外键。同样我们也可以通过外键来体现一对一之间的关系，我们只需要在任意一方来添加一个外键就可以了。\",\"一对一 ：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的 (UNIQUE)\"]},\"200\":{\"h\":\"5.3 多对多\",\"t\":[\"多对多的关系在开发中属于也比较常见的。比如：学生和老师的关系，一个学生可以有多个授课老师，一个授课老师也可以有多个学生。在比如：学生和课程的关系，一个学生可以选修多门课程，一个课程也可以供多个学生选修。\",\"案例：学生与课程的关系\",\"关系：一个学生可以选修多门课程，一门课程也可以供多个学生选择\",\"实现关系：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键\"]},\"201\":{\"h\":\"6. 多表查询\"},\"202\":{\"h\":\"6.1 概述\"},\"203\":{\"h\":\"6.1.1 介绍\",\"t\":[\"多表查询：查询时从多张表中获取所需数据\",\"多表查询\",\"单表查询的 SQL 语句：select 字段列表 from 表名;\",\"那么要执行多表查询，只需要使用逗号分隔多张表即可，如：select 字段列表 from 表1, 表2;\",\"查询用户表和部门表中的数据：\",\"select * from tb_emp , tb_dept;\",\"笛卡尔积：笛卡尔乘积是指在数学中，两个集合（A 集合和 B 集合）的所有组合情况。\",\"在多表查询时，需要消除无效的笛卡尔积，只保留表关联部分的数据。\",\"在查询时给多表查询加上连接查询的条件：\",\"select * from tb_emp , tb_dept where tb_emp.dept_id = tb_dept.id ;\"]},\"204\":{\"h\":\"6.1.2 分类\",\"t\":[\"多表查询可以分为：\",\"连接查询\",\"内连接：相当于查询 A、B 交集部分数据\",\"外连接\",\"左外连接：查询左表所有数据(包括两张表交集部分数据)\",\"右外连接：查询右表所有数据(包括两张表交集部分数据)\",\"子查询\"]},\"205\":{\"h\":\"6.3 内连接\",\"t\":[\"内连接查询：查询两表或多表中交集部分数据。\",\"内连接从语法上可以分为：\",\"隐式内连接\",\"显式内连接\",\"隐式内连接语法：\",\"select 字段列表 from 表1 , 表2 where 条件 ... ;\",\"显式内连接语法：\",\"select 字段列表 from 表1 [ inner ] join 表2 on 连接条件 ... ;\",\"多表查询时给表起别名：\",\"- tableA as 别名1, tableB as 别名2 ; - tableA 别名1, tableB 别名2 ;\",\"注意事项\",\"一旦为表起了别名，就不能再使用表名来指定对应的字段了，此时只能够使用别名来指定字段。\"]},\"206\":{\"h\":\"6.3 外连接\",\"t\":[\"外连接分为两种：左外连接 和 右外连接。\",\"左外连接语法结构：\",\"select 字段列表 from 表1 left [ outer ] join 表2 on 连接条件 ... ;\",\"左外连接相当于查询表1（左表）的所有数据，当然也包含表1和表2交集部分的数据。\",\"右外连接语法结构：\",\"select 字段列表 from 表1 right [ outer ] join 表2 on 连接条件 ... ;\",\"右外连接相当于查询表2（右表）的所有数据，当然也包含表1和表2交集部分的数据。\",\"注意事项\",\"左外连接和右外连接是可以相互替换的，只需要调整连接查询时 SQL 语句中表的先后顺序就可以了。而我们在日常开发使用时，更偏向于左外连接。\"]},\"207\":{\"h\":\"6.4 子查询\"},\"208\":{\"h\":\"6.4.1 介绍\",\"t\":[\"SQL 语句中嵌套 select 语句，称为嵌套查询，又称子查询。\",\"SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2 ... );\",\"子查询外部的语句可以是 insert / update / delete / select 的任何一个，最常见的是 select.\",\"根据子查询结果的不同分为：\",\"标量子查询（子查询结果为单个值「一行一列」）\",\"列子查询（子查询结果为一列，但可以是多行）\",\"行子查询（子查询结果为一行，但可以是多列）\",\"表子查询（子查询结果为多行多列「相当于子查询结果是一张表」）\",\"子查询可以书写的位置：\",\"where 之后\",\"from 之后\",\"select 之后\"]},\"209\":{\"h\":\"6.4.2 标量子查询\",\"t\":[\"子查询返回的结果是单个值(数字、字符串、日期等)，最简单的形式，这种子查询称为标量子查询。\",\"常用的操作符： =<>>>=<<=\"]},\"210\":{\"h\":\"6.4.3 列子查询\",\"t\":[\"子查询返回的结果是一列(可以是多行)，这种子查询称为列子查询。\",\"常用的操作符：\",\"操作符\",\"描述\",\"IN\",\"在指定的集合范围之内，多选一\",\"NOT IN\",\"不在指定的集合范围之内\"]},\"211\":{\"h\":\"6.4.4 行子查询\",\"t\":[\"子查询返回的结果是一行(可以是多列)，这种子查询称为行子查询。\",\"常用的操作符：= 、<> 、IN 、NOT IN\"]},\"212\":{\"h\":\"6.4.5 表子查询\",\"t\":[\"子查询返回的结果是多行多列，常作为临时表，这种子查询称为表子查询。\"]},\"213\":{\"h\":\"7. 事务\"},\"214\":{\"h\":\"7.1 介绍\",\"t\":[\"在实际的业务开发中，有些业务操作要多次访问数据库。一个业务要发送多条 SQL 语句给数据库执行。需要将多次访问数据库的操作视为一个整体来执行，要么所有的 SQL 语句全部执行成功。如果其中有一条 SQL 语句失败，就进行事务的回滚，所有的 SQL 语句全部执行失败。\",\"简而言之：事务是一组操作的集合，它是一个不可分割的工作单位。事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。\",\"事务作用：保证在一个事务中多次操作数据库表中数据时，要么全都成功,要么全都失败。\"]},\"215\":{\"h\":\"7.2 操作\",\"t\":[\"MYSQL中有两种方式进行事务的操作：\",\"自动提交事务：即执行一条 sql 语句提交一次事务。（默认 MySQL 的事务是自动提交）\",\"手动提交事务：先开启，再提交\",\"事务操作有关的 SQL 语句：\",\"SQL语句\",\"描述\",\"start transaction; / begin ;\",\"开启手动控制事务\",\"commit;\",\"提交事务\",\"rollback;\",\"回滚事务\",\"手动提交事务使用步骤：\",\"第1种情况：开启事务 => 执行SQL语句 => 成功 => 提交事务\",\"第2种情况：开启事务 => 执行SQL语句 => 失败 => 回滚事务\"]},\"216\":{\"h\":\"7.3 四大特性\",\"t\":[\"原子性（Atomicity） ：原子性是指事务包装的一组 sql 是一个不可分割的工作单元，事务中的操作要么全部成功，要么全部失败。\",\"一致性（Consistency）：一个事务完成之后数据都必须处于一致性状态。\",\"如果事务成功的完成，那么数据库的所有变化将生效。\",\"如果事务执行出现错误，那么数据库的所有变化将会被回滚(撤销)，返回到原始状态。\",\"隔离性（Isolation）：多个用户并发的访问数据库时，一个用户的事务不能被其他用户的事务干扰，多个并发的事务之间要相互隔离。\",\"一个事务的成功或者失败对于其他的事务是没有影响。\",\"持久性（Durability）：一个事务一旦被提交或回滚，它对数据库的改变将是永久性的，哪怕数据库发生异常，重启之后数据亦然存在。\",\"关键\",\"面试题：事务有哪些特性？\",\"原子性（Atomicity）：事务是不可分割的最小单元，要么全部成功，要么全部失败。\",\"一致性（Consistency）：事务完成时，必须使所有的数据都保持一致状态。\",\"隔离性（Isolation）：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行。\",\"持久性（Durability）：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。\",\"事务的四大特性简称为：ACID\"]},\"217\":{\"h\":\"8. 索引\"},\"218\":{\"h\":\"8.1 介绍\",\"t\":[\"索引 index ：是帮助数据库高效获取数据的数据结构 。\",\"简单来讲，就是使用索引可以提高查询的效率。\",\"优点：\",\"提高数据查询的效率，降低数据库的 IO 成本。\",\"通过索引列对数据进行排序，降低数据排序的成本，降低 CPU 消耗。\",\"缺点：\",\"索引会占用存储空间。\",\"索引大大提高了查询效率，同时却也降低了 insert、update、delete 的效率。\"]},\"219\":{\"h\":\"8.2 结构\",\"t\":[\"MySQL 数据库支持的索引结构有很多，如：Hash 索引、B+Tree 索引、Full-Text 索引等。\",\"我们平常所说的索引，如果没有特别指明，都是指默认的 B+Tree 结构组织的索引。\",\"二叉查找树\",\"二叉查找树：左边的子节点比父节点小，右边的子节点比父节点大\",\"二叉查找树\",\"当我们向二叉查找树保存数据时，是按照从大到小（或从小到大）的顺序保存的，此时就会形成一个单向链表，搜索性能会打折扣。\",\"退化的二叉查找树\",\"可以选择平衡二叉树或者是红黑树来解决上述问题。（红黑树也是一棵平衡的二叉树）\",\"平衡二叉树\",\"但是在 Mysql 数据库中并没有使用二叉搜索数或二叉平衡数或红黑树来作为索引的结构。\",\"思考：采用二叉搜索树或者是红黑树来作为索引的结构有什么问题？\",\"答案 最大的问题就是在数据量大的情况下，树的层级比较深，会影响检索速度。 因为不管是二叉搜索数还是红黑数，一个节点下面只能有两个子节点。此时在数据量大的情况下，就会造成数的高度比较高，树的高度一旦高了，检索速度就会降低。 \",\"说明\",\"如果数据结构是红黑树，那么查询 1000 万条数据，根据计算树的高度大概是 23 左右，这样确实比之前的方式快了很多，但是如果高并发访问，那么一个用户有可能需要 23 次磁盘 IO，那么 100 万用户，那么会造成效率极其低下。\",\"所以为了减少红黑树的高度，那么就得增加树的宽度，就是不再像红黑树一样每个节点只能保存一个数据，可以引入另外一种数据结构，一个节点可以保存多个数据，这样宽度就会增加从而降低树的高度。而 B+Tree 就满足这种要求。\",\"B+Tree（多路平衡搜索树）结构中如何避免这个问题：\",\"B+Tree 结构：\",\"每一个节点，可以存储多个 key（有 n 个 key，就有 n 个指针）\",\"节点分为：叶子节点、非叶子节点 \",\"叶子节点，就是最后一层子节点，所有的数据都存储在叶子节点上\",\"非叶子节点，不是树结构最下面的节点，用于索引数据，存储的的是：key + 指针\",\"为了提高范围查询效率，叶子节点形成了一个双向链表，便于数据的排序及区间范围查询\",\"拓展\",\"非叶子节点都是由 key + 指针域 组成的，一个 key 占 8 字节，一个指针占 6 字节，而一个节点总共容量是 16KB，那么可以计算出一个节点可以存储的元素个数：16*1024字节 / (8+6) = 1170 个元素。\",\"查看 mysql 索引节点大小：\",\"show global status like 'innodb_page_size'; -- 节点大小：16384\",\"当根节点中可以存储 1170 个元素，那么根据每个元素的地址值又会找到下面的子节点，每个子节点也会存储 1170 个元素，那么第二层即第二次 IO 的时候就会找到数据大概是：1170∗1170=135W。也就是说 B+Tree 数据结构中只需要经历两次磁盘 IO 就可以找到 135W 条数据。\",\"对于第二层每个元素有指针，那么会找到第三层，第三层由 key + 数据 组成，假设 key + 数据 总大小是 1KB，而每个节点一共能存储 16KB，所以一个第三层一个节点大概可以存储 16 个元素(即 16 条记录)。那么结合第二层每个元素通过指针域找到第三层的节点，第二层一共是 135W 个元素，那么第三层总元素大小就是：135W∗16 结果就是 2000W+ 的元素个数。\",\"结合上述分析 B+Tree 有如下优点：\",\"千万条数据，B+Tree 可以控制在小于等于 3 的高度\",\"所有的数据都存储在叶子节点上，并且底层已经实现了按照索引进行排序，还可以支持范围查询，叶子节点是一个双向链表，支持从小到大或者从大到小查找\"]},\"220\":{\"h\":\"8.3 语法\",\"t\":[\"创建索引\",\"create [ unique ] index 索引名 on 表名 (字段名,... ) ;\",\"查看索引\",\"show index from 表名;\",\"删除索引\",\"drop index 索引名 on 表名;\",\"注意事项\",\"主键字段，在建表时，会自动创建主键索引\",\"添加唯一约束时，数据库实际上会添加唯一索引\"]},\"221\":{\"c\":[\"MySQL\"]},\"222\":{\"c\":[\"基础\"]},\"223\":{\"h\":\"智能指针\"},\"224\":{\"h\":\"智能指针的使用\",\"t\":[\"内存泄露问题\",\"内存泄露是指因为疏忽或错误，造成程序未能释放已经不再使用的内存的情况。比如：\",\"int div() { int a, b; cin >> a >> b; if (b == 0) throw invalid_argument(\\\"除0错误\\\"); return a / b; } void func() { int* ptr = new int; //... cout << div() << endl; //... delete ptr; } int main() { try { func(); } catch (exception& e) { cout << e.what() << endl; } return 0; }\",\"执行上述代码时，如果用户输入的除数为0，那么div函数中就会抛出异常，这时程序的执行流会直接跳转到主函数中的catch块中执行，最终导致func函数中申请的内存资源没有得到释放。\",\"利用异常的重新捕获解决\",\"对于这种情况，我们可以在func函数中先对div函数中抛出的异常进行捕获，捕获后先将之前申请的内存资源释放，然后再将异常重新抛出。比如：\",\"int div() { int a, b; cin >> a >> b; if (b == 0) throw invalid_argument(\\\"除0错误\\\"); return a / b; } void func() { int* ptr = new int; try { cout << div() << endl; } catch (...) { delete ptr; throw; } delete ptr; } int main() { try { func(); } catch (exception& e) { cout << e.what() << endl; } return 0; }\",\"利用智能指针解决\",\"上述问题也可以使用智能指针进行解决。比如：\",\"template<class T> class SmartPtr { public: SmartPtr(T* ptr) :_ptr(ptr) {} ~SmartPtr() { cout << \\\"delete: \\\" << _ptr << endl; delete _ptr; } T& operator*() { return *_ptr; } T* operator->() { return _ptr; } private: T* _ptr; }; int div() { int a, b; cin >> a >> b; if (b == 0) throw invalid_argument(\\\"除0错误\\\"); return a / b; } void func() { SmartPtr<int> sp(new int); //... cout << div() << endl; //... } int main() { try { func(); } catch (exception& e) { cout << e.what() << endl; } return 0; }\",\"代码中将申请到的内存空间交给了一个SmartPtr对象进行管理。\",\"在构造SmartPtr对象时，SmartPtr将传入的需要被管理的内存空间保存起来。\",\"在SmartPtr对象析构时，SmartPtr的析构函数中会自动将管理的内存空间进行释放。\",\"此外，为了让SmartPtr对象能够像原生指针一样使用，还需要对*和->运算符进行重载。 这样一来，无论程序是正常执行完毕返回了，还是因为某些原因中途返回了，或是因为抛异常返回了，只要SmartPtr对象的生命周期结束就会调用其对应的析构函数，进而完成内存资源的释放。\"]},\"225\":{\"h\":\"智能指针的原理\",\"t\":[\"实现智能指针时需要考虑以下三个方面的问题：\",\"在对象构造时获取资源，在对象析构的时候释放资源，利用对象的生命周期来控制程序资源，即RAII特性。 对*和->运算符进行重载，使得该对象具有像指针一样的行为。 智能指针对象的拷贝问题。 概念说明： RAII（Resource Acquisition Is Initialization）是一种利用对象生命周期来控制程序资源（如内存、文件句柄、互斥量等等）的简单技术。\",\"为什么要解决智能指针对象的拷贝问题\",\"对于当前实现的SmartPtr类，如果用一个SmartPtr对象来拷贝构造另一个SmartPtr对象，或是将一个SmartPtr对象赋值给另一个SmartPtr对象，都会导致程序崩溃。比如：\",\"int main() { SmartPtr<int> sp1(new int); SmartPtr<int> sp2(sp1); //拷贝构造 SmartPtr<int> sp3(new int); SmartPtr<int> sp4(new int); sp3 = sp4; //拷贝赋值 return 0; }\",\"原因如下：\",\"编译器默认生成的拷贝构造函数对内置类型完成值拷贝（浅拷贝），因此用sp1拷贝构造sp2后，相当于这sp1和sp2管理了同一块内存空间，当sp1和sp2析构时就会导致这块空间被释放两次。\",\"编译器默认生成的拷贝赋值函数对内置类型也是完成值拷贝（浅拷贝），因此将sp4赋值给sp3后，相当于sp3和sp4管理的都是原来sp3管理的空间，当sp3和sp4析构时就会导致这块空间被释放两次，并且还会导致sp4原来管理的空间没有得到释放。 需要注意的是，智能指针就是要模拟原生指针的行为，当我们将一个指针赋值给另一个指针时，目的就是让这两个指针指向同一块内存空间，所以这里本就应该进行浅拷贝，但单纯的浅拷贝又会导致空间被多次释放，因此根据解决智能指针拷贝问题方式的不同，从而衍生出了不同版本的智能指针。\"]},\"226\":{\"h\":\"std::auto_ptr\",\"t\":[\"管理权转移\",\"auto_ptr是C++98中引入的智能指针，auto_ptr通过管理权转移的方式解决智能指针的拷贝问题，保证一个资源在任何时刻都只有一个对象在对其进行管理，这时同一个资源就不会被多次释放了。比如：\",\"int main() { std::auto_ptr<int> ap1(new int(1)); std::auto_ptr<int> ap2(ap1); *ap2 = 10; //*ap1 = 20; //error std::auto_ptr<int> ap3(new int(1)); std::auto_ptr<int> ap4(new int(2)); ap3 = ap4; return 0; }\",\"但一个对象的管理权转移后也就意味着，该对象不能再用对原来管理的资源进行访问了，否则程序就会崩溃，因此使用auto_ptr之前必须先了解它的机制，否则程序很容易出问题，很多公司也都明确规定了禁止使用auto_ptr。\",\"auto_ptr的模拟实现\",\"简易版的auto_ptr的实现步骤如下：\",\"在构造函数中获取资源，在析构函数中释放资源，利用对象的生命周期来控制资源。\",\"对*和->运算符进行重载，使auto_ptr对象具有指针一样的行为。\",\"在拷贝构造函数中，用传入对象管理的资源来构造当前对象，并将传入对象管理资源的指针置空。\",\"在拷贝赋值函数中，先将当前对象管理的资源释放，然后再接管传入对象管理的资源，最后将传入对象管理资源的指针置空。 代码如下：\",\"namespace cl { template<class T> class auto_ptr { public: //RAII auto_ptr(T* ptr = nullptr) :_ptr(ptr) {} ~auto_ptr() { if (_ptr != nullptr) { cout << \\\"delete: \\\" << _ptr << endl; delete _ptr; _ptr = nullptr; } } auto_ptr(auto_ptr<T>& ap) :_ptr(ap._ptr) { ap._ptr = nullptr; //管理权转移后ap被置空 } auto_ptr& operator=(auto_ptr<T>& ap) { if (this != &ap) { delete _ptr; //释放自己管理的资源 _ptr = ap._ptr; //接管ap对象的资源 ap._ptr = nullptr; //管理权转移后ap被置空 } return *this; } //可以像指针一样使用 T& operator*() { return *_ptr; } T* operator->() { return _ptr; } private: T* _ptr; //管理的资源 }; }\",\"std::unique_ptr\",\"防拷贝\",\"unique_ptr是C++11中引入的智能指针，unique_ptr通过防拷贝的方式解决智能指针的拷贝问题，也就是简单粗暴的防止对智能指针对象进行拷贝，这样也能保证资源不会被多次释放。比如：\",\"int main() { std::unique_ptr<int> up1(new int(0)); //std::unique_ptr<int> up2(up1); //error return 0; }\",\"但防拷贝其实也不是一个很好的办法，因为总有一些场景需要进行拷贝。\",\"unique_ptr的模拟实现\",\"简易版的unique_ptr的实现步骤如下：\",\"在构造函数中获取资源，在析构函数中释放资源，利用对象的生命周期来控制资源。 对*和->运算符进行重载，使unique_ptr对象具有指针一样的行为。 用C++98的方式将拷贝构造函数和拷贝赋值函数声明为私有，或者用C++11的方式在这两个函数后面加上=delete，防止外部调用。 代码如下：\",\"namespace cl { template<class T> class unique_ptr { public: //RAII unique_ptr(T* ptr = nullptr) :_ptr(ptr) {} ~unique_ptr() { if (_ptr != nullptr) { cout << \\\"delete: \\\" << _ptr << endl; delete _ptr; _ptr = nullptr; } } //可以像指针一样使用 T& operator*() { return *_ptr; } T* operator->() { return _ptr; } //防拷贝 unique_ptr(unique_ptr<T>& up) = delete; unique_ptr& operator=(unique_ptr<T>& up) = delete; private: T* _ptr; //管理的资源 }; }\"]},\"227\":{\"h\":\"std::shared_ptr\"},\"228\":{\"h\":\"std::shared_ptr的基本设计\",\"t\":[\"引用计数\",\"shared_ptr是C++11中引入的智能指针，shared_ptr通过引用计数的方式解决智能指针的拷贝问题。\",\"每一个被管理的资源都有一个对应的引用计数，通过这个引用计数记录着当前有多少个对象在管理着这块资源。\",\"当新增一个对象管理这块资源时则将该资源对应的引用计数进行++，当一个对象不再管理这块资源或该对象被析构时则将该资源对应的引用计数进行--。\",\"当一个资源的引用计数减为0时说明已经没有对象在管理这块资源了，这时就可以将该资源进行释放了。 通过这种引用计数的方式就能支持多个对象一起管理某一个资源，也就是支持了智能指针的拷贝，并且只有当一个资源对应的引用计数减为0时才会释放资源，因此保证了同一个资源不会被释放多次。比如：\",\"int main() { cl::shared_ptr<int> sp1(new int(1)); cl::shared_ptr<int> sp2(sp1); *sp1 = 10; *sp2 = 20; cout << sp1.use_count() << endl; //2 cl::shared_ptr<int> sp3(new int(1)); cl::shared_ptr<int> sp4(new int(2)); sp3 = sp4; cout << sp3.use_count() << endl; //2 return 0; }\",\"说明一下： use_count成员函数，用于获取当前对象管理的资源对应的引用计数。\"]},\"229\":{\"h\":\"shared_ptr的模拟实现\",\"t\":[\"简易版的shared_ptr的实现步骤如下：\",\"在shared_ptr类中增加一个成员变量count，表示智能指针对象管理的资源对应的引用计数。\",\"在构造函数中获取资源，并将该资源对应的引用计数设置为1，表示当前只有一个对象在管理这个资源。\",\"在拷贝构造函数中，与传入对象一起管理它管理的资源，同时将该资源对应的引用计数++。\",\"在拷贝赋值函数中，先将当前对象管理的资源对应的引用计数--（如果减为0则需要释放），然后再与传入对象一起管理它管理的资源，同时需要将该资源对应的引用计数++。\",\"在析构函数中，将管理资源对应的引用计数--，如果减为0则需要将该资源释放。\",\"对*和->运算符进行重载，使shared_ptr对象具有指针一样的行为。 代码如下：\",\"namespace cl { template<class T> class shared_ptr { public: //RAII shared_ptr(T* ptr = nullptr) :_ptr(ptr) , _pcount(new int(1)) {} ~shared_ptr() { if (--(*_pcount) == 0) { if (_ptr != nullptr) { cout << \\\"delete: \\\" << _ptr << endl; delete _ptr; _ptr = nullptr; } delete _pcount; _pcount = nullptr; } } shared_ptr(shared_ptr<T>& sp) :_ptr(sp._ptr) , _pcount(sp._pcount) { (*_pcount)++; } shared_ptr& operator=(shared_ptr<T>& sp) { if (_ptr != sp._ptr) //管理同一块空间的对象之间无需进行赋值操作 { if (--(*_pcount) == 0) //将管理的资源对应的引用计数-- { cout << \\\"delete: \\\" << _ptr << endl; delete _ptr; delete _pcount; } _ptr = sp._ptr; //与sp对象一同管理它的资源 _pcount = sp._pcount; //获取sp对象管理的资源对应的引用计数 (*_pcount)++; //新增一个对象来管理该资源，引用计数++ } return *this; } //获取引用计数 int use_count() { return *_pcount; } //可以像指针一样使用 T& operator*() { return *_ptr; } T* operator->() { return _ptr; } private: T* _ptr; //管理的资源 int* _pcount; //管理的资源对应的引用计数 }; }\",\"为什么引用计数需要存放在堆区？\",\"首先，shared_ptr中的引用计数count不能单纯的定义成一个int类型的成员变量，因为这就意味着每个shared_ptr对象都有一个自己的count成员变量，而当多个对象要管理同一个资源时，这几个对象应该用到的是同一个引用计数。\",\"如下图： \",\"其次，shared_ptr中的引用计数count也不能定义成一个静态的成员变量，因为静态成员变量是所有类型对象共享的，这会导致管理相同资源的对象和管理不同资源的对象用到的都是同一个引用计数。\",\"如下图： \",\"而如果将shared_ptr中的引用计数count定义成一个指针，当一个资源第一次被管理时就在堆区开辟一块空间用于存储其对应的引用计数，如果有其他对象也想要管理这个资源，那么除了将这个资源给它之外，还需要把这个引用计数也给它。\",\"这时管理同一个资源的多个对象访问到的就是同一个引用计数，而管理不同资源的对象访问到的就是不同的引用计数了，相当于将各个资源与其对应的引用计数进行了绑定。\",\"如下图： \",\"但同时需要注意，由于引用计数的内存空间也是在堆上开辟的，因此当一个资源对应的引用计数减为0时，除了需要将该资源释放，还需要将该资源对应的引用计数的内存空间进行释放。\"]},\"230\":{\"h\":\"std::shared_ptr的线程安全问题\",\"t\":[\"shared_ptr的线程安全问题\",\"当前模拟实现的shared_ptr还存在线程安全的问题，由于管理同一个资源的多个对象的引用计数是共享的，因此多个线程可能会同时对同一个引用计数进行自增或自减操作，而自增和自减操作都不是原子操作，因此需要通过加锁来对引用计数进行保护，否则就会导致线程安全问题。\",\"比如下面代码中用一个shared_ptr管理一个整型变量，然后用两个线程分别对这个shared_ptr对象进行1000次拷贝操作，这些对象被拷贝出来后又会立即被销毁。比如：\",\"void func(cl::shared_ptr<int>& sp, size_t n) { for (size_t i = 0; i < n; i++) { cl::shared_ptr<int> copy(sp); } } int main() { cl::shared_ptr<int> p(new int(0)); const size_t n = 1000; thread t1(func, p, n); thread t2(func, p, n); t1.join(); t2.join(); cout << p.use_count() << endl; //预期：1 return 0; }\",\"在这个过程中两个线程会不断对引用计数进行自增和自减操作，理论上最终两个线程执行完毕后引用计数的值应该是1，因为拷贝出来的对象都被销毁了，只剩下最初的shared_ptr对象还在管理这个整型变量，但每次运行程序得到引用计数的值可能都是不一样的，根本原因就是因为对引用计数的自增和自减不是原子操作。\",\"加锁解决线程安全问题\",\"要解决引用计数的线程安全问题，本质就是要让对引用计数的自增和自减操作变成一个原子操作，因此可以对引用计数的操作进行加锁保护，也可以用原子类atomic对引用计数进行封装，这里以加锁为例。\",\"在shared_ptr类中新增互斥锁成员变量，为了让管理同一个资源的多个线程访问到的是同一个互斥锁，管理不同资源的线程访问到的是不同的互斥锁，因此互斥锁也需要在堆区创建。 在调用拷贝构造函数和拷贝赋值函数时，除了需要将对应的资源和引用计数交给当前对象管理之外，还需要将对应的互斥锁也交给当前对象。 当一个资源对应的引用计数减为0时，除了需要将对应的资源和引用计数进行释放，由于互斥锁也是在堆区创建的，因此还需要将对应的互斥锁进行释放。 为了简化代码逻辑，可以将拷贝构造函数和拷贝赋值函数中引用计数的自增操作提取出来，封装成AddRef函数，将拷贝赋值函数和析构函数中引用计数的自减操作提取出来，封装成ReleaseRef函数，这样就只需要对AddRef和ReleaseRef函数进行加锁保护即可。 代码如下：\",\"namespace cl { template<class T> class shared_ptr { private: //++引用计数 void AddRef() { _pmutex->lock(); (*_pcount)++; _pmutex->unlock(); } //--引用计数 void ReleaseRef() { _pmutex->lock(); bool flag = false; if (--(*_pcount) == 0) //将管理的资源对应的引用计数-- { if (_ptr != nullptr) { cout << \\\"delete: \\\" << _ptr << endl; delete _ptr; _ptr = nullptr; } delete _pcount; _pcount = nullptr; flag = true; } _pmutex->unlock(); if (flag == true) { delete _pmutex; } } public: //RAII shared_ptr(T* ptr = nullptr) :_ptr(ptr) , _pcount(new int(1)) , _pmutex(new mutex) {} ~shared_ptr() { ReleaseRef(); } shared_ptr(shared_ptr<T>& sp) :_ptr(sp._ptr) , _pcount(sp._pcount) , _pmutex(sp._pmutex) { AddRef(); } shared_ptr& operator=(shared_ptr<T>& sp) { if (_ptr != sp._ptr) //管理同一块空间的对象之间无需进行赋值操作 { ReleaseRef(); //将管理的资源对应的引用计数-- _ptr = sp._ptr; //与sp对象一同管理它的资源 _pcount = sp._pcount; //获取sp对象管理的资源对应的引用计数 _pmutex = sp._pmutex; //获取sp对象管理的资源对应的互斥锁 AddRef(); //新增一个对象来管理该资源，引用计数++ } return *this; } //获取引用计数 int use_count() { return *_pcount; } //可以像指针一样使用 T& operator*() { return *_ptr; } T* operator->() { return _ptr; } private: T* _ptr; //管理的资源 int* _pcount; //管理的资源对应的引用计数 mutex* _pmutex; //管理的资源对应的互斥锁 }; }\",\"说明一下：\",\"在ReleaseRef函数中，当引用计数被减为0时需要释放互斥锁资源，但不能在临界区中释放互斥锁，因为后面还需要进行解锁操作，因此代码中借助了一个flag变量，通过flag变量来判断解锁后释放需要释放互斥锁资源。 shared_ptr只需要保证引用计数的线程安全问题，而不需要保证管理的资源的线程安全问题，就像原生指针管理一块内存空间一样，原生指针只需要指向这块空间，而这块空间的线程安全问题应该由这块空间的操作者来保证。\"]},\"231\":{\"h\":\"std::shared_ptr的定制删除器\",\"t\":[\"定制删除器的用法\",\"当智能指针对象的生命周期结束时，所有的智能指针默认都是以delete的方式将资源释放，这是不太合适的，因为智能指针并不是只管理以new方式申请到的内存空间，智能指针管理的也可能是以new[]的方式申请到的空间，或管理的是一个文件指针。比如：\",\"struct ListNode { ListNode* _next; ListNode* _prev; int _val; ~ListNode() { cout << \\\"~ListNode()\\\" << endl; } }; int main() { std::shared_ptr<ListNode> sp1(new ListNode[10]); //error std::shared_ptr<FILE> sp2(fopen(\\\"test.cpp\\\", \\\"r\\\")); //error return 0; }\",\"这时当智能指针对象的生命周期结束时，再以delete的方式释放管理的资源就会导致程序崩溃，因为以new[]的方式申请到的内存空间必须以delete[]的方式进行释放，而文件指针必须通过调用fclose函数进行释放。\",\"这时就需要用到定制删除器来控制释放资源的方式，C++标准库中的shared_ptr提供了如下构造函数：\",\"template <class U, class D> shared_ptr (U* p, D del);\",\"参数说明：\",\"p：需要让智能指针管理的资源。\",\"del：删除器，这个删除器是一个可调用对象，比如函数指针、仿函数、lambda表达式以及被包装器包装后的可调用对象。 当shared_ptr对象的生命周期结束时就会调用传入的删除器完成资源的释放，调用该删除器时会将shared_ptr管理的资源作为参数进行传入。\",\"因此当智能指针管理的资源不是以new的方式申请到的内存空间时，就需要在构造智能指针对象时传入定制的删除器。比如：\",\"template<class T> struct DelArr { void operator()(const T* ptr) { cout << \\\"delete[]: \\\" << ptr << endl; delete[] ptr; } }; int main() { std::shared_ptr<ListNode> sp1(new ListNode[10], DelArr<ListNode>()); std::shared_ptr<FILE> sp2(fopen(\\\"test.cpp\\\", \\\"r\\\"), [](FILE* ptr){ cout << \\\"fclose: \\\" << ptr << endl; fclose(ptr); }); return 0; }\",\"定制删除器的模拟实现\",\"定制删除器的实现问题：\",\"C++标准库中实现shared_ptr时是分成了很多个类的，因此C++标准库中可以将删除器的类型设置为构造函数的模板参数，然后将删除器的类型在各个类之间进行传递。\",\"但我们是直接用一个类来模拟实现shared_ptr的，因此不能将删除器的类型设置为构造函数的模板参数。因为删除器不是在构造函数中调用的，而是需要在ReleaseRef函数中进行调用，因此势必需要用一个成员变量将删除器保存下来，而在定义这个成员变量时就需要指定删除器的类型，因此这里模拟实现的时候不能将删除器的类型设置为构造函数的模板参数。\",\"要在当前模拟实现的shared_ptr的基础上支持定制删除器，就只能给shared_ptr类再增加一个模板参数，在构造shared_ptr对象时就需要指定删除器的类型。然后增加一个支持传入删除器的构造函数，在构造对象时将删除器保存下来，在需要释放资源的时候调用该删除器进行释放即可。最好在设置一个默认的删除器，如果用户定义shared_ptr对象时不传入删除器，则默认以delete的方式释放资源。 代码如下：\",\"namespace cl { //默认的删除器 template<class T> struct Delete { void operator()(const T* ptr) { delete ptr; } }; template<class T, class D = Delete<T>> class shared_ptr { private: void ReleaseRef() { _pmutex->lock(); bool flag = false; if (--(*_pcount) == 0) //将管理的资源对应的引用计数-- { if (_ptr != nullptr) { cout << \\\"delete: \\\" << _ptr << endl; _del(_ptr); //使用定制删除器释放资源 _ptr = nullptr; } delete _pcount; _pcount = nullptr; flag = true; } _pmutex->unlock(); if (flag == true) { delete _pmutex; } } //... public: shared_ptr(T* ptr, D del) : _ptr(ptr) , _pcount(new int(1)) , _pmutex(new mutex) , _del(del) {} //... private: T* _ptr; //管理的资源 int* _pcount; //管理的资源对应的引用计数 mutex* _pmutex; //管理的资源对应的互斥锁 D _del; //管理的资源对应的删除器 }; }\",\"这时我们模拟实现的shared_ptr就支持定制删除器了，但是使用起来没有C++标准库中的那么方便。\",\"如果传入的删除器是一个仿函数，那么需要在构造shared_ptr对象时指明仿函数的类型。\",\"如果传入的删除器是一个lambda表达式就更麻烦了，因为lambda表达式的类型不太容易获取。这里可以将lambda表达式的类型指明为一个包装器类型，让编译器传参时自行进行推演，也可以先用auto接收lambda表达式，然后再用decltype来声明删除器的类型。\",\"template<class T> struct DelArr { void operator()(const T* ptr) { cout << \\\"delete[]: \\\" << ptr << endl; delete[] ptr; } }; int main() { //仿函数示例 cl::shared_ptr<ListNode, DelArr<ListNode>> sp1(new ListNode[10], DelArr<ListNode>()); //lambda示例1 cl::shared_ptr<FILE, function<void(FILE*)>> sp2(fopen(\\\"test.cpp\\\", \\\"r\\\"), [](FILE* ptr){ cout << \\\"fclose: \\\" << ptr << endl; fclose(ptr); }); //lambda示例2 auto f = [](FILE* ptr){ cout << \\\"fclose: \\\" << ptr << endl; fclose(ptr); }; cl::shared_ptr<FILE, decltype(f)> sp3(fopen(\\\"test.cpp\\\", \\\"r\\\"), f); return 0; }\"]},\"232\":{\"h\":\"std::weak_ptr\"},\"233\":{\"h\":\"std::shared_ptr的循环引用问题\",\"t\":[\"循环引用问题\",\"shared_ptr的循环引用问题在一些特定的场景下才会产生。比如定义如下的结点类，并在结点类的析构函数中打印一句提示语句，便于判断结点是否正确释放。\",\"struct ListNode { ListNode* _next; ListNode* _prev; int _val; ~ListNode() { cout << \\\"~ListNode()\\\" << endl; } };\",\"现在以new的方式在堆上构建两个结点，并将这两个结点连接起来，在程序的最后以delete的方式释放这两个结点。比如：\",\"int main() { ListNode* node1 = new ListNode; ListNode* node2 = new ListNode; node1->_next = node2; node2->_prev = node1; //... delete node1; delete node2; return 0; }\",\"上述程序是没有问题的，两个结点都能够正确释放。为了防止程序中途返回或抛异常等原因导致结点未被释放，我们将这两个结点分别交给两个shared_ptr对象进行管理，这时为了让连接节点时的赋值操作能够执行，就需要把ListNode类中的next和prev成员变量的类型也改为shared_ptr类型。比如：\",\"struct ListNode { std::shared_ptr<ListNode> _next; std::shared_ptr<ListNode> _prev; int _val; ~ListNode() { cout << \\\"~ListNode()\\\" << endl; } }; int main() { std::shared_ptr<ListNode> node1(new ListNode); std::shared_ptr<ListNode> node2(new ListNode); node1->_next = node2; node2->_prev = node1; //... return 0; }\",\"这时程序运行结束后两个结点都没有被释放，但如果去掉连接结点时的两句代码中的任意一句，那么这两个结点就都能够正确释放，根本原因就是因为这两句连接结点的代码导致了循环引用。\",\"当以new的方式申请到两个ListNode结点并交给两个智能指针管理后，这两个资源对应的引用计数都被加到了1。如下图： \",\"将这两个结点连接起来后，资源1当中的next成员与node2一同管理资源2，资源2中的prev成员与node1一同管理资源1，此时这两个资源对应的引用计数都被加到了2。如下图： \",\"当出了main函数的作用域后，node1和node2的生命周期也就结束了，因此这两个资源对应的引用计数最终都减到了1。如下图： \",\"循环引用导致资源未被释放的原因：\",\"当资源对应的引用计数减为0时对应的资源才会被释放，因此Node1的释放取决于Node2当中的_prev成员，而Node2的释放取决于Node1当中的_next成员。 而Node1当中的next成员的释放又取决于Node1，Node2当中的_prev成员的释放又取决于Node2，于是这就变成了一个死循环，最终导致资源无法释放。 而如果连接结点时只进行一个连接操作，那么当node1和node2的生命周期结束时，就会有一个资源对应的引用计数被减为0，此时这个资源就会被释放，这个释放后另一个资源的引用计数也会被减为0，最终两个资源就都被释放了，这就是为什么只进行一个连接操作时这两个结点就都能够正确释放的原因。\"]},\"234\":{\"h\":\"std::weak_ptr解决循环引用问题\",\"t\":[\"解决循环引用问题\",\"weak_ptr是C++11中引入的智能指针，weak_ptr不是用来管理资源的释放的，它主要是用来解决shared_ptr的循环引用问题的。\",\"weak_ptr支持用shared_ptr对象来构造weak_ptr对象，构造出来的weak_ptr对象与shared_ptr对象管理同一个资源，但不会增加这块资源对应的引用计数。 将ListNode中的next和prev成员的类型换成weak_ptr就不会导致循环引用问题了，此时当node1和node2生命周期结束时两个资源对应的引用计数就都会被减为0，进而释放这两个结点的资源。比如：\",\"struct ListNode { std::weak_ptr<ListNode> _next; std::weak_ptr<ListNode> _prev; int _val; ~ListNode() { cout << \\\"~ListNode()\\\" << endl; } }; int main() { std::shared_ptr<ListNode> node1(new ListNode); std::shared_ptr<ListNode> node2(new ListNode); cout << node1.use_count() << endl; cout << node2.use_count() << endl; node1->_next = node2; node2->_prev = node1; //... cout << node1.use_count() << endl; cout << node2.use_count() << endl; return 0; }\",\"通过use_count获取这两个资源对应的引用计数就会发现，在结点连接前后这两个资源对应的引用计数就是1，根本原因就是weak_ptr不会增加管理的资源对应的引用计数。\",\"weak_ptr的模拟实现\",\"简易版的weak_ptr的实现步骤如下：\",\"提供一个无参的构造函数，比如刚才new ListNode时就会调用weak_ptr的无参的构造函数。\",\"支持用shared_ptr对象拷贝构造weak_ptr对象，构造时获取shared_ptr对象管理的资源。\",\"支持用shared_ptr对象拷贝赋值给weak_ptr对象，赋值时获取shared_ptr对象管理的资源。\",\"对*和->运算符进行重载，使weak_ptr对象具有指针一样的行为。 代码如下：\",\"namespace cl { template<class T> class weak_ptr { public: weak_ptr() :_ptr(nullptr) {} weak_ptr(const shared_ptr<T>& sp) :_ptr(sp.get()) {} weak_ptr& operator=(const shared_ptr<T>& sp) { _ptr = sp.get(); return *this; } //可以像指针一样使用 T& operator*() { return *_ptr; } T* operator->() { return _ptr; } private: T* _ptr; //管理的资源 }; }\",\"说明一下： shared_ptr还会提供一个get函数，用于获取其管理的资源。\"]},\"235\":{\"c\":[\"auto_ptr\",\"unique_ptr\",\"shared_ptr\",\"weak_ptr\",\"C++\"]},\"236\":{\"c\":[\"智能指针\"]},\"237\":{\"h\":\"Array(数组)\",\"t\":[\"数组是同一种数据类型元素的集合。 在Go语言中，数组从声明时就确定，使用时可以修改数组成员，但是数组大小不可变化。 基本语法：\",\"// 定义一个长度为3元素类型为int的数组a var a [3]int\"]},\"238\":{\"h\":\"数组定义：\",\"t\":[\"var 数组变量名 [元素数量]T\",\"比如：var a [5]int， 数组的长度必须是常量，并且长度是数组类型的一部分。一旦定义，长度不能变。 [5]int和[10]int是不同的类型。\",\"var a [3]int var b [4]int a = b //不可以这样做，因为此时a和b是不同的类型\",\"数组可以通过下标进行访问，下标是从0开始，最后一个元素下标是：len-1，访问越界（下标在合法范围之外），则触发访问越界，会panic。\"]},\"239\":{\"h\":\"数组的初始化\",\"t\":[\"数组的初始化也有很多方式。\"]},\"240\":{\"h\":\"方法一\",\"t\":[\"初始化数组时可以使用初始化列表来设置数组元素的值。\",\"func main() { var testArray [3]int //数组会初始化为int类型的零值 var numArray = [3]int{1, 2} //使用指定的初始值完成初始化 var cityArray = [3]string{\\\"北京\\\", \\\"上海\\\", \\\"深圳\\\"} //使用指定的初始值完成初始化 fmt.Println(testArray) //[0 0 0] fmt.Println(numArray) //[1 2 0] fmt.Println(cityArray) //[北京 上海 深圳] }\"]},\"241\":{\"h\":\"方法二\",\"t\":[\"按照上面的方法每次都要确保提供的初始值和数组长度一致，一般情况下我们可以让编译器根据初始值的个数自行推断数组的长度，例如：\",\"func main() { var testArray [3]int var numArray = [...]int{1, 2} var cityArray = [...]string{\\\"北京\\\", \\\"上海\\\", \\\"深圳\\\"} fmt.Println(testArray) //[0 0 0] fmt.Println(numArray) //[1 2] fmt.Printf(\\\"type of numArray:%T\\\\n\\\", numArray) //type of numArray:[2]int fmt.Println(cityArray) //[北京 上海 深圳] fmt.Printf(\\\"type of cityArray:%T\\\\n\\\", cityArray) //type of cityArray:[3]string }\"]},\"242\":{\"h\":\"方法三\",\"t\":[\"我们还可以使用指定索引值的方式来初始化数组，例如:\",\"func main() { a := [...]int{1: 1, 3: 5} fmt.Println(a) // [0 1 0 5] fmt.Printf(\\\"type of a:%T\\\\n\\\", a) //type of a:[4]int }\"]},\"243\":{\"h\":\"数组的遍历\",\"t\":[\"遍历数组a有以下两种方法：\",\"func main() { var a = [...]string{\\\"北京\\\", \\\"上海\\\", \\\"深圳\\\"} // 方法1：for循环遍历 for i := 0; i < len(a); i++ { fmt.Println(a[i]) } // 方法2：for range遍历 for index, value := range a { fmt.Println(index, value) } }\"]},\"244\":{\"h\":\"多维数组\",\"t\":[\"Go语言是支持多维数组的，我们这里以二维数组为例（数组中又嵌套数组）。\"]},\"245\":{\"h\":\"二维数组的定义\",\"t\":[\"func main() { a := [3][2]string{ {\\\"北京\\\", \\\"上海\\\"}, {\\\"广州\\\", \\\"深圳\\\"}, {\\\"成都\\\", \\\"重庆\\\"}, } fmt.Println(a) //[[北京 上海] [广州 深圳] [成都 重庆]] fmt.Println(a[2][1]) //支持索引取值:重庆 }\"]},\"246\":{\"h\":\"二维数组的遍历\",\"t\":[\"func main() { a := [3][2]string{ {\\\"北京\\\", \\\"上海\\\"}, {\\\"广州\\\", \\\"深圳\\\"}, {\\\"成都\\\", \\\"重庆\\\"}, } for _, v1 := range a { for _, v2 := range v1 { fmt.Printf(\\\"%s\\\\t\\\", v2) } fmt.Println() } }\",\"输出：\",\"北京 上海 广州 深圳 成都 重庆\",\"注意： 多维数组只有第一层可以使用...来让编译器推导数组长度。例如：\",\"//支持的写法 a := [...][2]string{ {\\\"北京\\\", \\\"上海\\\"}, {\\\"广州\\\", \\\"深圳\\\"}, {\\\"成都\\\", \\\"重庆\\\"}, } //不支持多维数组的内层使用... b := [3][...]string{ {\\\"北京\\\", \\\"上海\\\"}, {\\\"广州\\\", \\\"深圳\\\"}, {\\\"成都\\\", \\\"重庆\\\"}, }\"]},\"247\":{\"h\":\"数组是值类型\",\"t\":[\"数组是值类型，赋值和传参会复制整个数组。因此改变副本的值，不会改变本身的值。\",\"func modifyArray(x [3]int) { x[0] = 100 } func modifyArray2(x [3][2]int) { x[2][0] = 100 } func main() { a := [3]int{10, 20, 30} modifyArray(a) //在modify中修改的是a的副本x fmt.Println(a) //[10 20 30] b := [3][2]int{ {1, 1}, {1, 1}, {1, 1}, } modifyArray2(b) //在modify中修改的是b的副本x fmt.Println(b) //[[1 1] [1 1] [1 1]] }\",\"注意：\",\"数组支持 “==\\\"、”!=\\\" 操作符，因为内存总是被初始化过的。\",\"[n]*T表示指针数组，*[n]T表示数组指针 。\"]},\"248\":{\"h\":\"Go语言fmt包(输入,输出,格式化占位符)\",\"t\":[\"fmt 是Go语言中的标准库主要是用来 Go语言中终端输入输出以及格式化输出常用的函数.\",\"Go 语言标准库中的 fmt 包提供了打印函数将数据以字符串形式输出到控制台、文件、其他满足 io.Writer 接口的至以及其他字符串中\"]},\"249\":{\"h\":\"输出\",\"t\":[\"标准库fmt提供了以下几种输出相关的函数.\"]},\"250\":{\"h\":\"Print\",\"t\":[\"Print 系列函数会将内容输出到系统的标准输出,区别在于Print 函数直接输入内容到终端,\",\"package main import \\\"fmt\\\" func main() { fmt.Print(\\\"hello\\\") fmt.Print(\\\"我叫春生\\\") fmt.Print(\\\"我是北京吴彦祖\\\") }\"]},\"251\":{\"h\":\"Printf\",\"t\":[\"Printf函数支持格式化输出字符串.\",\"package main import \\\"fmt\\\" func main() { fmt.Printf(\\\"我是春生，人称北京: %s \\\\n\\\",\\\"吴彦祖\\\") fmt.Printf(\\\"是不是季度我的容颜。\\\\n\\\") }\"]},\"252\":{\"h\":\"Println\",\"t\":[\"Println 函数 自定帮我们添加换行符 ,输出内容独占一行.他不支持格式化出去\",\"package main import \\\"fmt\\\" func main() { fmt.Println( \\\"我是春生\\\") fmt.Println( \\\"人称北京吴彦祖\\\") fmt.Println(\\\"不能嫉妒我容颜\\\") }\",\"可以看到 没个输出都是独占一行的,自动帮我们添加了 \\\\n\"]},\"253\":{\"h\":\"Fptiny\",\"t\":[\"Fprint系列函数会将内容输出到一个io.Writer接口类中,我们通常用这个函数往文件中写入内容.\",\"func Fprint(w io.Writer, a ...interface{}) (n int, err error) // 没有格式化输出。不带换行符 func Fprintf(w io.Writer, format string, a ...interface{}) (n int, err error) // 格式化输出 需要自定义 func Fprintln(w io.Writer, a ...interface{}) (n int, err error) // 自动带 换行符\",\"例子:\",\"package main import ( \\\"fmt\\\" \\\"os\\\" ) func main() { // 向标准输出写入内容 // os.Stdout 使用 os.Stdout 只能输出到 控制台 fmt.Fprintln(os.Stdout, \\\"向标准输出写入内容\\\") // io结束后输出内容 // os.OpenFile(文件路径，文件打开模式，文件权限) fileObj, err := os.OpenFile(\\\"./xx.txt\\\", os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0644) // 异常捕获 if err != nil { fmt.Println(\\\"打开文件出错，err:\\\", err) return } name := \\\"北京吴彦祖\\\" // 向打开的文件句柄中写入内容 fmt.Fprintf(fileObj, \\\"往文件中写如信息：%s\\\", name) }\",\"注意.只要满足io.Writer借口都支持写入\"]},\"254\":{\"h\":\"Sprint\",\"t\":[\"Sprint系列函数会把传入的数据生成并返回一个字符串\",\"func Sprint(a ...interface{}) string func Sprintf(format string, a ...interface{}) string func Sprintln(a ...interface{}) string\",\"例子:\",\"package main import \\\"fmt\\\" func main() { s1 := fmt.Sprintf(\\\"我是春生 人称: %s\\\",\\\"北京吴彦祖\\\") s2 := fmt.Sprintln(\\\"好好学习 天天向上\\\") s3 := fmt.Sprint(\\\"劳动人民最光荣\\\") fmt.Println(s1) // 打印结果 fmt.Println(s2) // 打印结果 fmt.Println(s3) // 打印结果 }\",\"结果:\",\"我是春生 人称: 北京吴彦祖 好好学习 天天向上 劳动人民最光荣 Process finished with exit code 0\",\"结果可以看到。Sprintf 格式化 转换结果 赋值给了 s1 最终通过 fmt.Println 打印.\"]},\"255\":{\"h\":\"Errorf\",\"t\":[\"Errorf 函数根据format参数生成格式化字符并返回一个包含该字符串的错误.\",\"func Errorf(format string, a ...interface{}) error\",\"通常使用这种方式来自定义错误类型，例如：\",\"package main import \\\"fmt\\\" func main() { err := fmt.Errorf(\\\"这是一个错误信息:%s\\\",\\\"北京吴彦祖报表了\\\") fmt.Println(err) }\",\"Go1.13版本为fmt.Errorf函数新加了一个%w占位符用来生成一个可以包裹Error的Wrapping Error。\",\"package main import ( \\\"errors\\\" \\\"fmt\\\" ) func main() { e := errors.New(\\\"原始错误e\\\") w := fmt.Errorf(\\\"Wrap了一个错误%w\\\", e) fmt.Println(w) }\"]},\"256\":{\"h\":\"格式化占位符\",\"t\":[\"*printf系列函数都支持format格式化参数，在这里我们按照占位符将被替换的变量类型划分，方便查询和记忆。\"]},\"257\":{\"h\":\"通用占位符\",\"t\":[\"占位符\",\"说明\",\"%v\",\"值的默认格式表示\",\"%+v\",\"类似%v，但输出结构体时会添加字段名\",\"%#v\",\"值的Go语法表示\",\"%T\",\"打印值的类型\",\"%%\",\"百分号\",\"代码:\",\"package main import \\\"fmt\\\" func main() { var pi float64 = 3.1415926 fmt.Printf(\\\"%v \\\\n\\\",pi) // %v 会自动推导出当前的变量 是什么格式 类型输出 var o = struct { name string }{\\\"春生\\\"} fmt.Printf(\\\"%v \\\\n\\\",o) // 输出值 fmt.Printf(\\\"%+v \\\\n\\\",o) // 结构体输出 建 和 值 fmt.Printf(\\\"%#v \\\\n\\\",o) // 以Go的语法输出 fmt.Printf(\\\"%T \\\\n\\\",o) // %T 打印值的类型 fmt.Printf(\\\"%T \\\\n\\\",pi) // %T 打印值的类型 fmt.Printf(\\\"%% %v\\\",100) // 如果打印的是 带有 %的特殊 形式 需要加上 %%去注视特殊字符 }\",\"结果:\",\"3.1415926 {春生} {name:春生} struct { name string }{name:\\\"春生\\\"} struct { name string } float64 % 100 Process finished with exit code 0\"]},\"258\":{\"h\":\"布尔型\",\"t\":[\"占位符\",\"说明\",\"%t\",\"true或false\",\"fmt.Printf(\\\"%t \\\\n\\\",true) fmt.Printf(\\\"%t \\\\n\\\",false)\",\"结果:\",\"true false Process finished with exit code 0\"]},\"259\":{\"h\":\"整型\",\"t\":[\"占位符\",\"说明\",\"%b\",\"表示为二进制\",\"%c\",\"该值对应的unicode码值\",\"%d\",\"表示为十进制\",\"%o\",\"表示为八进制\",\"%x\",\"表示为十六进制，使用a-f\",\"%X\",\"表示为十六进制，使用A-F\",\"%U\",\"表示为Unicode格式：U+1234，等价于”U+%04X”\",\"%q\",\"该值对应的单引号括起来的go语法字符字面值，必要时会采用安全的转义表示\",\"示例代码如下：\",\"n := 65 fmt.Printf(\\\"%b\\\\n\\\", n) fmt.Printf(\\\"%c\\\\n\\\", n) fmt.Printf(\\\"%d\\\\n\\\", n) fmt.Printf(\\\"%o\\\\n\\\", n) fmt.Printf(\\\"%x\\\\n\\\", n) fmt.Printf(\\\"%X\\\\n\\\", n)\",\"输出结果如下：\",\"1000001 A 65 101 41\"]},\"260\":{\"h\":\"浮点数与复数\",\"t\":[\"%b\",\"无小数部分、二进制指数的科学计数法，如-123456p-78\",\"%e\",\"科学计数法，如-1234.456e+78\",\"%E\",\"科学计数法，如-1234.456E+78\",\"%f\",\"有小数部分但无指数部分，如123.456\",\"%F\",\"等价于%f\",\"%g\",\"根据实际情况采用%e或%f格式（以获得更简洁、准确的输出）\",\"%G\",\"根据实际情况采用%E或%F格式（以获得更简洁、准确的输出）\",\"示例代码如下：\",\"f := 12.34 fmt.Printf(\\\"%b\\\\n\\\", f) fmt.Printf(\\\"%e\\\\n\\\", f) fmt.Printf(\\\"%E\\\\n\\\", f) fmt.Printf(\\\"%f\\\\n\\\", f) fmt.Printf(\\\"%g\\\\n\\\", f) fmt.Printf(\\\"%G\\\\n\\\", f)\",\"输出结果如下：\",\"6946802425218990p-49 1.234000e+01 1.234000E+01 12.340000 12.34 12.34\"]},\"261\":{\"h\":\"字符串和[]byte\",\"t\":[\"占位符\",\"说明\",\"%s\",\"直接输出字符串或者[]byte\",\"%q\",\"该值对应的双引号括起来的go语法字符串字面值，必要时会采用安全的转义表示\",\"%x\",\"每个字节用两字符十六进制数表示（使用a-f\",\"%X\",\"每个字节用两字符十六进制数表示（使用A-F）\",\"示例代码如下:\",\"s := \\\"春生\\\" fmt.Printf(\\\"%s \\\\n\\\",s) fmt.Printf(\\\"%q \\\\n\\\",s) fmt.Printf(\\\"%x \\\\n\\\",s) fmt.Printf(\\\"%X \\\\n\\\",s)\",\"输出结果如下:\",\"春生 \\\"春生\\\" e698a5e7949f E698A5E7949F\"]},\"262\":{\"h\":\"指针\",\"t\":[\"占位符\",\"说明\",\"%p\",\"表示为十六进制，并加上前导的0x\",\"s := \\\"春生\\\" fmt.Printf(\\\"%p\\\\n\\\",&s)\",\"结果:\",\"0xc000010200 Process finished with exit code 0\"]},\"263\":{\"h\":\"宽度标识符\",\"t\":[\"宽度通过一个紧跟在百分号后面的十进制数指定,如果未指定宽度,则表示值除了必须之外不作填充. 精度通过(可选的)宽度后跟点号后跟的十进制数指定.\",\"如果为指定精度,会使用默认精度;如果点号后没有跟数字吗,就表示精度为0\",\"例子:\",\"占位符\",\"说明\",\"%f\",\"默认宽度，默认精度\",\"%9f\",\"宽度9，默认精度\",\"%.2f\",\"默认宽度，精度2\",\"%9.2f\",\"宽度9，精度2\",\"%9.f\",\"宽度9，精度0\"]},\"264\":{\"h\":\"代码:\",\"t\":[\"n := 12.34 fmt.Printf(\\\"%f \\\\n\\\",n) fmt.Printf(\\\"%9f \\\\n\\\",n) fmt.Printf(\\\"%.2f \\\\n\\\",n) fmt.Printf(\\\"%9.2f \\\\n\\\",n) fmt.Printf(\\\"%9.f \\\\n\\\",n)\",\"结果:\",\"12.340000 12.340000 12.34 12.34 12 Process finished with exit code 0\"]},\"265\":{\"h\":\"其他falg\",\"t\":[\"占位符\",\"说明\",\"’+’\",\"总是输出数值的正负号；对%q（%+q）会生成全部是ASCII字符的输出（通过转义）；\",\"’ ‘\",\"对数值，正数前加空格而负数前加负号；对字符串采用%x或%X时（% x或% X）会给各打印的字节之间加空格\",\"’-’\",\"在输出右边填充空白而不是默认的左边（即从默认的右对齐切换为左对齐）；\",\"’#’\",\"八进制数前加0（%#o），十六进制数前加0x（%#x）或0X（%#X），指针去掉前面的0x（%#p）对%q（%#q），对%U（%#U）会输出空格和单引号括起来的go字面值；\",\"‘0’\",\"使用0而不是空格填充，对于数值类型会把填充的0放在正负号后面；\",\"举个例子：\",\"举个例子：\",\"s := \\\"小王子\\\" fmt.Printf(\\\"%s\\\\n\\\", s) fmt.Printf(\\\"%5s\\\\n\\\", s) fmt.Printf(\\\"%-5s\\\\n\\\", s) fmt.Printf(\\\"%5.7s\\\\n\\\", s) fmt.Printf(\\\"%-5.7s\\\\n\\\", s) fmt.Printf(\\\"%5.2s\\\\n\\\", s) fmt.Printf(\\\"%05s\\\\n\\\", s)\",\"输出结果如下：\",\"小王子 小王子 小王子 小王子 小王子 小王 00小王子\"]},\"266\":{\"h\":\"输入\",\"t\":[\"Go语言的fmt包下有fmt.Scan、fmt.Scanf、fmt.Scanln三个函数,可以在程序运行过程中从标准输入获取用户的输入.\"]},\"267\":{\"h\":\"fat.Scan\",\"t\":[\"函数定签名如下:\",\"func Scan(a ...interface{}) (n int, err error)\",\"Scan从标准输入扫描文本,读取由空白符分割的值保存到传递给本函数的参数中,换行符视为空白符.\",\"本函数返回成功扫描的数据个数和遇到的任何错误.如果读取的数据个数比提供的参数少,会返回一个错误报告原因\",\"代码:\",\"package main import \\\"fmt\\\" func main() { var ( name string age int married bool ) fmt.Scan(&name,&age,&married) fmt.Printf(\\\"扫描结果 name:%v age:%d marridL:%v\\\",name,age,married) }\",\"结果:\",\"春生 18 false 扫描结果 name:春生 age:18 marridL:false Process finished with exit code 0\",\"可以看到 fmt.Scan从标准输入中扫描用户输入的数据,将空白符分割的数据分别存在指定的参数.\"]},\"268\":{\"h\":\"fmt.Scanf\",\"t\":[\"函数签名:\",\"func Scanf(format string, a ...interface{}) (n int, err error)\",\"Scanf从标准输入扫描文本,根据format参数指定的格式去读取由空白符分隔的值保存到传递本函数的参数中\",\"本函数返回成功扫描的数据个数和遇到的任何错误.\",\"代码:\",\"package main import \\\"fmt\\\" func main() { var ( name string age int married bool ) fmt.Scanf(\\\"1:%v 2:%v 3:%v\\\", &name, &age, &married) fmt.Printf(\\\"扫描结果 name:%s age:%d married:%t \\\\n\\\", name, age, married) }\",\"结果:\",\"1:小王子 2:28 3:false 扫描结果 name:小王子 age:28 married:false Process finished with exit code 0\",\"fmt.Scanf不同于fmt.Scan简单的以空格作为输入数据的分割符,fmt.Scanf 为输入数据指定了具体的输入内容格式,只有按照格式输入数据才会被扫描并存入变量.\"]},\"269\":{\"h\":\"fmt.Scanln\",\"t\":[\"函数签名如下:\",\"func Scanln(a ...interface{}) (n int, err error)\",\"Scanln类似Scan，它在遇到换行时才停止扫描。最后一个数据后面必须有换行或者到达结束位置。\",\"本函数返回成功扫描的数据个数和遇到的任何错误。\",\"代码:\",\"package main import \\\"fmt\\\" func main() { var ( name string age int married bool ) fmt.Scanln(&name,&age,&married) fmt.Printf(\\\"扫描结果 name:%v age:%v married:%v\\\",name,age,married) }\",\"结果:\",\"chunsheng 177 true 扫描结果 name:chunsheng age:177 married:true Process finished with exit code 0\",\"fmt.Scanln遇到回车就结束扫描了,这个比较常用\"]},\"270\":{\"h\":\"bufio.NewReader\",\"t\":[\"有时候我们想完整获取输入内容,而输入的内容可能包含空格、这种情况下可以使用bufio包来实现.\",\"代码:\",\"package main import ( \\\"bufio\\\" \\\"fmt\\\" \\\"os\\\" \\\"strings\\\" ) func main() { reader := bufio.NewReader(os.Stdin) // 标准输出生成对象 fmt.Print(\\\"请输入内容:\\\") text,_ := reader.ReadString('\\\\n') // 读取回车换行 text = strings.TrimSpace(text) // strings 方法 去空格 去换行符 fmt.Printf(\\\"%v \\\\n\\\",text) //打印输出 }\",\"结果:\",\"![image-20210126100955083](/Users/chunsheng/Library/Application Support/typora-user-images/image-20210126100955083.png)\"]},\"271\":{\"h\":\"Fscan系列\",\"t\":[\"这几个函数分别类似于 fmt.Scan、fmt.Scanf、fmt.Scanln三个函数,只不过它们不是从标准输出读取数据是从io.Reader中读取数据\",\"func Fscan(r io.Reader, a ...interface{}) (n int, err error) func Fscanln(r io.Reader, a ...interface{}) (n int, err error) func Fscanf(r io.Reader, format string, a ...interface{}) (n int, err error)\",\"Fscan 系列都是和 io 阻塞的有关系 .\"]},\"272\":{\"h\":\"Sscan系列\",\"t\":[\"这几个函数功能分别类似于fmt.Scan、fmt.Scanf、fmt.Scanln三个函数，只不过它们不是从标准输入中读取数据而是从指定字符串中读取数据。\",\"package main import ( \\\"fmt\\\" ) func main() { //reader := bufio.NewReader(os.Stdin) // 标准输出生成对象 //fmt.Print(\\\"请输入内容:\\\") //text,_ := reader.ReadString('\\\\n') // 读取回车换行 //text = strings.TrimSpace(text) // strings 方法 去空格 去换行符 //fmt.Printf(\\\"%v \\\\n\\\",text) //打印输出 var ( name string age int is bool ) fmt.Scan(&name,&age,&is) // 读取由空白符分隔的值保存到传递给本函数的参数中 ，换行符视为空白符 fmt.Scanln(&name,&age,&is) // 遇到换行符是才停止扫描。最后一个数据必须有换行符 fmt.Println(name,age,is) }\"]},\"273\":{\"h\":\"切片\",\"t\":[\"切片（Slice）是一个拥有相同类型元素的可变长度的序列。它是基于数组类型做的一层封装。它非常灵活，支持自动扩容。\",\"切片是一个引用类型，它的内部结构包含地址、长度和容量。切片一般用于快速地操作一块数据集合。\"]},\"274\":{\"h\":\"切片的定义\",\"t\":[\"声明切片类型的基本语法如下：\",\"var name []T\",\"其中，\",\"name:表示变量名\",\"T:表示切片中的元素类型\",\"举个例子：\",\"func main() { // 声明切片类型 var a []string //声明一个字符串切片 var b = []int{} //声明一个整型切片并初始化 var c = []bool{false, true} //声明一个布尔切片并初始化 var d = []bool{false, true} //声明一个布尔切片并初始化 fmt.Println(a) //[] fmt.Println(b) //[] fmt.Println(c) //[false true] fmt.Println(a == nil) //true fmt.Println(b == nil) //false fmt.Println(c == nil) //false // fmt.Println(c == d) //切片是引用类型，不支持直接比较，只能和nil比较 }\"]},\"275\":{\"h\":\"切片的长度和容量\",\"t\":[\"切片拥有自己的长度和容量，我们可以通过使用内置的len()函数求长度，使用内置的cap()函数求切片的容量。\"]},\"276\":{\"h\":\"切片表达式\",\"t\":[\"切片表达式从字符串、数组、指向数组或切片的指针构造子字符串或切片。它有两种变体：一种指定low和high两个索引界限值的简单的形式，另一种是除了low和high索引界限值外还指定容量的完整的形式。\"]},\"277\":{\"h\":\"简单切片表达式\",\"t\":[\"切片的底层就是一个数组，所以我们可以基于数组通过切片表达式得到切片。 切片表达式中的low和high表示一个索引范围（左包含，右不包含），也就是下面代码中从数组a中选出1<=索引值<4的元素组成切片s，得到的切片长度=high-low，容量等于得到的切片的底层数组的容量。\",\"func main() { a := [5]int{1, 2, 3, 4, 5} s := a[1:3] // s := a[low:high] fmt.Printf(\\\"s:%v len(s):%v cap(s):%v\\\\n\\\", s, len(s), cap(s)) }\",\"输出：\",\"s:[2 3] len(s):2 cap(s):4\",\"为了方便起见，可以省略切片表达式中的任何索引。省略了low则默认为0；省略了high则默认为切片操作数的长度:\",\"a[2:] // 等同于 a[2:len(a)] a[:3] // 等同于 a[0:3] a[:] // 等同于 a[0:len(a)]\",\"注意：\",\"对于数组或字符串，如果0 <= low <= high <= len(a)，则索引合法，否则就会索引越界（out of range）。\",\"对切片再执行切片表达式时（切片再切片），high的上限边界是切片的容量cap(a)，而不是长度。常量索引必须是非负的，并且可以用int类型的值表示;对于数组或常量字符串，常量索引也必须在有效范围内。如果low和high两个指标都是常数，它们必须满足low <= high。如果索引在运行时超出范围，就会发生运行时panic。\",\"func main() { a := [5]int{1, 2, 3, 4, 5} s := a[1:3] // s := a[low:high] fmt.Printf(\\\"s:%v len(s):%v cap(s):%v\\\\n\\\", s, len(s), cap(s)) s2 := s[3:4] // 索引的上限是cap(s)而不是len(s) fmt.Printf(\\\"s2:%v len(s2):%v cap(s2):%v\\\\n\\\", s2, len(s2), cap(s2)) }\",\"输出：\",\"s:[2 3] len(s):2 cap(s):4 s2:[5] len(s2):1 cap(s2):1\"]},\"278\":{\"h\":\"完整切片表达式\",\"t\":[\"对于数组，指向数组的指针，或切片a(注意不能是字符串)支持完整切片表达式：\",\"a[low : high : max]\",\"上面的代码会构造与简单切片表达式a[low: high]相同类型、相同长度和元素的切片。另外，它会将得到的结果切片的容量设置为max-low。在完整切片表达式中只有第一个索引值（low）可以省略；它默认为0。\",\"func main() { a := [5]int{1, 2, 3, 4, 5} t := a[1:3:5] fmt.Printf(\\\"t:%v len(t):%v cap(t):%v\\\\n\\\", t, len(t), cap(t)) }\",\"输出结果：\",\"t:[2 3] len(t):2 cap(t):4\",\"完整切片表达式需要满足的条件是0 <= low <= high <= max <= cap(a)，其他条件和简单切片表达式相同。\"]},\"279\":{\"h\":\"使用make()函数构造切片\",\"t\":[\"我们上面都是基于数组来创建的切片，如果需要动态的创建一个切片，我们就需要使用内置的make()函数，格式如下：\",\"make([]T, size, cap)\",\"其中：\",\"T:切片的元素类型\",\"size:切片中元素的数量\",\"cap:切片的容量\",\"举个例子：\",\"func main() { a := make([]int, 2, 10) fmt.Println(a) //[0 0] fmt.Println(len(a)) //2 fmt.Println(cap(a)) //10 }\",\"上面代码中a的内部存储空间已经分配了10个，但实际上只用了2个。 容量并不会影响当前元素的个数，所以len(a)返回2，cap(a)则返回该切片的容量。\"]},\"280\":{\"h\":\"切片的本质\",\"t\":[\"切片的本质就是对底层数组的封装，它包含了三个信息：底层数组的指针、切片的长度（len）和切片的容量（cap）。\",\"举个例子，现在有一个数组a := [8]int{0, 1, 2, 3, 4, 5, 6, 7}，切片s1 := a[:5]，相应示意图如下。切片s2 := a[3:6]，相应示意图如下：\"]},\"281\":{\"h\":\"判断切片是否为空\",\"t\":[\"要检查切片是否为空，请始终使用len(s) == 0来判断，而不应该使用s == nil来判断。\"]},\"282\":{\"h\":\"切片不能直接比较\",\"t\":[\"切片之间是不能比较的，我们不能使用==操作符来判断两个切片是否含有全部相等元素。 切片唯一合法的比较操作是和nil比较。 一个nil值的切片并没有底层数组，一个nil值的切片的长度和容量都是0。但是我们不能说一个长度和容量都是0的切片一定是nil，例如下面的示例：\",\"var s1 []int //len(s1)=0;cap(s1)=0;s1==nil s2 := []int{} //len(s2)=0;cap(s2)=0;s2!=nil s3 := make([]int, 0) //len(s3)=0;cap(s3)=0;s3!=nil\",\"所以要判断一个切片是否是空的，要是用len(s) == 0来判断，不应该使用s == nil来判断。\"]},\"283\":{\"h\":\"切片的赋值拷贝\",\"t\":[\"下面的代码中演示了拷贝前后两个变量共享底层数组，对一个切片的修改会影响另一个切片的内容，这点需要特别注意。\",\"func main() { s1 := make([]int, 3) //[0 0 0] s2 := s1 //将s1直接赋值给s2，s1和s2共用一个底层数组 s2[0] = 100 fmt.Println(s1) //[100 0 0] fmt.Println(s2) //[100 0 0] }\"]},\"284\":{\"h\":\"切片遍历\",\"t\":[\"切片的遍历方式和数组是一致的，支持索引遍历和for range遍历。\",\"func main() { s := []int{1, 3, 5} for i := 0; i < len(s); i++ { fmt.Println(i, s[i]) } for index, value := range s { fmt.Println(index, value) } }\"]},\"285\":{\"h\":\"append()方法为切片添加元素\",\"t\":[\"Go语言的内建函数append()可以为切片动态添加元素。 可以一次添加一个元素，可以添加多个元素，也可以添加另一个切片中的元素（后面加…）。\",\"func main(){ var s []int s = append(s, 1) // [1] s = append(s, 2, 3, 4) // [1 2 3 4] s2 := []int{5, 6, 7} s = append(s, s2...) // [1 2 3 4 5 6 7] }\",\"**注意：**通过var声明的零值切片可以在append()函数直接使用，无需初始化。\",\"var s []int s = append(s, 1, 2, 3)\",\"没有必要像下面的代码一样初始化一个切片再传入append()函数使用，\",\"s := []int{} // 没有必要初始化 s = append(s, 1, 2, 3) var s = make([]int) // 没有必要初始化 s = append(s, 1, 2, 3)\",\"每个切片会指向一个底层数组，这个数组的容量够用就添加新增元素。当底层数组不能容纳新增的元素时，切片就会自动按照一定的策略进行“扩容”，此时该切片指向的底层数组就会更换。“扩容”操作往往发生在append()函数调用时，所以我们通常都需要用原变量接收append函数的返回值。\",\"举个例子：\",\"func main() { //append()添加元素和切片扩容 var numSlice []int for i := 0; i < 10; i++ { numSlice = append(numSlice, i) fmt.Printf(\\\"%v len:%d cap:%d ptr:%p\\\\n\\\", numSlice, len(numSlice), cap(numSlice), numSlice) } }\",\"输出：\",\"[0] len:1 cap:1 ptr:0xc0000a8000 [0 1] len:2 cap:2 ptr:0xc0000a8040 [0 1 2] len:3 cap:4 ptr:0xc0000b2020 [0 1 2 3] len:4 cap:4 ptr:0xc0000b2020 [0 1 2 3 4] len:5 cap:8 ptr:0xc0000b6000 [0 1 2 3 4 5] len:6 cap:8 ptr:0xc0000b6000 [0 1 2 3 4 5 6] len:7 cap:8 ptr:0xc0000b6000 [0 1 2 3 4 5 6 7] len:8 cap:8 ptr:0xc0000b6000 [0 1 2 3 4 5 6 7 8] len:9 cap:16 ptr:0xc0000b8000 [0 1 2 3 4 5 6 7 8 9] len:10 cap:16 ptr:0xc0000b8000\",\"从上面的结果可以看出：\",\"append()函数将元素追加到切片的最后并返回该切片。\",\"切片numSlice的容量按照1，2，4，8，16这样的规则自动进行扩容，每次扩容后都是扩容前的2倍。\",\"append()函数还支持一次性追加多个元素。 例如：\",\"var citySlice []string // 追加一个元素 citySlice = append(citySlice, \\\"北京\\\") // 追加多个元素 citySlice = append(citySlice, \\\"上海\\\", \\\"广州\\\", \\\"深圳\\\") // 追加切片 a := []string{\\\"成都\\\", \\\"重庆\\\"} citySlice = append(citySlice, a...) fmt.Println(citySlice) //[北京 上海 广州 深圳 成都 重庆]\"]},\"286\":{\"h\":\"切片的扩容策略\",\"t\":[\"可以通过查看$GOROOT/src/runtime/slice.go源码，其中扩容相关代码如下：\",\"newcap := old.cap doublecap := newcap + newcap if cap > doublecap { newcap = cap } else { if old.len < 1024 { newcap = doublecap } else { // Check 0 < newcap to detect overflow // and prevent an infinite loop. for 0 < newcap && newcap < cap { newcap += newcap / 4 } // Set newcap to the requested cap when // the newcap calculation overflowed. if newcap <= 0 { newcap = cap } } }\",\"从上面的代码可以看出以下内容：\",\"首先判断，如果新申请容量（cap）大于2倍的旧容量（old.cap），最终容量（newcap）就是新申请的容量（cap）。\",\"否则判断，如果旧切片的长度小于1024，则最终容量(newcap)就是旧容量(old.cap)的两倍，即（newcap=doublecap），\",\"否则判断，如果旧切片长度大于等于1024，则最终容量（newcap）从旧容量（old.cap）开始循环增加原来的1/4，即（newcap=old.cap,for {newcap += newcap/4}）直到最终容量（newcap）大于等于新申请的容量(cap)，即（newcap >= cap）\",\"如果最终容量（cap）计算值溢出，则最终容量（cap）就是新申请容量（cap）。\",\"需要注意的是，切片扩容还会根据切片中元素的类型不同而做不同的处理，比如int和string类型的处理方式就不一样。\"]},\"287\":{\"h\":\"使用copy()函数复制切片\",\"t\":[\"首先我们来看一个问题：\",\"func main() { a := []int{1, 2, 3, 4, 5} b := a fmt.Println(a) //[1 2 3 4 5] fmt.Println(b) //[1 2 3 4 5] b[0] = 1000 fmt.Println(a) //[1000 2 3 4 5] fmt.Println(b) //[1000 2 3 4 5] }\",\"由于切片是引用类型，所以a和b其实都指向了同一块内存地址。修改b的同时a的值也会发生变化。\",\"Go语言内建的copy()函数可以迅速地将一个切片的数据复制到另外一个切片空间中，copy()函数的使用格式如下：\",\"copy(destSlice, srcSlice []T)\",\"其中：\",\"srcSlice: 数据来源切片\",\"destSlice: 目标切片\",\"举个例子：\",\"func main() { // copy()复制切片 a := []int{1, 2, 3, 4, 5} c := make([]int, 5, 5) copy(c, a) //使用copy()函数将切片a中的元素复制到切片c fmt.Println(a) //[1 2 3 4 5] fmt.Println(c) //[1 2 3 4 5] c[0] = 1000 fmt.Println(a) //[1 2 3 4 5] fmt.Println(c) //[1000 2 3 4 5] }\"]},\"288\":{\"h\":\"从切片中删除元素\",\"t\":[\"Go语言中并没有删除切片元素的专用方法，我们可以使用切片本身的特性来删除元素。 代码如下：\",\"func main() { // 从切片中删除元素 a := []int{30, 31, 32, 33, 34, 35, 36, 37} // 要删除索引为2的元素 a = append(a[:2], a[3:]...) fmt.Println(a) //[30 31 33 34 35 36 37] }\",\"总结一下就是：要从切片a中删除索引为index的元素，操作方法是a = append(a[:index], a[index+1:]...)\"]},\"289\":{\"h\":\"基本数据类型\",\"t\":[\"Go语言中有丰富的数据类型，除了基本的整型、浮点型、布尔型、字符串外，还有数组、切片、结构体、函数、map、通道（channel）等。Go 语言的基本类型和其他语言大同小异。\"]},\"290\":{\"h\":\"整型\",\"t\":[\"整型分为以下两个大类： 按长度分为：int8、int16、int32、int64 对应的无符号整型：uint8、uint16、uint32、uint64\",\"其中，uint8就是我们熟知的byte型，int16对应C语言中的short型，int64对应C语言中的long型。\",\"类型\",\"描述\",\"uint8\",\"无符号 8位整型 (0 到 255)\",\"uint16\",\"无符号 16位整型 (0 到 65535)\",\"uint32\",\"无符号 32位整型 (0 到 4294967295)\",\"uint64\",\"无符号 64位整型 (0 到 18446744073709551615)\",\"int8\",\"有符号 8位整型 (-128 到 127)\",\"int16\",\"有符号 16位整型 (-32768 到 32767)\",\"int32\",\"有符号 32位整型 (-2147483648 到 2147483647)\",\"int64\",\"有符号 64位整型 (-9223372036854775808 到 9223372036854775807)\"]},\"291\":{\"h\":\"特殊整型\",\"t\":[\"类型\",\"描述\",\"uint\",\"32位操作系统上就是uint32，64位操作系统上就是uint64\",\"int\",\"32位操作系统上就是int32，64位操作系统上就是int64\",\"uintptr\",\"无符号整型，用于存放一个指针\",\"注意： 在使用int和 uint类型时，不能假定它是32位或64位的整型，而是考虑int和uint可能在不同平台上的差异。\",\"注意事项 获取对象的长度的内建len()函数返回的长度可以根据不同平台的字节长度进行变化。实际使用中，切片或 map 的元素数量等都可以用int来表示。在涉及到二进制传输、读写文件的结构描述时，为了保持文件的结构不会受到不同编译目标平台字节长度的影响，不要使用int和 uint。\"]},\"292\":{\"h\":\"数字字面量语法（Number literals syntax）\",\"t\":[\"Go1.13版本之后引入了数字字面量语法，这样便于开发者以二进制、八进制或十六进制浮点数的格式定义数字，例如：\",\"v := 0b00101101， 代表二进制的 101101，相当于十进制的 45。 v := 0o377，代表八进制的 377，相当于十进制的 255。 v := 0x1p-2，代表十六进制的 1 除以 2²，也就是 0.25。\",\"而且还允许我们用 _ 来分隔数字，比如说： v := 123_456 表示 v 的值等于 123456。\",\"我们可以借助fmt函数来将一个整数以不同进制形式展示。\",\"package main import \\\"fmt\\\" func main(){ // 十进制 var a int = 10 fmt.Printf(\\\"%d \\\\n\\\", a) // 10 fmt.Printf(\\\"%b \\\\n\\\", a) // 1010 占位符%b表示二进制 // 八进制 以0开头 var b int = 077 fmt.Printf(\\\"%o \\\\n\\\", b) // 77 // 十六进制 以0x开头 var c int = 0xff fmt.Printf(\\\"%x \\\\n\\\", c) // ff fmt.Printf(\\\"%X \\\\n\\\", c) // FF }\"]},\"293\":{\"h\":\"浮点型\",\"t\":[\"Go语言支持两种浮点型数：float32和float64。这两种浮点型数据格式遵循IEEE 754 标准： float32 的浮点数的最大范围约为 3.4e38，可以使用常量定义：math.MaxFloat32。 float64 的浮点数的最大范围约为 1.8e308，可以使用一个常量定义：math.MaxFloat64。\",\"打印浮点数时，可以使用fmt包配合动词%f，代码如下：\",\"package main import ( \\\"fmt\\\" \\\"math\\\" ) func main() { fmt.Printf(\\\"%f\\\\n\\\", math.Pi) fmt.Printf(\\\"%.2f\\\\n\\\", math.Pi) }\"]},\"294\":{\"h\":\"复数\",\"t\":[\"complex64和complex128\",\"var c1 complex64 c1 = 1 + 2i var c2 complex128 c2 = 2 + 3i fmt.Println(c1) fmt.Println(c2)\",\"复数有实部和虚部，complex64的实部和虚部为32位，complex128的实部和虚部为64位。\"]},\"295\":{\"h\":\"布尔值\",\"t\":[\"Go语言中以bool类型进行声明布尔型数据，布尔型数据只有true（真）和false（假）两个值。\",\"注意：\",\"布尔类型变量的默认值为false。\",\"Go 语言中不允许将整型强制转换为布尔型.\",\"布尔型无法参与数值运算，也无法与其他类型进行转换。\"]},\"296\":{\"h\":\"字符串\",\"t\":[\"Go语言中的字符串以原生数据类型出现，使用字符串就像使用其他原生数据类型（int、bool、float32、float64 等）一样。 Go 语言里的字符串的内部实现使用UTF-8编码。 字符串的值为双引号(\\\")中的内容，可以在Go语言的源码中直接添加非ASCII码字符，例如：\",\"s1 := \\\"hello\\\" s2 := \\\"你好\\\"\"]},\"297\":{\"h\":\"字符串转义符\",\"t\":[\"Go 语言的字符串常见转义符包含回车、换行、单双引号、制表符等，如下表所示。\",\"转义符\",\"含义\",\"\\\\r\",\"回车符（返回行首）\",\"\\\\n\",\"换行符（直接跳到下一行的同列位置）\",\"\\\\t\",\"制表符\",\"\\\\'\",\"单引号\",\"\\\\\\\"\",\"双引号\",\"\\\\\\\\\",\"反斜杠\",\"举个例子，我们要打印一个Windows平台下的一个文件路径：\",\"package main import ( \\\"fmt\\\" ) func main() { fmt.Println(\\\"str := \\\\\\\"c:\\\\\\\\Code\\\\\\\\lesson1\\\\\\\\go.exe\\\\\\\"\\\") }\"]},\"298\":{\"h\":\"多行字符串\",\"t\":[\"Go语言中要定义一个多行字符串时，就必须使用反引号字符：\",\"s1 := `第一行 第二行 第三行 ` fmt.Println(s1)\",\"反引号间换行将被作为字符串中的换行，但是所有的转义字符均无效，文本将会原样输出。\"]},\"299\":{\"h\":\"字符串的常用操作\",\"t\":[\"方法\",\"介绍\",\"len(str)\",\"求长度\",\"+或fmt.Sprintf\",\"拼接字符串\",\"strings.Split\",\"分割\",\"strings.contains\",\"判断是否包含\",\"strings.HasPrefix,strings.HasSuffix\",\"前缀/后缀判断\",\"strings.Index(),strings.LastIndex()\",\"子串出现的位置\",\"strings.Join(a[]string, sep string)\",\"join操作\"]},\"300\":{\"h\":\"byte和rune类型\",\"t\":[\"组成每个字符串的元素叫做“字符”，可以通过遍历或者单个获取字符串元素获得字符。 字符用单引号（’）包裹起来，如：\",\"var a = '中' var b = 'x'\",\"Go 语言的字符有以下两种：\",\"uint8类型，或者叫 byte 型，代表一个ASCII码字符。\",\"rune类型，代表一个 UTF-8字符。\",\"当需要处理中文、日文或者其他复合字符时，则需要用到rune类型。rune类型实际是一个int32。\",\"Go 使用了特殊的 rune 类型来处理 Unicode，让基于 Unicode 的文本处理更为方便，也可以使用 byte 型进行默认字符串处理，性能和扩展性都有照顾。\",\"// 遍历字符串 func traversalString() { s := \\\"hello沙河\\\" for i := 0; i < len(s); i++ { //byte fmt.Printf(\\\"%v(%c) \\\", s[i], s[i]) } fmt.Println() for _, r := range s { //rune fmt.Printf(\\\"%v(%c) \\\", r, r) } fmt.Println() }\",\"输出：\",\"104(h) 101(e) 108(l) 108(l) 111(o) 230(æ) 178(²) 153() 230(æ) 178(²) 179(³) 104(h) 101(e) 108(l) 108(l) 111(o) 27801(沙) 27827(河)\",\"因为UTF8编码下一个中文汉字由3~4个字节组成，所以我们不能简单的按照字节去遍历一个包含中文的字符串，否则就会出现上面输出中第一行的结果。\",\"字符串底层是一个byte数组，所以可以和[]byte类型相互转换。字符串是不能修改的 字符串是由byte字节组成，所以字符串的长度是byte字节的长度。 rune类型用来表示utf8字符，一个rune字符由一个或多个byte组成。\"]},\"301\":{\"h\":\"修改字符串\",\"t\":[\"要修改字符串，需要先将其转换成[]rune或[]byte，完成后再转换为string。无论哪种转换，都会重新分配内存，并复制字节数组。\",\"func changeString() { s1 := \\\"big\\\" // 强制类型转换 byteS1 := []byte(s1) byteS1[0] = 'p' fmt.Println(string(byteS1)) s2 := \\\"白萝卜\\\" runeS2 := []rune(s2) runeS2[0] = '红' fmt.Println(string(runeS2)) }\"]},\"302\":{\"h\":\"类型转换\",\"t\":[\"Go语言中只有强制类型转换，没有隐式类型转换。该语法只能在两个类型之间支持相互转换的时候使用。\",\"强制类型转换的基本语法如下：\",\"T(表达式)\",\"其中，T表示要转换的类型。表达式包括变量、复杂算子和函数返回值等.\",\"比如计算直角三角形的斜边长时使用math包的Sqrt()函数，该函数接收的是float64类型的参数，而变量a和b都是int类型的，这个时候就需要将a和b强制类型转换为float64类型。\",\"func sqrtDemo() { var a, b = 3, 4 var c int // math.Sqrt()接收的参数是float64类型，需要强制转换 c = int(math.Sqrt(float64(a*a + b*b))) fmt.Println(c) }\"]},\"303\":{\"h\":\"标识符和关键字\"},\"304\":{\"h\":\"标识符\",\"t\":[\"与 c/c++一样\"]},\"305\":{\"h\":\"关键字\",\"t\":[\"25个关键字\",\"break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var\",\"37个保留字\",\"Constants: true false iota nil Types: int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uinptr float32 float64 complex128 complex64 bool byte rune string error Functions: make len cap new append copy close delete complex real imag panic recover\"]},\"306\":{\"h\":\"标准声明\",\"t\":[\"var 变量名 变量类型\",\"例如\",\"var name string var age int var isOk bool\"]},\"307\":{\"h\":\"批量声明\",\"t\":[\"var ( a string b int c bool d float32 )\"]},\"308\":{\"h\":\"变量的初始化\",\"t\":[\"Go语言在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。每个变量会被初始化成其类型的默认值，例如： 整型和浮点型变量的默认值为0。 字符串变量的默认值为空字符串。 布尔型变量默认为false。 切片、函数、指针变量的默认为nil。\",\"声明变量的时候为其指定初始值。变量初始化的标准格式如下：\",\"var 变量名 类型 = 表达式\",\"举个例子：\",\"var name string = \\\"aaa\\\" var age int = 18\",\"或者一次初始化多个变量\",\"var name, age = \\\"aaa\\\", 20\"]},\"309\":{\"h\":\"类型推导\",\"t\":[\"有时候我们会将变量的类型省略，这个时候编译器会根据等号右边的值来推导变量的类型完成初始化。\",\"var name = \\\"aaa\\\" var age = 18\"]},\"310\":{\"h\":\"短变量声明\",\"t\":[\"在函数内部，可以使用更简略的 := 方式声明并初始化变量。\",\"package main import \\\"fmt\\\" // 全局变量m var m = 100 func main() { n := 10 m := 200 // 此处声明局部变量m fmt.Println(m, n) }\"]},\"311\":{\"h\":\"匿名变量\",\"t\":[\"在使用多重赋值时，如果想要忽略某个值，可以使用匿名变量（anonymous variable）。 匿名变量用一个下划线_表示，例如：\",\"func foo() (int, string) { return 10, \\\"Q1mi\\\" } func main() { x, _ := foo() _, y := foo() fmt.Println(\\\"x=\\\", x) fmt.Println(\\\"y=\\\", y) }\",\"匿名变量不占用命名空间，不会分配内存，所以匿名变量之间不存在重复声明。 (在Lua等编程语言里，匿名变量也被叫做哑元变量。)\",\"注意事项：\",\"函数外的每个语句都必须以关键字开始（var、const、func等）\",\":=不能使用在函数外。\",\"_多用于占位，表示忽略值。\",\"相对于变量，常量是恒定不变的值，多用于定义程序运行期间不会改变的那些值。 常量的声明和变量声明非常类似，只是把var换成了const，常量在定义的时候必须赋值。\",\"const pi = 3.1415 const e = 2.7182\",\"声明了pi和e这两个常量之后，在整个程序运行期间它们的值都不能再发生变化了。\",\"多个常量也可以一起声明：\",\"const ( pi = 3.1415 e = 2.7182 )\",\"const同时声明多个常量时，如果省略了值则表示和上面一行的值相同。 例如：\",\"const ( n1 = 100 n2 n3 )\",\"上面示例中，常量n1、n2、n3的值都是100。\"]},\"312\":{\"h\":\"iota\",\"t\":[\"iota是go语言的常量计数器，只能在常量的表达式中使用。\",\"iota在const关键字出现时将被重置为0。const中每新增一行常量声明将使iota计数一次(iota可理解为const语句块中的行索引)。 使用iota能简化定义，在定义枚举时很有用。\",\"举个例子：\",\"const ( n1 = iota //0 n2 //1 n3 //2 n4 //3 )\"]},\"313\":{\"h\":\"几个常见的 示例:\",\"t\":[\"使用_跳过某些值\",\"const ( n1 = iota //0 n2 //1 _ n4 //3 )\",\"iota声明中间插队\",\"const ( n1 = iota //0 n2 = 100 //100 n3 = iota //2 n4 //3 ) const n5 = iota //0\",\"定义数量级\",\"const ( _ = iota KB = 1 << (10 * iota) MB = 1 << (10 * iota) GB = 1 << (10 * iota) TB = 1 << (10 * iota) PB = 1 << (10 * iota) )\",\"多个iota定义在一行\",\"const ( a, b = iota + 1, iota + 2 //1,2 c, d //2,3 e, f //3,4 )\"]},\"314\":{\"h\":\"流程控制\"},\"315\":{\"h\":\"if条件判断基本写法\",\"t\":[\"Go语言中if条件判断的格式如下：\",\"if 表达式1 { 分支1 } else if 表达式2 { 分支2 } else{ 分支3 }\",\"当表达式1的结果为true时，执行分支1，否则判断表达式2，如果满足则执行分支2，都不满足时，则执行分支3。 if判断中的else if和else都是可选的，可以根据实际需要进行选择。\",\"Go语言规定与if匹配的左括号{必须与if和表达式放在同一行，{放在其他位置会触发编译错误。 同理，与else匹配的{也必须与else写在同一行，else也必须与上一个if或else if右边的大括号在同一行。\",\"举个例子：\",\"func ifDemo1() { score := 65 if score >= 90 { fmt.Println(\\\"A\\\") } else if score > 75 { fmt.Println(\\\"B\\\") } else { fmt.Println(\\\"C\\\") } }\"]},\"316\":{\"h\":\"if条件判断特殊写法\",\"t\":[\"if条件判断还有一种特殊的写法，可以在 if 表达式之前添加一个执行语句，再根据变量值进行判断，举个例子：\",\"func ifDemo2() { if score := 65; score >= 90 { fmt.Println(\\\"A\\\") } else if score > 75 { fmt.Println(\\\"B\\\") } else { fmt.Println(\\\"C\\\") } }\",\"思考题： 上下两种写法的区别在哪里？\",\"Go 语言中的所有循环类型均可以使用for关键字来完成。\",\"for循环的基本格式如下：\",\"for 初始语句;条件表达式;结束语句{ 循环体语句 }\",\"条件表达式返回true时循环体不停地进行循环，直到条件表达式返回false时自动退出循环。\",\"func forDemo() { for i := 0; i < 10; i++ { fmt.Println(i) } }\",\"for循环的初始语句可以被忽略，但是初始语句后的分号必须要写，例如：\",\"func forDemo2() { i := 0 for ; i < 10; i++ { fmt.Println(i) } }\",\"for循环的初始语句和结束语句都可以省略，例如：\",\"func forDemo3() { i := 0 for i < 10 { fmt.Println(i) i++ } }\",\"这种写法类似于其他编程语言中的while，在while后添加一个条件表达式，满足条件表达式时持续循环，否则结束循环。\"]},\"317\":{\"h\":\"无限循环\",\"t\":[\"for { 循环体语句 }\",\"for循环可以通过break、goto、return、panic语句强制退出循环。\",\"Go语言中可以使用for range遍历数组、切片、字符串、map 及通道（channel）。 通过for range遍历的返回值有以下规律：\",\"数组、切片、字符串返回索引和值。\",\"map返回键和值。\",\"通道（channel）只返回通道内的值。\",\"Go1.22版本开始支持 for range 整数。\",\"for i := range 5 { fmt.Println(i) } for range 2 { fmt.Println(\\\"1\\\") }\",\"输出：\",\"0 1 2 3 4 1 1\",\"使用switch语句可方便地对大量的值进行条件判断。\",\"func switchDemo1() { finger := 3 switch finger { case 1: fmt.Println(\\\"大拇指\\\") case 2: fmt.Println(\\\"食指\\\") case 3: fmt.Println(\\\"中指\\\") case 4: fmt.Println(\\\"无名指\\\") case 5: fmt.Println(\\\"小拇指\\\") default: fmt.Println(\\\"无效的输入！\\\") } }\",\"Go语言规定每个switch只能有一个default分支。\",\"一个分支可以有多个值，多个case值中间使用英文逗号分隔。\",\"func testSwitch3() { switch n := 7; n { case 1, 3, 5, 7, 9: fmt.Println(\\\"奇数\\\") case 2, 4, 6, 8: fmt.Println(\\\"偶数\\\") default: fmt.Println(n) } }\",\"分支还可以使用表达式，这时候switch语句后面不需要再跟判断变量。例如：\",\"func switchDemo4() { age := 30 switch { case age < 25: fmt.Println(\\\"好好学习吧\\\") case age > 25 && age < 35: fmt.Println(\\\"好好工作吧\\\") case age > 60: fmt.Println(\\\"好好享受吧\\\") default: fmt.Println(\\\"活着真好\\\") } }\",\"fallthrough语法可以执行满足条件的case的下一个case，是为了兼容C语言中的case设计的。\",\"func switchDemo5() { s := \\\"a\\\" switch { case s == \\\"a\\\": fmt.Println(\\\"a\\\") fallthrough case s == \\\"b\\\": fmt.Println(\\\"b\\\") case s == \\\"c\\\": fmt.Println(\\\"c\\\") default: fmt.Println(\\\"...\\\") } }\",\"输出：\",\"a b\",\"goto语句通过标签进行代码间的无条件跳转。goto语句可以在快速跳出循环、避免重复退出上有一定的帮助。Go语言中使用goto语句能简化一些代码的实现过程。 例如双层嵌套的for循环要退出时：\",\"func gotoDemo1() { var breakFlag bool for i := 0; i < 10; i++ { for j := 0; j < 10; j++ { if j == 2 { // 设置退出标签 breakFlag = true break } fmt.Printf(\\\"%v-%v\\\\n\\\", i, j) } // 外层for循环判断 if breakFlag { break } } }\",\"使用goto语句能简化代码：\",\"func gotoDemo2() { for i := 0; i < 10; i++ { for j := 0; j < 10; j++ { if j == 2 { // 设置退出标签 goto breakTag } fmt.Printf(\\\"%v-%v\\\\n\\\", i, j) } } return // 标签 breakTag: fmt.Println(\\\"结束for循环\\\") }\",\"##break(跳出循环)\",\"break语句可以结束for、switch和select的代码块。\",\"break语句还可以在语句后面添加标签，表示退出某个标签对应的代码块，标签要求必须定义在对应的for、switch和 select的代码块上。 举个例子：\",\"func breakDemo1() { BREAKDEMO1: for i := 0; i < 10; i++ { for j := 0; j < 10; j++ { if j == 2 { break BREAKDEMO1 } fmt.Printf(\\\"%v-%v\\\\n\\\", i, j) } } fmt.Println(\\\"...\\\") }\",\"continue语句可以结束当前循环，开始下一次的循环迭代过程，仅限在for循环内使用。\",\"在 continue语句后添加标签时，表示开始标签对应的循环。例如：\",\"func continueDemo() { forloop1: for i := 0; i < 5; i++ { // forloop2: for j := 0; j < 5; j++ { if i == 2 && j == 2 { continue forloop1 } fmt.Printf(\\\"%v-%v\\\\n\\\", i, j) } } }\"]},\"318\":{\"h\":\"运算符\",\"t\":[\"Go 语言内置的运算符有：\",\"算术运算符\",\"关系运算符\",\"逻辑运算符\",\"位运算符\",\"赋值运算符\"]},\"319\":{\"h\":\"算术运算符\",\"t\":[\"运算符\",\"描述\",\"+\",\"相加\",\"-\",\"相减\",\"*\",\"相乘\",\"/\",\"相除\",\"%\",\"求余\",\"注意：++（自增）和--（自减）在Go语言中是单独的语句，并不是运算符。\"]},\"320\":{\"h\":\"关系运算符\",\"t\":[\"运算符\",\"描述\",\"==\",\"检查两个值是否相等，如果相等返回 True 否则返回 False。\",\"!=\",\"检查两个值是否不相等，如果不相等返回 True 否则返回 False。\",\">\",\"检查左边值是否大于右边值，如果是返回 True 否则返回 False。\",\">=\",\"检查左边值是否大于等于右边值，如果是返回 True 否则返回 False。\",\"<\",\"检查左边值是否小于右边值，如果是返回 True 否则返回 False。\",\"<=\",\"检查左边值是否小于等于右边值，如果是返回 True 否则返回 False。\"]},\"321\":{\"h\":\"逻辑运算符\",\"t\":[\"运算符\",\"描述\",\"&&\",\"逻辑 AND 运算符。 如果两边的操作数都是 True，则为 True，否则为 False。\",\"||\",\"逻辑 OR 运算符。 如果两边的操作数有一个 True，则为 True，否则为 False。\",\"!\",\"逻辑 NOT 运算符。 如果条件为 True，则为 False，否则为 True。\"]},\"322\":{\"h\":\"位运算符\",\"t\":[\"位运算符对整数在内存中的二进制位进行操作。\",\"运算符\",\"描述\",\"&\",\"参与运算的两数各对应的二进位相与。 （两位均为1才为1）\",\"|\",\"参与运算的两数各对应的二进位相或。 （两位有一个为1就为1）\",\"^\",\"参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为1。 （两位不一样则为1）\",\"«\",\"左移n位就是乘以2的n次方。 “a«b\\\"是把a的各二进位全部左移b位，高位丢弃，低位补0。\",\"»\",\"右移n位就是除以2的n次方。 “a»b\\\"是把a的各二进位全部右移b位。\"]},\"323\":{\"h\":\"赋值运算符\",\"t\":[\"运算符\",\"描述\",\"=\",\"简单的赋值运算符，将一个表达式的值赋给一个左值\",\"+=\",\"相加后再赋值\",\"-=\",\"相减后再赋值\",\"*=\",\"相乘后再赋值\",\"/=\",\"相除后再赋值\",\"%=\",\"求余后再赋值\",\"«=\",\"左移后赋值\",\"»=\",\"右移后赋值\",\"&=\",\"按位与后赋值\",\"|=\",\"按位或后赋值\",\"^=\",\"按位异或后赋值\"]},\"324\":{\"h\":\"标签元素\"},\"325\":{\"h\":\"标签\",\"t\":[\"标签\",\"描述\",\"例子\",\"<h>\",\"标题\",\"<h1><h1/>\",\"<p>\",\"段落\",\"<p><p/>\",\"<br>\",\"换行\",\"<br>\",\"<hr>\",\"水平线\",\"<hr>\",\"<! >\",\"注释\",\"<! 这是一个注释>\",\"<a>\",\"链接\",\"<a href=\\\"https://www.runoob.com\\\">这是一个链接</a>\",\"<img>\",\"图像\",\"<img src=\\\"/images/logo.png\\\" width=\\\"258\\\" height=\\\"39\\\" />\",\"HTML 文本格式化标签\",\"标签\",\"描述\",\"<b>\",\"定义粗体文本\",\"<em>\",\"定义着重文字 ( 斜体字 )\",\"<i>\",\"字体图标\",\"<u>\",\"下划线\",\"<small>\",\"定义小号字\",\"<strong>\",\"定义加重语气\",\"<sub>\",\"定义下标字\",\"<sup>\",\"定义上标字\",\"<ins>\",\"定义插入字\",\"<del>\",\"定义删除字\",\"HTML \\\"计算机输出\\\" 标签\",\"标签\",\"描述\",\"<code>\",\"定义计算机代码\",\"<kbd>\",\"定义键盘码\",\"<samp>\",\"定义计算机代码样本\",\"<var>\",\"定义变量\",\"<pre>\",\"定义预格式文本\",\"HTML 引文, 引用, 及标签定义\",\"标签\",\"描述\",\"<abbr>\",\"定义缩写\",\"<address>\",\"定义地址\",\"<bdo>\",\"定义文字方向\",\"<blockquote>\",\"定义长的引用\",\"<q>\",\"定义短的引用语\",\"<cite>\",\"定义引用、引证\",\"<dfn>\",\"定义一个定义项目\"]},\"326\":{\"c\":[\"html\"]},\"327\":{\"c\":[\"标签\"]},\"328\":{\"h\":\"KString\",\"t\":[\"成员变量\",\"private: char* data; size_t length; size_t capacity; // 用于优化内存管理，避免频繁的 realloc\",\"构造函数\",\"KString(); // 默认构造函数 KString(const char* str); // 传入 C 风格字符串的构造函数 KString(const KString& other); // 拷贝构造函数 KString(KString&& other) noexcept; // 移动构造函数 KString& operator=(const KString& other); // 拷贝赋值运算符 KString& operator=(KString&& other) noexcept; // 移动赋值运算符 ~KString(); // 析构函数\",\"内存管理\",\"void clear(); // 清空字符串 void append(const KString& other); // 追加另一个字符串\",\"元素操作\",\"size_t size() const; // 获取字符串长度 size_t get_capacity() const; // 获取字符串当前容量 const char* c_str() const; // 获取 C 风格字符串\",\"元素访问\",\"char& operator[](size_t index); // 重载 [] 运算符 char& at(size_t index); // 重载 at() 函数，支持越界检查\",\"额外功能\",\"bool empty() const; // 判断字符串是否为空 KString substr(size_t pos, size_t len) const; // 获取子串 size_t find(const KString& str) const; // 查找子字符串\",\"运算符重载\",\"KString operator+(const KString& other) const; // 拼接字符串 bool operator==(const KString& other) const; // 比较是否相等 bool operator<(const KString& other) const; // 字典序比较 bool operator>(const KString& other) const; // 字典序比较 bool operator<=(const KString& other) const; // 字典序比较 bool operator>=(const KString& other) const; // 字典序比较 friend std::ostream& operator<<(std::ostream& os, const KString& str); // 输出运算符\"]},\"329\":{\"c\":[\"String\",\"C++\"]},\"330\":{\"c\":[\"STL\"]},\"331\":{\"h\":\"KAllocator\",\"t\":[\"基于内存池的自定义堆内存管理器，主要用于优化小对象的内存分配与释放。 其核心思想是预分配一块连续内存，并使用空闲链表进行管理，从而减少动态内存分配的开销。\",\"内存池 (memory_pool)： 预先分配固定大小的内存块，提高分配效率。\",\"空闲链表 (free_list)： 维护已释放的块，供后续复用，避免频繁调用 malloc/free。\",\"分配策略： 先检查 free_list，若无可用块，则顺序分配新块。\",\"释放策略： 释放的内存不会归还给系统，而是加入 free_list，加快后续分配速度。\",\"兼容 STL： 通过 rebind 机制，使 KAllocator 适用于标准库容器\"]},\"332\":{\"h\":\"代码流程\",\"t\":[\"初始化：\",\"memory_pool 作为固定大小的数组，存放最多 capacity 个 T 类型对象。\",\"free_list 为空，current 记录当前分配位置。\",\"分配内存 allocate()\",\"检查 free_list 是否有可用块：\",\"若存在，则从 free_list 取出一个块。\",\"若 free_list 为空，则从 memory_pool 分配新块。\",\"若 memory_pool 已满，则调用 std::allocator<T> 进行动态分配。\",\"释放内存（deallocate()）\",\"释放的内存不会归还给系统，而是加入 free_list，以便后续复用。\",\"维护 free_list 结构，使其始终指向最新释放的块。\",\"若 n 超过 capacity，则使用 std::allocator<T> 进行正常释放。\",\"提供类似 STL 迭代器的功能。\",\"支持指针操作 (operator*, operator->) 使其像指针一样使用。\",\"支持递增和运算 (operator++, operator+, operator-) 方便遍历容器。\",\"支持比较运算 (operator==, operator!=) 便于控制循环。\",\"兼容 STL 迭代器，可以用于标准库算法。\",\"类似于标准库 std::vector 的动态数组实现，具有高效的动态扩展能力，支持自定义分配器 Allocator，并提供基本的容器操作接口。\",\"动态内存管理：使用 KAllocator 进行内存管理，支持动态扩容和缩容。\",\"元素管理：提供插入、删除、访问、清空等操作。\",\"迭代器支持：提供 begin() 和 end() 以支持遍历。\",\"移动语义支持：实现移动构造和移动赋值优化性能。\",\"成员变量\",\"private: T* m_data; // 数据存储指针 size_t m_capacity; // 容器容量 size_t m_size; // 当前元素个数 Allocator m_allocator; // 内存分配器\",\"构造函数\",\"KVector(); // 默认构造函数 KVector(size_t size); // 带初始值（大小）的构造函数 template<typename... Args> KVector(Args... args); // 带初始值（数值）的构造函数 KVector(std::initializer_list<T> initList); // 列表初始化构造函数 KVector(const KVector& kvector); // 拷贝构造函数 KVector(KVector&& other) noexcept;// 移动构造函数 KVector& operator=(KVector&& other) noexcept;// 移动赋值运算符\",\"内存管理\",\"void reserve(size_t new_capacity); // 重新分配内存 void resize(size_t newSize, const T& value = T()); // 调整大小 void clear(); // 清空数组\",\"元素访问\",\"T& operator[](int index); // 获取元素 T& at(int index); // 通过at函数获取\",\"元素操作\",\"void push_back(T&& value); // 插入元素 void insert(int index, T&& value); // 在指定位置插入元素 void erase(int index); // 删除指定位置的元素 void pop_back(); // 删除最后一个元素 size_t getSize() const; // 获取容器大小 size_t getCapacity() const; // 获取容器容量\",\"迭代器支持\",\"iterator begin(); // 获取迭代器的起始位置 iterator end(); // 获取迭代器的结束位置\"]},\"333\":{\"c\":[\"String\",\"C++\"]},\"334\":{\"c\":[\"STL\"]},\"335\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"336\":{\"h\":\"Zh\"},\"337\":{\"h\":\"STL\"},\"338\":{\"h\":\"Ultralytics\"},\"339\":{\"h\":\"Linux\"},\"340\":{\"h\":\"操作系统\"},\"341\":{\"h\":\"My SQL\"},\"342\":{\"h\":\"数据库\"},\"343\":{\"h\":\"C\"},\"344\":{\"h\":\"编程语言\"},\"345\":{\"h\":\"Golang\"},\"346\":{\"h\":\"Html\"},\"347\":{\"h\":\"STL\"}},\"dirtCount\":0,\"index\":[[\"调整大小\",{\"1\":{\"332\":1}}],[\"调用该删除器时会将shared\",{\"1\":{\"231\":1}}],[\"列表初始化构造函数\",{\"1\":{\"332\":1}}],[\"列子查询\",{\"0\":{\"210\":1},\"1\":{\"208\":1}}],[\"带初始值\",{\"1\":{\"332\":2}}],[\"带有\",{\"1\":{\"257\":1}}],[\"动态内存管理\",{\"1\":{\"332\":1}}],[\"迭代器支持\",{\"1\":{\"332\":2}}],[\"迭代器\",{\"1\":{\"332\":1}}],[\"迭代器的功能\",{\"1\":{\"332\":1}}],[\"超过\",{\"1\":{\"332\":1}}],[\"维护\",{\"1\":{\"332\":1}}],[\"维护已释放的块\",{\"1\":{\"331\":1}}],[\"已满\",{\"1\":{\"332\":1}}],[\"取出一个块\",{\"1\":{\"332\":1}}],[\"取消注释行\",{\"1\":{\"76\":1}}],[\"记录当前分配位置\",{\"1\":{\"332\":1}}],[\"存放最多\",{\"1\":{\"332\":1}}],[\"存储的的是\",{\"1\":{\"219\":1}}],[\"存储到\",{\"1\":{\"196\":1}}],[\"适用于标准库容器\",{\"1\":{\"331\":1}}],[\"机制\",{\"1\":{\"331\":1}}],[\"机器学习和科学计算\",{\"1\":{\"131\":1}}],[\"兼容\",{\"1\":{\"331\":1,\"332\":1}}],[\"释放内存\",{\"1\":{\"332\":1}}],[\"释放的内存不会归还给系统\",{\"1\":{\"331\":1,\"332\":1}}],[\"释放策略\",{\"1\":{\"331\":1}}],[\"释放自己管理的资源\",{\"1\":{\"226\":1}}],[\"供后续复用\",{\"1\":{\"331\":1}}],[\"额外功能\",{\"1\":{\"328\":1}}],[\"风格字符串\",{\"1\":{\"328\":1}}],[\"风格字符串的构造函数\",{\"1\":{\"328\":1}}],[\"析构函数\",{\"1\":{\"328\":1}}],[\"避免频繁调用\",{\"1\":{\"331\":1}}],[\"避免频繁的\",{\"1\":{\"328\":1}}],[\"避免重复退出上有一定的帮助\",{\"1\":{\"317\":1}}],[\"引证\",{\"1\":{\"325\":1}}],[\"引用\",{\"1\":{\"325\":1}}],[\"引用计数++\",{\"1\":{\"229\":1,\"230\":1}}],[\"引用计数\",{\"1\":{\"228\":1,\"230\":1}}],[\"引文\",{\"1\":{\"325\":1}}],[\"斜体字\",{\"1\":{\"325\":1}}],[\"图像\",{\"1\":{\"325\":1}}],[\"图木舒克\",{\"1\":{\"81\":1,\"82\":1}}],[\"链接\",{\"1\":{\"325\":1}}],[\"链接查看渲染后的题面\",{\"1\":{\"52\":1}}],[\"水平线\",{\"1\":{\"325\":1}}],[\"段落\",{\"1\":{\"325\":1}}],[\"低位补0\",{\"1\":{\"322\":1}}],[\"高位丢弃\",{\"1\":{\"322\":1}}],[\"高级系统设置中打开环境变量\",{\"1\":{\"138\":1}}],[\"高级系统设置\",{\"1\":{\"39\":1}}],[\"位运算符对整数在内存中的二进制位进行操作\",{\"1\":{\"322\":1}}],[\"位运算符\",{\"0\":{\"322\":1},\"1\":{\"318\":1}}],[\"算术运算符\",{\"0\":{\"319\":1},\"1\":{\"318\":1}}],[\"算法工程师\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"算法题目\",{\"1\":{\"43\":1}}],[\"算法笔记\",{\"0\":{\"2\":1}}],[\"跳出循环\",{\"1\":{\"317\":1}}],[\"跳过某些值\",{\"1\":{\"313\":1}}],[\"活着真好\",{\"1\":{\"317\":1}}],[\"偶数\",{\"1\":{\"317\":1}}],[\"奇数\",{\"1\":{\"317\":1}}],[\"食指\",{\"1\":{\"317\":1}}],[\"整数\",{\"1\":{\"317\":1}}],[\"整型和浮点型变量的默认值为0\",{\"1\":{\"308\":1}}],[\"整型分为以下两个大类\",{\"1\":{\"290\":1}}],[\"整型\",{\"0\":{\"259\":1,\"290\":1}}],[\"及标签定义\",{\"1\":{\"325\":1}}],[\"及通道\",{\"1\":{\"317\":1}}],[\"及pycharm的使用\",{\"1\":{\"76\":1}}],[\"满足条件表达式时持续循环\",{\"1\":{\"316\":1}}],[\"循环体语句\",{\"1\":{\"316\":1,\"317\":1}}],[\"循环引用导致资源未被释放的原因\",{\"1\":{\"233\":1}}],[\"循环引用问题\",{\"1\":{\"233\":1}}],[\"初始语句\",{\"1\":{\"316\":1}}],[\"初始化数组时可以使用初始化列表来设置数组元素的值\",{\"1\":{\"240\":1}}],[\"初始化时不需要指明数组大小\",{\"1\":{\"158\":1}}],[\"初始化一个3x4的二维\",{\"1\":{\"17\":2}}],[\"初始化\",{\"1\":{\"17\":1,\"31\":1,\"332\":1}}],[\"放在其他位置会触发编译错误\",{\"1\":{\"315\":1}}],[\"流程控制\",{\"0\":{\"314\":1}}],[\"几个常见的\",{\"0\":{\"313\":1}}],[\"匿名变量也被叫做哑元变量\",{\"1\":{\"311\":1}}],[\"匿名变量不占用命名空间\",{\"1\":{\"311\":1}}],[\"匿名变量用一个下划线\",{\"1\":{\"311\":1}}],[\"匿名变量\",{\"0\":{\"311\":1}}],[\"短变量声明\",{\"0\":{\"310\":1}}],[\"短文本字符串\",{\"1\":{\"181\":1}}],[\"强制类型转换的基本语法如下\",{\"1\":{\"302\":1}}],[\"强制类型转换\",{\"1\":{\"301\":1}}],[\"完成后再转换为string\",{\"1\":{\"301\":1}}],[\"完整切片表达式需要满足的条件是0\",{\"1\":{\"278\":1}}],[\"完整切片表达式\",{\"0\":{\"278\":1}}],[\"沙\",{\"1\":{\"300\":1}}],[\"³\",{\"1\":{\"300\":1}}],[\"²\",{\"1\":{\"300\":2}}],[\"æ\",{\"1\":{\"300\":2}}],[\"遍历字符串\",{\"1\":{\"300\":1}}],[\"遍历数组a有以下两种方法\",{\"1\":{\"243\":1}}],[\"性能和扩展性都有照顾\",{\"1\":{\"300\":1}}],[\"性别\",{\"1\":{\"199\":1}}],[\"型进行默认字符串处理\",{\"1\":{\"300\":1}}],[\"型\",{\"1\":{\"300\":1}}],[\"拼接字符串\",{\"1\":{\"299\":1,\"328\":1}}],[\"求余后再赋值\",{\"1\":{\"323\":1}}],[\"求余\",{\"1\":{\"319\":1}}],[\"求长度\",{\"1\":{\"299\":1}}],[\"求和\",{\"1\":{\"193\":1}}],[\"`\",{\"1\":{\"298\":1}}],[\"`第一行\",{\"1\":{\"298\":1}}],[\"`lf`之类换行符的报错\",{\"1\":{\"31\":1}}],[\"反引号间换行将被作为字符串中的换行\",{\"1\":{\"298\":1}}],[\"反斜杠\",{\"1\":{\"297\":1}}],[\"反向播放\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"反向退格\",{\"1\":{\"76\":1}}],[\"制表符\",{\"1\":{\"297\":1}}],[\"制表符等\",{\"1\":{\"297\":1}}],[\"含义\",{\"1\":{\"297\":1}}],[\"含最小\",{\"1\":{\"192\":1}}],[\"转义符\",{\"1\":{\"297\":1}}],[\"转换结果\",{\"1\":{\"254\":1}}],[\"换行\",{\"1\":{\"297\":1,\"325\":1}}],[\"换行符视为空白符\",{\"1\":{\"267\":1,\"272\":1}}],[\"换行符\",{\"1\":{\"253\":1,\"297\":1}}],[\"假\",{\"1\":{\"295\":1}}],[\"假设\",{\"1\":{\"219\":1}}],[\"假设根据职位\",{\"1\":{\"80\":1}}],[\"真\",{\"1\":{\"295\":1}}],[\"布尔类型变量的默认值为false\",{\"1\":{\"295\":1}}],[\"布尔值\",{\"0\":{\"295\":1}}],[\"布尔型变量默认为false\",{\"1\":{\"308\":1}}],[\"布尔型无法参与数值运算\",{\"1\":{\"295\":1}}],[\"布尔型数据只有true\",{\"1\":{\"295\":1}}],[\"布尔型\",{\"0\":{\"258\":1},\"1\":{\"289\":1}}],[\"复杂算子和函数返回值等\",{\"1\":{\"302\":1}}],[\"复数有实部和虚部\",{\"1\":{\"294\":1}}],[\"复数\",{\"0\":{\"294\":1}}],[\"复制切片\",{\"1\":{\"287\":1}}],[\"复制search\",{\"1\":{\"87\":1}}],[\"复制当前行到下一行\",{\"1\":{\"76\":1}}],[\"八进制\",{\"1\":{\"292\":1}}],[\"八进制或十六进制浮点数的格式定义数字\",{\"1\":{\"292\":1}}],[\"八进制数前加0\",{\"1\":{\"265\":1}}],[\"读写文件的结构描述时\",{\"1\":{\"291\":1}}],[\"读取由空白符分隔的值保存到传递给本函数的参数中\",{\"1\":{\"272\":1}}],[\"读取由空白符分割的值保存到传递给本函数的参数中\",{\"1\":{\"267\":1}}],[\"读取回车换行\",{\"1\":{\"270\":1,\"272\":1}}],[\"读取整个数组\",{\"0\":{\"161\":1}}],[\"读取数组中某个元素的值\",{\"0\":{\"160\":1}}],[\"读取对应excel\",{\"1\":{\"123\":1}}],[\"读取两个\",{\"1\":{\"80\":1}}],[\"特殊整型\",{\"0\":{\"291\":1}}],[\"特殊的\",{\"1\":{\"156\":1}}],[\"到\",{\"1\":{\"290\":8}}],[\"到这一步\",{\"1\":{\"39\":1}}],[\"浮点型\",{\"0\":{\"293\":1},\"1\":{\"289\":1}}],[\"浮点数与复数\",{\"0\":{\"260\":1}}],[\"追加另一个字符串\",{\"1\":{\"328\":1}}],[\"追加切片\",{\"1\":{\"285\":1}}],[\"追加多个元素\",{\"1\":{\"285\":1}}],[\"追加一个元素\",{\"1\":{\"285\":1}}],[\"扩容\",{\"1\":{\"285\":2}}],[\"底层数组的指针\",{\"1\":{\"280\":1}}],[\"另外\",{\"1\":{\"278\":1}}],[\"另一种是除了low和high索引界限值外还指定容量的完整的形式\",{\"1\":{\"276\":1}}],[\"另一种是这份代码第一个测试点就没有通过\",{\"1\":{\"60\":1}}],[\"得到的切片长度=high\",{\"1\":{\"277\":1}}],[\"声明了pi和e这两个常量之后\",{\"1\":{\"311\":1}}],[\"声明变量的时候为其指定初始值\",{\"1\":{\"308\":1}}],[\"声明一个布尔切片并初始化\",{\"1\":{\"274\":2}}],[\"声明一个整型切片并初始化\",{\"1\":{\"274\":1}}],[\"声明一个字符串切片\",{\"1\":{\"274\":1}}],[\"声明切片类型\",{\"1\":{\"274\":1}}],[\"声明切片类型的基本语法如下\",{\"1\":{\"274\":1}}],[\"切片或\",{\"1\":{\"291\":1}}],[\"切片扩容还会根据切片中元素的类型不同而做不同的处理\",{\"1\":{\"286\":1}}],[\"切片numslice的容量按照1\",{\"1\":{\"285\":1}}],[\"切片就会自动按照一定的策略进行\",{\"1\":{\"285\":1}}],[\"切片遍历\",{\"0\":{\"284\":1}}],[\"切片唯一合法的比较操作是和nil比较\",{\"1\":{\"282\":1}}],[\"切片之间是不能比较的\",{\"1\":{\"282\":1}}],[\"切片不能直接比较\",{\"0\":{\"282\":1}}],[\"切片s2\",{\"1\":{\"280\":1}}],[\"切片s1\",{\"1\":{\"280\":1}}],[\"切片中元素的数量\",{\"1\":{\"279\":1}}],[\"切片再切片\",{\"1\":{\"277\":1}}],[\"切片表达式中的low和high表示一个索引范围\",{\"1\":{\"277\":1}}],[\"切片表达式从字符串\",{\"1\":{\"276\":1}}],[\"切片表达式\",{\"0\":{\"276\":1}}],[\"切片拥有自己的长度和容量\",{\"1\":{\"275\":1}}],[\"切片的扩容策略\",{\"0\":{\"286\":1}}],[\"切片的遍历方式和数组是一致的\",{\"1\":{\"284\":1}}],[\"切片的赋值拷贝\",{\"0\":{\"283\":1}}],[\"切片的长度\",{\"1\":{\"280\":1}}],[\"切片的长度和容量\",{\"0\":{\"275\":1}}],[\"切片的本质就是对底层数组的封装\",{\"1\":{\"280\":1}}],[\"切片的本质\",{\"0\":{\"280\":1}}],[\"切片的容量\",{\"1\":{\"279\":1}}],[\"切片的元素类型\",{\"1\":{\"279\":1}}],[\"切片的底层就是一个数组\",{\"1\":{\"277\":1}}],[\"切片的定义\",{\"0\":{\"274\":1}}],[\"切片是引用类型\",{\"1\":{\"274\":1}}],[\"切片是一个引用类型\",{\"1\":{\"273\":1}}],[\"切片一般用于快速地操作一块数据集合\",{\"1\":{\"273\":1}}],[\"切片\",{\"0\":{\"273\":1},\"1\":{\"273\":1,\"289\":1,\"308\":1,\"317\":2}}],[\"切换数据库\",{\"1\":{\"175\":1}}],[\"切换到对应的数据库下\",{\"1\":{\"175\":1}}],[\"切换到\",{\"1\":{\"27\":1}}],[\"切换到想要放置项目的路径\",{\"1\":{\"27\":1}}],[\"遇到换行符是才停止扫描\",{\"1\":{\"272\":1}}],[\"遇到含糊不清的地方\",{\"1\":{\"144\":1}}],[\"阻塞的有关系\",{\"1\":{\"271\":1}}],[\"扫描结果\",{\"1\":{\"267\":2,\"268\":2,\"269\":2}}],[\"举个例子\",{\"1\":{\"265\":2,\"274\":1,\"279\":1,\"280\":1,\"285\":1,\"287\":1,\"297\":1,\"308\":1,\"312\":1,\"315\":1,\"316\":1,\"317\":1}}],[\"举例\",{\"1\":{\"87\":1}}],[\"十六进制\",{\"1\":{\"292\":1}}],[\"十六进制数前加0x\",{\"1\":{\"265\":1}}],[\"十进制\",{\"1\":{\"292\":1}}],[\"十堰\",{\"1\":{\"81\":1,\"82\":1}}],[\"宽度9\",{\"1\":{\"263\":3}}],[\"宽度后跟点号后跟的十进制数指定\",{\"1\":{\"263\":1}}],[\"宽度通过一个紧跟在百分号后面的十进制数指定\",{\"1\":{\"263\":1}}],[\"宽度标识符\",{\"0\":{\"263\":1}}],[\"准确的输出\",{\"1\":{\"260\":2}}],[\"准备进行下一次提交\",{\"1\":{\"31\":1}}],[\"科学计数法\",{\"1\":{\"260\":2}}],[\"必要时会采用安全的转义表示\",{\"1\":{\"259\":1,\"261\":1}}],[\"必须与if和表达式放在同一行\",{\"1\":{\"315\":1}}],[\"必须使所有的数据都保持一致状态\",{\"1\":{\"216\":1}}],[\"必须要切换到对应的数据库中\",{\"1\":{\"173\":1}}],[\"去换行符\",{\"1\":{\"270\":1,\"272\":1}}],[\"去空格\",{\"1\":{\"270\":1,\"272\":1}}],[\"去注视特殊字符\",{\"1\":{\"257\":1}}],[\"去除重复记录\",{\"1\":{\"191\":1}}],[\"去除重复行\",{\"1\":{\"80\":1}}],[\"形式\",{\"1\":{\"257\":1}}],[\"春生\",{\"1\":{\"257\":4,\"261\":3,\"262\":1,\"267\":2}}],[\"劳动人民最光荣\",{\"1\":{\"254\":2}}],[\"好好享受吧\",{\"1\":{\"317\":1}}],[\"好好工作吧\",{\"1\":{\"317\":1}}],[\"好好学习吧\",{\"1\":{\"317\":1}}],[\"好好学习\",{\"1\":{\"254\":2}}],[\"好用等特点\",{\"1\":{\"70\":1}}],[\"往文件中写如信息\",{\"1\":{\"253\":1}}],[\"异常捕获\",{\"1\":{\"253\":1}}],[\"没有隐式类型转换\",{\"1\":{\"302\":1}}],[\"没有必要初始化\",{\"1\":{\"285\":2}}],[\"没有必要像下面的代码一样初始化一个切片再传入append\",{\"1\":{\"285\":1}}],[\"没有格式化输出\",{\"1\":{\"253\":1}}],[\"没个输出都是独占一行的\",{\"1\":{\"252\":1}}],[\"他不支持格式化出去\",{\"1\":{\"252\":1}}],[\"他们两者之间一对一的关系\",{\"1\":{\"199\":1}}],[\"吴彦祖\",{\"1\":{\"251\":1}}],[\"吴忠\",{\"1\":{\"81\":1,\"82\":1}}],[\"接收的参数是float64类型\",{\"1\":{\"302\":1}}],[\"接口的至以及其他字符串中\",{\"1\":{\"248\":1}}],[\"接管ap对象的资源\",{\"1\":{\"226\":1}}],[\"赋值运算符\",{\"0\":{\"323\":1},\"1\":{\"318\":1}}],[\"赋值给了\",{\"1\":{\"254\":1}}],[\"赋值和传参会复制整个数组\",{\"1\":{\"247\":1}}],[\"赋值时获取shared\",{\"1\":{\"234\":1}}],[\"方式声明并初始化变量\",{\"1\":{\"310\":1}}],[\"方法为切片添加元素\",{\"0\":{\"285\":1}}],[\"方法\",{\"1\":{\"270\":1,\"272\":1,\"299\":1}}],[\"方法2\",{\"1\":{\"243\":1}}],[\"方法1\",{\"1\":{\"243\":1}}],[\"方法三\",{\"0\":{\"242\":1}}],[\"方法二\",{\"0\":{\"241\":1}}],[\"方法一\",{\"0\":{\"240\":1}}],[\"方便遍历容器\",{\"1\":{\"332\":1}}],[\"方便查询和记忆\",{\"1\":{\"256\":1}}],[\"方便复用\",{\"1\":{\"144\":1}}],[\"方便地逐一卡掉错解\",{\"1\":{\"49\":1}}],[\"构造函数\",{\"1\":{\"328\":1,\"332\":1}}],[\"构造时获取shared\",{\"1\":{\"234\":1}}],[\"构造出来的weak\",{\"1\":{\"234\":1}}],[\"于是这就变成了一个死循环\",{\"1\":{\"233\":1}}],[\"资源2中的prev成员与node1一同管理资源1\",{\"1\":{\"233\":1}}],[\"资源1当中的next成员与node2一同管理资源2\",{\"1\":{\"233\":1}}],[\"资阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"便于控制循环\",{\"1\":{\"332\":1}}],[\"便于判断结点是否正确释放\",{\"1\":{\"233\":1}}],[\"便于数据的排序及区间范围查询\",{\"1\":{\"219\":1}}],[\"让基于\",{\"1\":{\"300\":1}}],[\"让编译器传参时自行进行推演\",{\"1\":{\"231\":1}}],[\"让两张表的数据建立连接\",{\"1\":{\"180\":1,\"198\":1}}],[\"仿函数示例\",{\"1\":{\"231\":1}}],[\"仿函数\",{\"1\":{\"231\":1}}],[\"封装成releaseref函数\",{\"1\":{\"230\":1}}],[\"封装成addref函数\",{\"1\":{\"230\":1}}],[\"加快后续分配速度\",{\"1\":{\"331\":1}}],[\"加锁解决线程安全问题\",{\"1\":{\"230\":1}}],[\"加载新内容\",{\"1\":{\"90\":1,\"91\":1,\"97\":2,\"98\":2}}],[\"根本原因就是weak\",{\"1\":{\"234\":1}}],[\"根本原因就是因为这两句连接结点的代码导致了循环引用\",{\"1\":{\"233\":1}}],[\"根本原因就是因为对引用计数的自增和自减不是原子操作\",{\"1\":{\"230\":1}}],[\"根据format参数指定的格式去读取由空白符分隔的值保存到传递本函数的参数中\",{\"1\":{\"268\":1}}],[\"根据实际情况采用\",{\"1\":{\"260\":2}}],[\"根据计算树的高度大概是\",{\"1\":{\"219\":1}}],[\"根据子查询结果的不同分为\",{\"1\":{\"208\":1}}],[\"根据业务功能的实现\",{\"1\":{\"171\":1}}],[\"根据上述文件路径可以找到\",{\"1\":{\"136\":1}}],[\"根据自己刚刚安装的路径\",{\"1\":{\"135\":1}}],[\"根据页面元素可以得到\",{\"1\":{\"101\":1}}],[\"根据关键词和城市编码生成正确的url\",{\"1\":{\"89\":1,\"91\":1,\"96\":1,\"98\":1}}],[\"根据返回的网址\",{\"1\":{\"28\":1}}],[\"理论上最终两个线程执行完毕后引用计数的值应该是1\",{\"1\":{\"230\":1}}],[\"预先分配固定大小的内存块\",{\"1\":{\"331\":1}}],[\"预期\",{\"1\":{\"230\":1}}],[\"预分配足够的内存以容纳\",{\"1\":{\"17\":1}}],[\"预分配内存\",{\"1\":{\"17\":1}}],[\"防止外部调用\",{\"1\":{\"226\":1}}],[\"防拷贝\",{\"1\":{\"226\":2}}],[\"防城港\",{\"1\":{\"81\":1,\"82\":1}}],[\"很多公司也都明确规定了禁止使用auto\",{\"1\":{\"226\":1}}],[\"很少会使用物理外键\",{\"1\":{\"198\":1}}],[\"管理不同资源的线程访问到的是不同的互斥锁\",{\"1\":{\"230\":1}}],[\"管理同一块空间的对象之间无需进行赋值操作\",{\"1\":{\"229\":1,\"230\":1}}],[\"管理的资源对应的删除器\",{\"1\":{\"231\":1}}],[\"管理的资源对应的互斥锁\",{\"1\":{\"230\":1,\"231\":1}}],[\"管理的资源对应的引用计数\",{\"1\":{\"229\":1,\"230\":1,\"231\":1}}],[\"管理的资源\",{\"1\":{\"226\":2,\"229\":1,\"230\":1,\"231\":1,\"234\":1}}],[\"管理权转移后ap被置空\",{\"1\":{\"226\":2}}],[\"管理权转移\",{\"1\":{\"226\":1}}],[\"管理和切换不同的\",{\"1\":{\"131\":1}}],[\"目标切片\",{\"1\":{\"287\":1}}],[\"目的就是让这两个指针指向同一块内存空间\",{\"1\":{\"225\":1}}],[\"目录\",{\"0\":{\"4\":1},\"1\":{\"27\":1}}],[\"浅拷贝\",{\"1\":{\"225\":2}}],[\"原始错误e\",{\"1\":{\"255\":1}}],[\"原生指针只需要指向这块空间\",{\"1\":{\"230\":1}}],[\"原因如下\",{\"1\":{\"225\":1}}],[\"原子性是指事务包装的一组\",{\"1\":{\"216\":1}}],[\"原子性\",{\"1\":{\"216\":2}}],[\"拷贝赋值运算符\",{\"1\":{\"328\":1}}],[\"拷贝赋值\",{\"1\":{\"225\":1}}],[\"拷贝构造函数\",{\"1\":{\"328\":1,\"332\":1}}],[\"拷贝构造\",{\"1\":{\"225\":1}}],[\"互斥量等等\",{\"1\":{\"225\":1}}],[\"代码流程\",{\"0\":{\"332\":1}}],[\"代码\",{\"0\":{\"264\":1},\"1\":{\"257\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1}}],[\"代码如下\",{\"1\":{\"226\":2,\"229\":1,\"230\":1,\"231\":1,\"234\":1,\"288\":1,\"293\":1}}],[\"代码中将申请到的内存空间交给了一个smartptr对象进行管理\",{\"1\":{\"224\":1}}],[\"代表一个\",{\"1\":{\"300\":1}}],[\"代表一个ascii码字符\",{\"1\":{\"300\":1}}],[\"代表十六进制的\",{\"1\":{\"292\":1}}],[\"代表八进制的\",{\"1\":{\"292\":1}}],[\"代表二进制的\",{\"1\":{\"292\":1}}],[\"代表文件传入的参数个数\",{\"1\":{\"157\":1}}],[\"代表\",{\"1\":{\"27\":1,\"89\":1}}],[\"利用对象的生命周期来控制资源\",{\"1\":{\"226\":2}}],[\"利用对象的生命周期来控制程序资源\",{\"1\":{\"225\":1}}],[\"利用智能指针解决\",{\"1\":{\"224\":1}}],[\"利用异常的重新捕获解决\",{\"1\":{\"224\":1}}],[\"捕获后先将之前申请的内存资源释放\",{\"1\":{\"224\":1}}],[\"除以\",{\"1\":{\"292\":1}}],[\"除0错误\",{\"1\":{\"224\":3}}],[\"除了基本的整型\",{\"1\":{\"289\":1}}],[\"除了需要将对应的资源和引用计数进行释放\",{\"1\":{\"230\":1}}],[\"除了需要将对应的资源和引用计数交给当前对象管理之外\",{\"1\":{\"230\":1}}],[\"除了需要将该资源释放\",{\"1\":{\"229\":1}}],[\"除了传统的目标检测外\",{\"1\":{\"130\":1}}],[\"除了\",{\"1\":{\"53\":1}}],[\"造成程序未能释放已经不再使用的内存的情况\",{\"1\":{\"224\":1}}],[\"支持动态扩容和缩容\",{\"1\":{\"332\":1}}],[\"支持自定义分配器\",{\"1\":{\"332\":1}}],[\"支持自动扩容\",{\"1\":{\"273\":1}}],[\"支持比较运算\",{\"1\":{\"332\":1}}],[\"支持递增和运算\",{\"1\":{\"332\":1}}],[\"支持指针操作\",{\"1\":{\"332\":1}}],[\"支持越界检查\",{\"1\":{\"328\":1}}],[\"支持索引遍历和for\",{\"1\":{\"284\":1}}],[\"支持索引取值\",{\"1\":{\"245\":1}}],[\"支持完整切片表达式\",{\"1\":{\"278\":1}}],[\"支持的写法\",{\"1\":{\"246\":1}}],[\"支持用shared\",{\"1\":{\"234\":2}}],[\"支持从小到大或者从大到小查找\",{\"1\":{\"219\":1}}],[\"支持多种内容类型和视图\",{\"1\":{\"46\":1}}],[\"总结一下就是\",{\"1\":{\"288\":1}}],[\"总是输出数值的正负号\",{\"1\":{\"265\":1}}],[\"总大小是\",{\"1\":{\"219\":1}}],[\"总记录数\",{\"1\":{\"196\":3}}],[\"组成每个字符串的元素叫做\",{\"1\":{\"300\":1}}],[\"组成\",{\"1\":{\"219\":1}}],[\"组成的\",{\"1\":{\"219\":1}}],[\"节点大小\",{\"1\":{\"219\":1}}],[\"节点分为\",{\"1\":{\"219\":1}}],[\"拓展\",{\"1\":{\"219\":1}}],[\"叶子节点是一个双向链表\",{\"1\":{\"219\":1}}],[\"叶子节点形成了一个双向链表\",{\"1\":{\"219\":1}}],[\"叶子节点\",{\"1\":{\"219\":2}}],[\"次磁盘\",{\"1\":{\"219\":1}}],[\"检查\",{\"1\":{\"332\":1}}],[\"检查左边值是否小于等于右边值\",{\"1\":{\"320\":1}}],[\"检查左边值是否小于右边值\",{\"1\":{\"320\":1}}],[\"检查左边值是否大于等于右边值\",{\"1\":{\"320\":1}}],[\"检查左边值是否大于右边值\",{\"1\":{\"320\":1}}],[\"检查两个值是否不相等\",{\"1\":{\"320\":1}}],[\"检查两个值是否相等\",{\"1\":{\"320\":1}}],[\"检查是否有图中的两个cuda路径\",{\"1\":{\"138\":1}}],[\"检查是否成功安装\",{\"1\":{\"135\":1}}],[\"检查是否存在\",{\"1\":{\"91\":1,\"98\":1}}],[\"检索速度就会降低\",{\"1\":{\"219\":1}}],[\"树的高度一旦高了\",{\"1\":{\"219\":1}}],[\"树的层级比较深\",{\"1\":{\"219\":1}}],[\"答案\",{\"1\":{\"219\":1}}],[\"采用二叉搜索树或者是红黑树来作为索引的结构有什么问题\",{\"1\":{\"219\":1}}],[\"思考题\",{\"1\":{\"316\":1}}],[\"思考\",{\"1\":{\"219\":1}}],[\"红\",{\"1\":{\"301\":1}}],[\"红黑树也是一棵平衡的二叉树\",{\"1\":{\"219\":1}}],[\"红河哈尼族彝族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"退化的二叉查找树\",{\"1\":{\"219\":1}}],[\"退出即可\",{\"1\":{\"72\":1}}],[\"二进制指数的科学计数法\",{\"1\":{\"260\":1}}],[\"二进制形式的极大文本数据\",{\"1\":{\"181\":1}}],[\"二进制形式的中等长度文本数据\",{\"1\":{\"181\":1}}],[\"二进制形式的长文本数据\",{\"1\":{\"181\":1}}],[\"二维数组的遍历\",{\"0\":{\"246\":1}}],[\"二维数组的定义\",{\"0\":{\"245\":1}}],[\"二叉查找树\",{\"1\":{\"219\":3}}],[\"消耗\",{\"1\":{\"218\":1}}],[\"消耗性能\",{\"1\":{\"198\":1}}],[\"降低\",{\"1\":{\"218\":1}}],[\"降低数据排序的成本\",{\"1\":{\"218\":1}}],[\"降低数据库的\",{\"1\":{\"218\":1}}],[\"降序\",{\"1\":{\"195\":1}}],[\"哪怕数据库发生异常\",{\"1\":{\"216\":1}}],[\"持久性\",{\"1\":{\"216\":2}}],[\"隔离性\",{\"1\":{\"216\":2}}],[\"撤销\",{\"1\":{\"216\":1}}],[\"失败\",{\"1\":{\"215\":1}}],[\"回滚事务\",{\"1\":{\"215\":2}}],[\"回车符\",{\"1\":{\"297\":1}}],[\"回车之后\",{\"1\":{\"167\":1}}],[\"回车后出现新建环境提醒输入y继续\",{\"1\":{\"140\":1}}],[\"再根据变量值进行判断\",{\"1\":{\"316\":1}}],[\"再以delete的方式释放管理的资源就会导致程序崩溃\",{\"1\":{\"231\":1}}],[\"再提交\",{\"1\":{\"215\":1}}],[\"再执行删除\",{\"1\":{\"176\":1}}],[\"先检查\",{\"1\":{\"331\":1}}],[\"先将当前对象管理的资源对应的引用计数\",{\"1\":{\"229\":1}}],[\"先将当前对象管理的资源释放\",{\"1\":{\"226\":1}}],[\"先开启\",{\"1\":{\"215\":1}}],[\"先注册登陆\",{\"1\":{\"50\":1}}],[\"手动提交事务使用步骤\",{\"1\":{\"215\":1}}],[\"手动提交事务\",{\"1\":{\"215\":1}}],[\"手机号\",{\"1\":{\"181\":1,\"199\":1}}],[\"简单的赋值运算符\",{\"1\":{\"323\":1}}],[\"简单切片表达式\",{\"0\":{\"277\":1}}],[\"简单来讲\",{\"1\":{\"218\":1}}],[\"简易版的weak\",{\"1\":{\"234\":1}}],[\"简易版的shared\",{\"1\":{\"229\":1}}],[\"简易版的unique\",{\"1\":{\"226\":1}}],[\"简易版的auto\",{\"1\":{\"226\":1}}],[\"简而言之\",{\"1\":{\"214\":1}}],[\"简介\",{\"0\":{\"168\":1}}],[\"事务的四大特性简称为\",{\"1\":{\"216\":1}}],[\"事务一旦提交或回滚\",{\"1\":{\"216\":1}}],[\"事务完成时\",{\"1\":{\"216\":1}}],[\"事务是不可分割的最小单元\",{\"1\":{\"216\":1}}],[\"事务是一组操作的集合\",{\"1\":{\"214\":1}}],[\"事务有哪些特性\",{\"1\":{\"216\":1}}],[\"事务中的操作要么全部成功\",{\"1\":{\"216\":1}}],[\"事务操作有关的\",{\"1\":{\"215\":1}}],[\"事务作用\",{\"1\":{\"214\":1}}],[\"事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求\",{\"1\":{\"214\":1}}],[\"事务\",{\"0\":{\"213\":1}}],[\"行子查询\",{\"0\":{\"211\":1},\"1\":{\"208\":1}}],[\"又称子查询\",{\"1\":{\"208\":1}}],[\"称为嵌套查询\",{\"1\":{\"208\":1}}],[\"更偏向于左外连接\",{\"1\":{\"206\":1}}],[\"显式内连接语法\",{\"1\":{\"205\":1}}],[\"显式内连接\",{\"1\":{\"205\":1}}],[\"显示安装程序已完成\",{\"1\":{\"138\":1}}],[\"显示具体数据\",{\"1\":{\"107\":1,\"108\":1,\"117\":1}}],[\"隐式内连接语法\",{\"1\":{\"205\":1}}],[\"隐式内连接\",{\"1\":{\"205\":1}}],[\"子串出现的位置\",{\"1\":{\"299\":1}}],[\"子查询返回的结果是多行多列\",{\"1\":{\"212\":1}}],[\"子查询返回的结果是一行\",{\"1\":{\"211\":1}}],[\"子查询返回的结果是一列\",{\"1\":{\"210\":1}}],[\"子查询返回的结果是单个值\",{\"1\":{\"209\":1}}],[\"子查询可以书写的位置\",{\"1\":{\"208\":1}}],[\"子查询结果为多行多列\",{\"1\":{\"208\":1}}],[\"子查询结果为一行\",{\"1\":{\"208\":1}}],[\"子查询结果为一列\",{\"1\":{\"208\":1}}],[\"子查询结果为单个值\",{\"1\":{\"208\":1}}],[\"子查询外部的语句可以是\",{\"1\":{\"208\":1}}],[\"子查询\",{\"0\":{\"207\":1},\"1\":{\"204\":1}}],[\"子进程可以访问的变量\",{\"1\":{\"153\":1}}],[\"子进程不能访问的变量\",{\"1\":{\"153\":1}}],[\"右移后赋值\",{\"1\":{\"323\":1}}],[\"右移n位就是除以2的n次方\",{\"1\":{\"322\":1}}],[\"右不包含\",{\"1\":{\"277\":1}}],[\"右边的子节点比父节点大\",{\"1\":{\"219\":1}}],[\"右边距设置为\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"右表\",{\"1\":{\"206\":1}}],[\"右外连接相当于查询表2\",{\"1\":{\"206\":1}}],[\"右外连接语法结构\",{\"1\":{\"206\":1}}],[\"右外连接\",{\"1\":{\"204\":1,\"206\":1}}],[\"左移后赋值\",{\"1\":{\"323\":1}}],[\"左移n位就是乘以2的n次方\",{\"1\":{\"322\":1}}],[\"左包含\",{\"1\":{\"277\":1}}],[\"左右\",{\"1\":{\"219\":1}}],[\"左边的子节点比父节点小\",{\"1\":{\"219\":1}}],[\"左边距设置为\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"左表\",{\"1\":{\"206\":1}}],[\"左外连接和右外连接是可以相互替换的\",{\"1\":{\"206\":1}}],[\"左外连接相当于查询表1\",{\"1\":{\"206\":1}}],[\"左外连接语法结构\",{\"1\":{\"206\":1}}],[\"左外连接\",{\"1\":{\"204\":1,\"206\":1}}],[\"交集部分数据\",{\"1\":{\"204\":1}}],[\"交换\",{\"1\":{\"17\":1}}],[\"交换两个容器内容\",{\"1\":{\"17\":1}}],[\"两位不一样则为1\",{\"1\":{\"322\":1}}],[\"两位有一个为1就为1\",{\"1\":{\"322\":1}}],[\"两位均为1才为1\",{\"1\":{\"322\":1}}],[\"两个值\",{\"1\":{\"295\":1}}],[\"两个结点都能够正确释放\",{\"1\":{\"233\":1}}],[\"两个集合\",{\"1\":{\"203\":1}}],[\"两种写法均可\",{\"1\":{\"151\":1}}],[\"笛卡尔乘积是指在数学中\",{\"1\":{\"203\":1}}],[\"笛卡尔积\",{\"1\":{\"203\":1}}],[\"实际使用中\",{\"1\":{\"291\":1}}],[\"实现移动构造和移动赋值优化性能\",{\"1\":{\"332\":1}}],[\"实现智能指针时需要考虑以下三个方面的问题\",{\"1\":{\"225\":1}}],[\"实现关系\",{\"1\":{\"200\":1}}],[\"实例分割\",{\"1\":{\"130\":1}}],[\"结束for循环\",{\"1\":{\"317\":1}}],[\"结束语句\",{\"1\":{\"316\":1}}],[\"结束时间\",{\"1\":{\"199\":1}}],[\"结果为1\",{\"1\":{\"322\":1}}],[\"结果可以看到\",{\"1\":{\"254\":1}}],[\"结果\",{\"1\":{\"254\":1,\"257\":1,\"258\":1,\"262\":1,\"264\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1}}],[\"结果就是\",{\"1\":{\"219\":1}}],[\"结合上述分析\",{\"1\":{\"219\":1}}],[\"结构体\",{\"1\":{\"289\":1}}],[\"结构体输出\",{\"1\":{\"257\":1}}],[\"结构中如何避免这个问题\",{\"1\":{\"219\":1}}],[\"结构组织的索引\",{\"1\":{\"219\":1}}],[\"结构\",{\"0\":{\"219\":1},\"1\":{\"219\":1,\"332\":1}}],[\"结构化查询语言\",{\"1\":{\"168\":1}}],[\"身份证的有效期\",{\"1\":{\"199\":1}}],[\"身份证签发机关\",{\"1\":{\"199\":1}}],[\"身份证号\",{\"1\":{\"199\":1}}],[\"身份信息\",{\"1\":{\"199\":1}}],[\"生日\",{\"1\":{\"199\":1}}],[\"生成的\",{\"1\":{\"106\":1}}],[\"生成的数据如下\",{\"1\":{\"82\":1}}],[\"生成文件名\",{\"1\":{\"91\":1,\"98\":1}}],[\"生成页面对象\",{\"1\":{\"89\":1}}],[\"民族\",{\"1\":{\"199\":1}}],[\"甚至在一些数据库开发规范中\",{\"1\":{\"198\":1}}],[\"逻辑\",{\"1\":{\"321\":3}}],[\"逻辑外键\",{\"1\":{\"198\":1}}],[\"逻辑运算符\",{\"0\":{\"321\":1},\"1\":{\"192\":2,\"318\":1}}],[\"集群场景\",{\"1\":{\"198\":1}}],[\"集合和\",{\"1\":{\"203\":1}}],[\"集合\",{\"1\":{\"196\":1,\"203\":1}}],[\"集合中\",{\"1\":{\"196\":1}}],[\"影响增\",{\"1\":{\"198\":1}}],[\"缺点\",{\"1\":{\"198\":1,\"218\":1}}],[\"物理外键\",{\"1\":{\"198\":1}}],[\"物理外键和逻辑外键\",{\"1\":{\"198\":1}}],[\"传入\",{\"1\":{\"328\":1}}],[\"传入的为二维列表\",{\"1\":{\"107\":1}}],[\"传递的参数\",{\"1\":{\"196\":1}}],[\"条记录\",{\"1\":{\"219\":1}}],[\"条数据\",{\"1\":{\"219\":1}}],[\"条数\",{\"1\":{\"196\":1}}],[\"条件表达式返回true时循环体不停地进行循环\",{\"1\":{\"316\":1}}],[\"条件表达式\",{\"1\":{\"316\":1}}],[\"条件查询\",{\"0\":{\"192\":1},\"1\":{\"190\":1}}],[\"条件列表\",{\"1\":{\"190\":1,\"192\":2,\"195\":1}}],[\"条件\",{\"1\":{\"187\":1,\"188\":1,\"194\":2,\"205\":1}}],[\"起始索引可以省略\",{\"1\":{\"196\":1}}],[\"起始索引从\",{\"1\":{\"196\":1}}],[\"起始索引\",{\"1\":{\"196\":2}}],[\"升序\",{\"1\":{\"195\":1}}],[\"判断字符串是否为空\",{\"1\":{\"328\":1}}],[\"判断是否包含\",{\"1\":{\"299\":1}}],[\"判断切片是否为空\",{\"0\":{\"281\":1}}],[\"判断条件不同\",{\"1\":{\"194\":1}}],[\"判断容器是否为空\",{\"1\":{\"17\":1}}],[\"面试题\",{\"1\":{\"194\":1,\"216\":1}}],[\"区别在于print\",{\"1\":{\"250\":1}}],[\"区别\",{\"1\":{\"194\":1}}],[\"区别于上面\",{\"1\":{\"116\":1}}],[\"那么当node1和node2的生命周期结束时\",{\"1\":{\"233\":1}}],[\"那么这两个结点就都能够正确释放\",{\"1\":{\"233\":1}}],[\"那么需要在构造shared\",{\"1\":{\"231\":1}}],[\"那么除了将这个资源给它之外\",{\"1\":{\"229\":1}}],[\"那么div函数中就会抛出异常\",{\"1\":{\"224\":1}}],[\"那么第三层总元素大小就是\",{\"1\":{\"219\":1}}],[\"那么第二层即第二次\",{\"1\":{\"219\":1}}],[\"那么结合第二层每个元素通过指针域找到第三层的节点\",{\"1\":{\"219\":1}}],[\"那么会找到第三层\",{\"1\":{\"219\":1}}],[\"那么会造成效率极其低下\",{\"1\":{\"219\":1}}],[\"那么根据每个元素的地址值又会找到下面的子节点\",{\"1\":{\"219\":1}}],[\"那么可以计算出一个节点可以存储的元素个数\",{\"1\":{\"219\":1}}],[\"那么就得增加树的宽度\",{\"1\":{\"219\":1}}],[\"那么\",{\"1\":{\"219\":1}}],[\"那么一个用户有可能需要\",{\"1\":{\"219\":1}}],[\"那么查询\",{\"1\":{\"219\":1}}],[\"那么数据库的所有变化将会被回滚\",{\"1\":{\"216\":1}}],[\"那么数据库的所有变化将生效\",{\"1\":{\"216\":1}}],[\"那么要执行多表查询\",{\"1\":{\"203\":1}}],[\"那么在数据库层面怎么去体现上述两者之间是一对一的关系呢\",{\"1\":{\"199\":1}}],[\"那么计算结果为0\",{\"1\":{\"193\":1}}],[\"那曲\",{\"1\":{\"81\":1,\"82\":1}}],[\"统计数量\",{\"1\":{\"193\":1}}],[\"统计该词出现的次数\",{\"1\":{\"123\":1}}],[\"进行内存管理\",{\"1\":{\"332\":1}}],[\"进行正常释放\",{\"1\":{\"332\":1}}],[\"进行动态分配\",{\"1\":{\"332\":1}}],[\"进行纵向计算\",{\"1\":{\"193\":1}}],[\"进而释放这两个结点的资源\",{\"1\":{\"234\":1}}],[\"进而完成内存资源的释放\",{\"1\":{\"224\":1}}],[\"进入yolov11环境\",{\"1\":{\"140\":1}}],[\"进入网址\",{\"1\":{\"139\":1}}],[\"进入网址后\",{\"1\":{\"50\":1}}],[\"进入选择安装方式\",{\"1\":{\"72\":1}}],[\"进入\",{\"1\":{\"27\":1}}],[\"聚合函数会忽略空值\",{\"1\":{\"193\":1}}],[\"聚合函数\",{\"0\":{\"193\":1},\"1\":{\"193\":1,\"194\":1}}],[\"非叶子节点都是由\",{\"1\":{\"219\":1}}],[\"非叶子节点\",{\"1\":{\"219\":2}}],[\"非\",{\"1\":{\"192\":1}}],[\"非空约束\",{\"1\":{\"180\":1}}],[\"匹配任意个字符\",{\"1\":{\"192\":1}}],[\"匹配单个字符\",{\"1\":{\"192\":1}}],[\"模糊匹配\",{\"1\":{\"192\":1}}],[\"占\",{\"1\":{\"219\":1}}],[\"占位符\",{\"1\":{\"192\":1,\"257\":1,\"258\":1,\"259\":1,\"261\":1,\"262\":1,\"263\":1,\"265\":1,\"292\":1}}],[\"占用空间\",{\"1\":{\"134\":1}}],[\">这是一个链接<\",{\"1\":{\"325\":1}}],[\">unlock\",{\"1\":{\"230\":2,\"231\":1}}],[\">lock\",{\"1\":{\"230\":2,\"231\":1}}],[\">运算符进行重载\",{\"1\":{\"224\":1,\"225\":1,\"226\":2,\"229\":1,\"234\":1}}],[\">>\",{\"1\":{\"224\":6,\"231\":1}}],[\">=\",{\"1\":{\"192\":1,\"286\":1,\"315\":1,\"316\":1,\"320\":1}}],[\">\",{\"1\":{\"192\":1,\"194\":2,\"224\":1,\"226\":2,\"229\":1,\"230\":1,\"231\":1,\"233\":4,\"234\":3,\"286\":1,\"315\":1,\"316\":1,\"317\":2,\"320\":1,\"325\":4,\"332\":1}}],[\"意味着可以有多个条件\",{\"1\":{\"192\":1}}],[\"别名2\",{\"1\":{\"191\":1,\"205\":2}}],[\"别名1\",{\"1\":{\"191\":1,\"205\":2}}],[\"排序方式\",{\"1\":{\"195\":1}}],[\"排序方式2\",{\"1\":{\"195\":1}}],[\"排序方式1\",{\"1\":{\"195\":1}}],[\"排序在日常开发中是非常常见的一个操作\",{\"1\":{\"195\":1}}],[\"排序查询\",{\"0\":{\"195\":1},\"1\":{\"190\":1}}],[\"排序字段列表\",{\"1\":{\"190\":1}}],[\"姓名\",{\"1\":{\"187\":1,\"199\":1}}],[\"应该在字段的规定范围内\",{\"1\":{\"186\":1}}],[\"应该会自动生成\",{\"1\":{\"32\":1}}],[\"操作方法是a\",{\"1\":{\"288\":1}}],[\"操作往往发生在append\",{\"1\":{\"285\":1}}],[\"操作\",{\"0\":{\"215\":1}}],[\"操作符\",{\"1\":{\"210\":1,\"247\":1}}],[\"操作的注意事项\",{\"1\":{\"186\":1}}],[\"操作系统\",{\"0\":{\"8\":1,\"340\":1},\"1\":{\"3\":1}}],[\"批量声明\",{\"0\":{\"307\":1}}],[\"批量添加数据\",{\"1\":{\"186\":2}}],[\"批量收集网站数据\",{\"1\":{\"80\":1}}],[\"增加\",{\"0\":{\"186\":1}}],[\"删\",{\"1\":{\"185\":1,\"198\":1}}],[\"删除最后一个元素\",{\"1\":{\"332\":1}}],[\"删除指定位置的元素\",{\"1\":{\"332\":1}}],[\"删除器\",{\"1\":{\"231\":1}}],[\"删除索引\",{\"1\":{\"220\":1}}],[\"删除数据\",{\"1\":{\"185\":1}}],[\"删除数据库\",{\"0\":{\"176\":1}}],[\"删除一张不存在的表\",{\"1\":{\"184\":1}}],[\"删除字段\",{\"1\":{\"183\":1}}],[\"删除表语法\",{\"1\":{\"184\":1}}],[\"删除表\",{\"1\":{\"177\":1}}],[\"删除变量\",{\"0\":{\"152\":1}}],[\"删除其他的\",{\"1\":{\"136\":1}}],[\"删除当前行\",{\"1\":{\"76\":1}}],[\"删除\",{\"0\":{\"184\":1,\"188\":1},\"1\":{\"76\":1,\"172\":1,\"176\":1,\"332\":1}}],[\"删除第二个位置的元素\",{\"1\":{\"17\":1}}],[\"删除向量末尾的元素\",{\"1\":{\"17\":1}}],[\"删除元素并获得下一个有效的迭代器\",{\"1\":{\"17\":1}}],[\"删除元素\",{\"1\":{\"17\":1}}],[\"旧字段名\",{\"1\":{\"183\":1}}],[\"混合日期和时间值\",{\"1\":{\"181\":2}}],[\"年份值\",{\"1\":{\"181\":1}}],[\"至\",{\"1\":{\"181\":5}}],[\"固定长度为11\",{\"1\":{\"181\":1}}],[\"固原\",{\"1\":{\"81\":1,\"82\":1}}],[\"最终容量\",{\"1\":{\"286\":1}}],[\"最终通过\",{\"1\":{\"254\":1}}],[\"最终两个资源就都被释放了\",{\"1\":{\"233\":1}}],[\"最终导致资源无法释放\",{\"1\":{\"233\":1}}],[\"最终导致func函数中申请的内存资源没有得到释放\",{\"1\":{\"224\":1}}],[\"最好在设置一个默认的删除器\",{\"1\":{\"231\":1}}],[\"最大的问题就是在数据量大的情况下\",{\"1\":{\"219\":1}}],[\"最大值\",{\"1\":{\"192\":1,\"193\":1}}],[\"最简单的形式\",{\"1\":{\"209\":1}}],[\"最常见的是\",{\"1\":{\"208\":1}}],[\"最小值\",{\"1\":{\"193\":1}}],[\"最长不会超过50\",{\"1\":{\"181\":1}}],[\"最后将传入对象管理资源的指针置空\",{\"1\":{\"226\":1}}],[\"最后一个数据必须有换行符\",{\"1\":{\"272\":1}}],[\"最后一个数据后面必须有换行或者到达结束位置\",{\"1\":{\"269\":1}}],[\"最后一个元素下标是\",{\"1\":{\"238\":1}}],[\"最后一个字段后面没有逗号\",{\"1\":{\"179\":1}}],[\"最后一页的下一页的标签为\",{\"1\":{\"97\":1}}],[\"最后点击下载即可\",{\"1\":{\"138\":1}}],[\"最后的路径一定是落在envs和pkgs\",{\"1\":{\"136\":1}}],[\"最后再添加镜像源方便下载环境的包\",{\"1\":{\"136\":1}}],[\"示例代码如下\",{\"1\":{\"259\":1,\"260\":1,\"261\":1}}],[\"示例\",{\"0\":{\"313\":1},\"1\":{\"181\":1,\"196\":1}}],[\"极大文本数据\",{\"1\":{\"181\":1}}],[\"极大整数值\",{\"1\":{\"181\":1}}],[\"变长字符串\",{\"1\":{\"181\":1}}],[\"变量初始化的标准格式如下\",{\"1\":{\"308\":1}}],[\"变量的初始化\",{\"0\":{\"308\":1}}],[\"变量类型\",{\"0\":{\"153\":1},\"1\":{\"306\":1}}],[\"变量\",{\"0\":{\"148\":1}}],[\"变量值为安装路径\",{\"1\":{\"39\":1}}],[\"变量名\",{\"1\":{\"17\":1,\"306\":1,\"308\":1}}],[\"精确定点数\",{\"1\":{\"181\":1}}],[\"精度0\",{\"1\":{\"263\":1}}],[\"精度2\",{\"1\":{\"263\":2}}],[\"精度通过\",{\"1\":{\"263\":1}}],[\"精度\",{\"1\":{\"181\":2}}],[\"小拇指\",{\"1\":{\"317\":1}}],[\"小王\",{\"1\":{\"265\":1}}],[\"小王子\",{\"1\":{\"265\":6,\"268\":2}}],[\"小于等于\",{\"1\":{\"192\":1}}],[\"小于\",{\"1\":{\"192\":1}}],[\"小数值\",{\"1\":{\"181\":1}}],[\"小整数值\",{\"1\":{\"181\":1}}],[\"依赖于m\",{\"1\":{\"181\":2}}],[\"范围\",{\"1\":{\"181\":3}}],[\"类似\",{\"1\":{\"257\":1}}],[\"类似于标准库\",{\"1\":{\"332\":1}}],[\"类似于字符串\",{\"1\":{\"162\":1}}],[\"类似于\",{\"1\":{\"56\":1}}],[\"类型对象\",{\"1\":{\"332\":1}}],[\"类型推导\",{\"0\":{\"309\":1}}],[\"类型转换\",{\"0\":{\"302\":1}}],[\"类型来处理\",{\"1\":{\"300\":1}}],[\"类型输出\",{\"1\":{\"257\":1}}],[\"类型\",{\"1\":{\"181\":3,\"183\":2,\"290\":1,\"291\":1,\"308\":1}}],[\"从切片中删除元素\",{\"0\":{\"288\":1},\"1\":{\"288\":1}}],[\"从旧容量\",{\"1\":{\"286\":1}}],[\"从上面的代码可以看出以下内容\",{\"1\":{\"286\":1}}],[\"从上面的结果可以看出\",{\"1\":{\"285\":1}}],[\"从\",{\"1\":{\"180\":1}}],[\"从而减少动态内存分配的开销\",{\"1\":{\"331\":1}}],[\"从而衍生出了不同版本的智能指针\",{\"1\":{\"225\":1}}],[\"从而影响性能\",{\"1\":{\"17\":1}}],[\"从而导致未定义行为\",{\"1\":{\"17\":1}}],[\"具有高效的动态扩展能力\",{\"1\":{\"332\":1}}],[\"具有\",{\"1\":{\"180\":1}}],[\"具有快速的随机访问能力\",{\"1\":{\"13\":1}}],[\"唯一约束\",{\"1\":{\"180\":1}}],[\"限制该字段值不能为null\",{\"1\":{\"180\":1}}],[\"描述\",{\"1\":{\"180\":1,\"181\":3,\"210\":1,\"215\":1,\"290\":1,\"291\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"325\":4}}],[\"概述\",{\"0\":{\"202\":1}}],[\"概念说明\",{\"1\":{\"225\":1}}],[\"概念\",{\"1\":{\"180\":1,\"198\":2}}],[\"概论\",{\"0\":{\"144\":1}}],[\"约束是作用于表中字段上的\",{\"1\":{\"180\":1}}],[\"约束\",{\"0\":{\"180\":1},\"1\":{\"179\":3,\"180\":1,\"183\":2}}],[\"案例\",{\"1\":{\"176\":1,\"183\":2,\"187\":1,\"200\":1}}],[\"查找子字符串\",{\"1\":{\"328\":1}}],[\"查询两表或多表中交集部分数据\",{\"1\":{\"205\":1}}],[\"查询右表所有数据\",{\"1\":{\"204\":1}}],[\"查询左表所有数据\",{\"1\":{\"204\":1}}],[\"查询用户表和部门表中的数据\",{\"1\":{\"203\":1}}],[\"查询时从多张表中获取所需数据\",{\"1\":{\"203\":1}}],[\"查询页码\",{\"1\":{\"196\":1}}],[\"查询记录数\",{\"1\":{\"196\":1}}],[\"查询其他字段无任何意义\",{\"1\":{\"194\":1}}],[\"查询的字段一般为聚合函数和分组字段\",{\"1\":{\"194\":1}}],[\"查询所有字段\",{\"1\":{\"191\":1}}],[\"查询所有数据库\",{\"1\":{\"173\":1}}],[\"查询多个字段\",{\"1\":{\"191\":1}}],[\"查询分为以下几种类型\",{\"1\":{\"190\":1}}],[\"查询语句\",{\"1\":{\"190\":1}}],[\"查询指定表的建表语句\",{\"1\":{\"182\":1}}],[\"查询表\",{\"1\":{\"177\":1}}],[\"查询当前数据库所有表\",{\"1\":{\"182\":1}}],[\"查询当前数据库\",{\"1\":{\"173\":1}}],[\"查询数据库\",{\"0\":{\"173\":1}}],[\"查询\",{\"0\":{\"182\":1},\"1\":{\"172\":1}}],[\"查看索引\",{\"1\":{\"220\":1}}],[\"查看指定表结构\",{\"1\":{\"182\":1}}],[\"查看版本号\",{\"1\":{\"135\":1}}],[\"查看文档\",{\"1\":{\"76\":1}}],[\"查看\",{\"1\":{\"76\":1,\"138\":1,\"219\":1}}],[\"查看详细信息\",{\"1\":{\"60\":1}}],[\"查看源码\",{\"1\":{\"54\":1}}],[\"查看渲染后的题解\",{\"1\":{\"52\":1}}],[\"英文全称是\",{\"1\":{\"172\":1}}],[\"索引的上限是cap\",{\"1\":{\"277\":1}}],[\"索引名\",{\"1\":{\"220\":2}}],[\"索引节点大小\",{\"1\":{\"219\":1}}],[\"索引等\",{\"1\":{\"219\":1}}],[\"索引大大提高了查询效率\",{\"1\":{\"218\":1}}],[\"索引会占用存储空间\",{\"1\":{\"218\":1}}],[\"索引\",{\"0\":{\"217\":1},\"1\":{\"171\":1,\"218\":1,\"219\":2}}],[\"优化手段\",{\"1\":{\"171\":1}}],[\"优点\",{\"1\":{\"49\":1,\"218\":1}}],[\"针对于数据库设计\",{\"1\":{\"171\":1}}],[\"控制台\",{\"1\":{\"253\":1}}],[\"控制数据库的访问权限\",{\"1\":{\"170\":1}}],[\"控制表格位置\",{\"1\":{\"110\":2}}],[\"字典序比较\",{\"1\":{\"328\":4}}],[\"字体图标\",{\"1\":{\"325\":1}}],[\"字符用单引号\",{\"1\":{\"300\":1}}],[\"字符\",{\"1\":{\"300\":1}}],[\"字符串返回索引和值\",{\"1\":{\"317\":1}}],[\"字符串变量的默认值为空字符串\",{\"1\":{\"308\":1}}],[\"字符串是由byte字节组成\",{\"1\":{\"300\":1}}],[\"字符串是不能修改的\",{\"1\":{\"300\":1}}],[\"字符串底层是一个byte数组\",{\"1\":{\"300\":1}}],[\"字符串的常用操作\",{\"0\":{\"299\":1}}],[\"字符串的值为双引号\",{\"1\":{\"296\":1}}],[\"字符串转义符\",{\"0\":{\"297\":1}}],[\"字符串外\",{\"1\":{\"289\":1}}],[\"字符串和\",{\"0\":{\"261\":1}}],[\"字符串和日期型数据应该包含在引号中\",{\"1\":{\"186\":1}}],[\"字符串类型\",{\"1\":{\"181\":2}}],[\"字符串可以用单引号\",{\"1\":{\"154\":1}}],[\"字符串\",{\"0\":{\"154\":1,\"296\":1},\"1\":{\"209\":1,\"317\":1}}],[\"字节\",{\"1\":{\"219\":2}}],[\"字段3\",{\"1\":{\"191\":1}}],[\"字段列表\",{\"1\":{\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"203\":2,\"205\":2,\"206\":2}}],[\"字段更新为\",{\"1\":{\"187\":1}}],[\"字段类型\",{\"1\":{\"183\":1}}],[\"字段类型为\",{\"1\":{\"183\":1}}],[\"字段名2\",{\"1\":{\"186\":2,\"187\":1}}],[\"字段名1\",{\"1\":{\"186\":2,\"187\":1}}],[\"字段名为\",{\"1\":{\"183\":1}}],[\"字段名\",{\"1\":{\"183\":3,\"198\":1,\"220\":1}}],[\"字段的类型\",{\"1\":{\"182\":1}}],[\"字段n注释\",{\"1\":{\"179\":1}}],[\"字段n类型\",{\"1\":{\"179\":1}}],[\"字段n\",{\"1\":{\"179\":1}}],[\"字段2注释\",{\"1\":{\"179\":1}}],[\"字段2类型\",{\"1\":{\"179\":1}}],[\"字段2\",{\"1\":{\"179\":1,\"191\":2,\"195\":1}}],[\"字段1注释\",{\"1\":{\"179\":1}}],[\"字段1类型\",{\"1\":{\"179\":1}}],[\"字段1\",{\"1\":{\"179\":1,\"191\":2,\"195\":1}}],[\"字段\",{\"1\":{\"170\":1,\"180\":1}}],[\"表达式之前添加一个执行语句\",{\"1\":{\"316\":1}}],[\"表达式2\",{\"1\":{\"315\":1}}],[\"表达式1\",{\"1\":{\"315\":1}}],[\"表达式包括变量\",{\"1\":{\"302\":1}}],[\"表达式\",{\"1\":{\"302\":1,\"308\":1}}],[\"表子查询\",{\"0\":{\"212\":1},\"1\":{\"208\":1}}],[\"表2\",{\"1\":{\"203\":1,\"205\":2,\"206\":2}}],[\"表1\",{\"1\":{\"203\":1,\"205\":2,\"206\":2}}],[\"表中\",{\"1\":{\"187\":1}}],[\"表添加字段\",{\"1\":{\"183\":1}}],[\"表注释\",{\"1\":{\"179\":1}}],[\"表名列表\",{\"1\":{\"190\":1}}],[\"表名不存在\",{\"1\":{\"184\":1}}],[\"表名\",{\"1\":{\"179\":1,\"182\":2,\"183\":5,\"184\":1,\"186\":4,\"187\":1,\"188\":1,\"191\":4,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"198\":2,\"203\":1,\"220\":3}}],[\"表操作\",{\"0\":{\"177\":1}}],[\"表\",{\"1\":{\"170\":1,\"172\":1}}],[\"表示开始标签对应的循环\",{\"1\":{\"317\":1}}],[\"表示退出某个标签对应的代码块\",{\"1\":{\"317\":1}}],[\"表示忽略值\",{\"1\":{\"311\":1}}],[\"表示\",{\"1\":{\"292\":1,\"311\":1}}],[\"表示切片中的元素类型\",{\"1\":{\"274\":1}}],[\"表示变量名\",{\"1\":{\"274\":1}}],[\"表示为unicode格式\",{\"1\":{\"259\":1}}],[\"表示为十六进制\",{\"1\":{\"259\":2,\"262\":1}}],[\"表示为十进制\",{\"1\":{\"259\":1}}],[\"表示为八进制\",{\"1\":{\"259\":1}}],[\"表示为二进制\",{\"1\":{\"259\":1}}],[\"表示当前只有一个对象在管理这个资源\",{\"1\":{\"229\":1}}],[\"表示智能指针对象管理的资源对应的引用计数\",{\"1\":{\"229\":1}}],[\"表示评测出错了\",{\"1\":{\"60\":1}}],[\"表示包含5个整数的向量\",{\"1\":{\"17\":1}}],[\"表示标准命名空间\",{\"1\":{\"17\":1}}],[\"分配新块\",{\"1\":{\"332\":1}}],[\"分配内存\",{\"1\":{\"332\":1}}],[\"分配策略\",{\"1\":{\"331\":1}}],[\"分割\",{\"1\":{\"299\":1}}],[\"分别关联两方主键\",{\"1\":{\"200\":1}}],[\"分析并设计表结构\",{\"1\":{\"197\":1}}],[\"分页操作在业务系统开发时\",{\"1\":{\"196\":1}}],[\"分页查询是数据库的方言\",{\"1\":{\"196\":1}}],[\"分页查询语法\",{\"1\":{\"196\":1}}],[\"分页查询\",{\"0\":{\"196\":1},\"1\":{\"190\":1}}],[\"分页参数\",{\"1\":{\"190\":1}}],[\"分组之后\",{\"1\":{\"194\":1}}],[\"分组后过滤条件\",{\"1\":{\"194\":1}}],[\"分组后条件列表\",{\"1\":{\"190\":1}}],[\"分组字段\",{\"1\":{\"195\":1}}],[\"分组字段名\",{\"1\":{\"194\":1}}],[\"分组字段列表\",{\"1\":{\"190\":1}}],[\"分组其实就是按列进行分类\",{\"1\":{\"194\":1}}],[\"分组\",{\"1\":{\"194\":1}}],[\"分组查询通常会使用聚合函数进行计算\",{\"1\":{\"194\":1}}],[\"分组查询\",{\"0\":{\"194\":1},\"1\":{\"190\":1}}],[\"分库分表等\",{\"1\":{\"171\":1}}],[\"分类\",{\"0\":{\"170\":1,\"204\":1},\"1\":{\"170\":1}}],[\"分支还可以使用表达式\",{\"1\":{\"317\":1}}],[\"分支3\",{\"1\":{\"315\":1}}],[\"分支2\",{\"1\":{\"315\":1}}],[\"分支1\",{\"1\":{\"315\":1}}],[\"分支具体查看`\",{\"1\":{\"31\":1}}],[\"分支\",{\"1\":{\"31\":1,\"32\":1}}],[\"密码在\",{\"1\":{\"167\":1}}],[\"密码直接以明文形式出现在命令行\",{\"1\":{\"167\":1}}],[\"密码直接在\",{\"1\":{\"167\":1}}],[\"命令执行效果如下\",{\"1\":{\"176\":1}}],[\"命令解释\",{\"1\":{\"167\":1}}],[\"命令行中输入指令nvidia\",{\"1\":{\"138\":1}}],[\"服务器\",{\"1\":{\"167\":2}}],[\"数值\",{\"1\":{\"332\":1}}],[\"数值类型\",{\"1\":{\"181\":2}}],[\"数字字面量语法\",{\"0\":{\"292\":1}}],[\"数字\",{\"1\":{\"209\":1}}],[\"数组支持\",{\"1\":{\"247\":1}}],[\"数组是值类型\",{\"0\":{\"247\":1},\"1\":{\"247\":1}}],[\"数组是同一种数据类型元素的集合\",{\"1\":{\"237\":1}}],[\"数组中又嵌套数组\",{\"1\":{\"244\":1}}],[\"数组中可以存放多个不同类型的值\",{\"1\":{\"158\":1}}],[\"数组会初始化为int类型的零值\",{\"1\":{\"240\":1}}],[\"数组的遍历\",{\"0\":{\"243\":1}}],[\"数组的初始化也有很多方式\",{\"1\":{\"239\":1}}],[\"数组的初始化\",{\"0\":{\"239\":1}}],[\"数组的长度必须是常量\",{\"1\":{\"238\":1}}],[\"数组可以通过下标进行访问\",{\"1\":{\"238\":1}}],[\"数组变量名\",{\"1\":{\"238\":1}}],[\"数组定义\",{\"0\":{\"238\":1}}],[\"数组从声明时就确定\",{\"1\":{\"237\":1}}],[\"数组长度\",{\"0\":{\"162\":1}}],[\"数组用小括号表示\",{\"1\":{\"159\":1}}],[\"数组\",{\"0\":{\"158\":1,\"237\":1},\"1\":{\"158\":1,\"276\":1,\"317\":1}}],[\"数据存储指针\",{\"1\":{\"332\":1}}],[\"数据\",{\"1\":{\"219\":2}}],[\"数据结构中只需要经历两次磁盘\",{\"1\":{\"219\":1}}],[\"数据结构和强大的深度学习工具\",{\"1\":{\"137\":1}}],[\"数据列表\",{\"1\":{\"196\":1}}],[\"数据类型\",{\"0\":{\"181\":1},\"1\":{\"198\":1}}],[\"数据控制语言\",{\"1\":{\"170\":1}}],[\"数据查询语言\",{\"1\":{\"170\":1}}],[\"数据操作语言\",{\"1\":{\"170\":1,\"185\":1}}],[\"数据定义语言\",{\"1\":{\"170\":1,\"172\":1}}],[\"数据来源切片\",{\"1\":{\"287\":1}}],[\"数据来源\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"数据清洗中得出的平均工资\",{\"1\":{\"106\":1}}],[\"数据采集\",{\"0\":{\"84\":1}}],[\"数据已去重并保存为\",{\"1\":{\"80\":1}}],[\"数据可视化\",{\"0\":{\"104\":1},\"1\":{\"67\":1}}],[\"数据处理\",{\"0\":{\"79\":1},\"1\":{\"67\":1}}],[\"数据爬取\",{\"1\":{\"67\":1}}],[\"数据库实际上会添加唯一索引\",{\"1\":{\"220\":1}}],[\"数据库中并没有使用二叉搜索数或二叉平衡数或红黑树来作为索引的结构\",{\"1\":{\"219\":1}}],[\"数据库支持的索引结构有很多\",{\"1\":{\"219\":1}}],[\"数据库系统提供的隔离机制\",{\"1\":{\"216\":1}}],[\"数据库自动生成\",{\"1\":{\"180\":1}}],[\"数据库不存在\",{\"1\":{\"174\":1}}],[\"数据库名\",{\"1\":{\"174\":1,\"175\":1,\"176\":1}}],[\"数据库操作\",{\"0\":{\"172\":1,\"185\":1,\"189\":1}}],[\"数据库操作阶段\",{\"1\":{\"171\":1}}],[\"数据库优化阶段\",{\"1\":{\"171\":1}}],[\"数据库设计阶段\",{\"1\":{\"171\":1}}],[\"数据库设计\",{\"0\":{\"171\":1}}],[\"数据库的\",{\"1\":{\"169\":1}}],[\"数据库\",{\"0\":{\"7\":1,\"342\":1},\"1\":{\"3\":1,\"170\":1,\"172\":1,\"176\":1}}],[\"返回行首\",{\"1\":{\"297\":1}}],[\"返回2\",{\"1\":{\"279\":1}}],[\"返回到原始状态\",{\"1\":{\"216\":1}}],[\"返回到主页\",{\"1\":{\"86\":1}}],[\"返回\",{\"1\":{\"157\":2}}],[\"说明一下\",{\"1\":{\"228\":1,\"230\":1,\"234\":1}}],[\"说明\",{\"1\":{\"157\":1,\"170\":1,\"176\":1,\"193\":1,\"219\":1,\"257\":1,\"258\":1,\"259\":1,\"261\":1,\"262\":1,\"263\":1,\"265\":1}}],[\"局部变量\",{\"1\":{\"153\":1}}],[\"花括号是可选的\",{\"1\":{\"150\":1}}],[\"符号\",{\"1\":{\"149\":1,\"150\":2}}],[\"$$\",{\"1\":{\"157\":1}}],[\"$4\",{\"1\":{\"156\":1,\"157\":2}}],[\"$3\",{\"1\":{\"156\":1,\"157\":2}}],[\"$0\",{\"1\":{\"156\":2}}],[\"$2\",{\"1\":{\"156\":2,\"157\":2}}],[\"$1\",{\"1\":{\"156\":2,\"157\":2}}],[\"$name\",{\"1\":{\"150\":1,\"152\":1,\"154\":3}}],[\"$\",{\"1\":{\"149\":1,\"150\":4,\"154\":2,\"157\":5,\"160\":5,\"161\":4,\"162\":4}}],[\"格式如下\",{\"1\":{\"279\":1}}],[\"格式化\",{\"1\":{\"254\":1}}],[\"格式化输出\",{\"1\":{\"253\":1}}],[\"格式化占位符\",{\"0\":{\"248\":1,\"256\":1}}],[\"格式的数据响应回给浏览器\",{\"1\":{\"196\":1}}],[\"格式\",{\"1\":{\"147\":1,\"160\":1,\"161\":1,\"181\":1}}],[\"每次扩容后都是扩容前的2倍\",{\"1\":{\"285\":1}}],[\"每次插入新的行记录时\",{\"1\":{\"180\":1}}],[\"每一个被管理的资源都有一个对应的引用计数\",{\"1\":{\"228\":1}}],[\"每一个节点\",{\"1\":{\"219\":1}}],[\"每页显示条数\",{\"1\":{\"196\":1}}],[\"每页显示记录数\",{\"1\":{\"196\":1}}],[\"每行中\",{\"1\":{\"146\":1}}],[\"每个变量会被初始化成其类型的默认值\",{\"1\":{\"308\":1}}],[\"每个切片会指向一个底层数组\",{\"1\":{\"285\":1}}],[\"每个字节用两字符十六进制数表示\",{\"1\":{\"261\":2}}],[\"每个子节点也会存储\",{\"1\":{\"219\":1}}],[\"每个参数分别用双引号括起来的字符串\",{\"1\":{\"157\":1}}],[\"每个图表间隔5秒\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"每个城市对应的参数都在该网址\",{\"1\":{\"86\":1,\"93\":1}}],[\"单双引号\",{\"1\":{\"297\":1}}],[\"单表查询的\",{\"1\":{\"203\":1}}],[\"单精度浮点数值\",{\"1\":{\"181\":1}}],[\"单引号\",{\"1\":{\"297\":1}}],[\"单引号字符串\",{\"1\":{\"154\":1}}],[\"单引号中的内容会原样输出\",{\"1\":{\"154\":1}}],[\"单引号与双引号的区别\",{\"1\":{\"154\":1}}],[\"单引号定义字符串\",{\"1\":{\"149\":1}}],[\"单行注释\",{\"0\":{\"146\":1},\"1\":{\"169\":1}}],[\"单位\",{\"1\":{\"108\":1,\"109\":1,\"112\":2}}],[\"单位有\",{\"1\":{\"81\":1}}],[\"家目录路径下执行\",{\"1\":{\"144\":1}}],[\"~kstring\",{\"1\":{\"328\":1}}],[\"~listnode\",{\"1\":{\"231\":2,\"233\":4,\"234\":2}}],[\"~shared\",{\"1\":{\"229\":1,\"230\":1}}],[\"~smartptr\",{\"1\":{\"224\":1}}],[\"~unique\",{\"1\":{\"226\":1}}],[\"~auto\",{\"1\":{\"226\":1}}],[\"~\",{\"1\":{\"144\":1}}],[\"~$\",{\"1\":{\"144\":5,\"153\":5,\"156\":2}}],[\"绝对路径下执行\",{\"1\":{\"144\":1}}],[\"里实际运行一遍\",{\"1\":{\"144\":1}}],[\"脚本当前运行的进程id\",{\"1\":{\"157\":1}}],[\"脚本时\",{\"1\":{\"156\":1}}],[\"脚本输出\",{\"1\":{\"144\":4}}],[\"脚本示例\",{\"1\":{\"144\":1}}],[\"脚本有很多种\",{\"1\":{\"144\":1}}],[\"脚本可以直接在命令行中执行\",{\"1\":{\"144\":1}}],[\"语言内置的运算符有\",{\"1\":{\"318\":1}}],[\"语言中的所有循环类型均可以使用for关键字来完成\",{\"1\":{\"316\":1}}],[\"语言中不允许将整型强制转换为布尔型\",{\"1\":{\"295\":1}}],[\"语言里的字符串的内部实现使用utf\",{\"1\":{\"296\":1}}],[\"语言的字符有以下两种\",{\"1\":{\"300\":1}}],[\"语言的字符串常见转义符包含回车\",{\"1\":{\"297\":1}}],[\"语言的基本类型和其他语言大同小异\",{\"1\":{\"289\":1}}],[\"语言的发行版本\",{\"1\":{\"131\":1}}],[\"语言标准库中的\",{\"1\":{\"248\":1}}],[\"语句提交一次事务\",{\"1\":{\"215\":1}}],[\"语句全部执行失败\",{\"1\":{\"214\":1}}],[\"语句全部执行成功\",{\"1\":{\"214\":1}}],[\"语句失败\",{\"1\":{\"214\":1}}],[\"语句给数据库执行\",{\"1\":{\"214\":1}}],[\"语句\",{\"1\":{\"203\":1,\"208\":1,\"215\":1}}],[\"语句中嵌套\",{\"1\":{\"208\":1}}],[\"语句中表的先后顺序就可以了\",{\"1\":{\"206\":1}}],[\"语句中\",{\"1\":{\"191\":1}}],[\"语句不能删除某一个字段的值\",{\"1\":{\"188\":1}}],[\"语句不区分大小写\",{\"1\":{\"169\":1}}],[\"语句的条件可以有\",{\"1\":{\"188\":1}}],[\"语句根据其功能被分为四大类\",{\"1\":{\"170\":1}}],[\"语句可以使用空格\",{\"1\":{\"169\":1}}],[\"语句可以单行或多行书写\",{\"1\":{\"169\":1}}],[\"语法如下\",{\"1\":{\"191\":1}}],[\"语法结构如下\",{\"1\":{\"190\":1}}],[\"语法\",{\"0\":{\"143\":1,\"179\":1,\"190\":1,\"220\":1},\"1\":{\"174\":1,\"175\":1,\"176\":1,\"186\":1,\"187\":1,\"188\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"198\":1}}],[\"耐心等待安装完成\",{\"1\":{\"140\":1}}],[\"耐心等待全部下载完成后自动安装\",{\"1\":{\"140\":1}}],[\"同时需要将该资源对应的引用计数++\",{\"1\":{\"229\":1}}],[\"同时将该资源对应的引用计数++\",{\"1\":{\"229\":1}}],[\"同时却也降低了\",{\"1\":{\"218\":1}}],[\"同样我们也可以通过外键来体现一对一之间的关系\",{\"1\":{\"199\":1}}],[\"同样表示字符串\",{\"1\":{\"149\":1}}],[\"同意协议\",{\"1\":{\"138\":1}}],[\"同理\",{\"1\":{\"93\":1,\"315\":1}}],[\"解决循环引用问题\",{\"1\":{\"234\":1}}],[\"解决外键关联\",{\"1\":{\"198\":1}}],[\"解决方法\",{\"1\":{\"17\":2}}],[\"解压之后打开文件夹如下\",{\"1\":{\"139\":1}}],[\"解压完成后\",{\"1\":{\"138\":1}}],[\"|=\",{\"1\":{\"323\":1}}],[\"||\",{\"1\":{\"192\":1,\"321\":1}}],[\"|\",{\"1\":{\"138\":1,\"139\":1,\"322\":1}}],[\"软件安装\",{\"1\":{\"138\":1}}],[\"版本为12\",{\"1\":{\"138\":1}}],[\"版本\",{\"1\":{\"138\":1}}],[\"版本检查\",{\"1\":{\"138\":1}}],[\"版本取得的显著进步基础上\",{\"1\":{\"130\":1}}],[\"系列都是和\",{\"1\":{\"271\":1}}],[\"系列函数会将内容输出到系统的标准输出\",{\"1\":{\"250\":1}}],[\"系列实时目标检测器的最新迭代版本\",{\"1\":{\"130\":1}}],[\"系统中一般默认使用\",{\"1\":{\"144\":1}}],[\"系统检查安装程序的系统兼容性\",{\"1\":{\"138\":1}}],[\"系统变量选择path\",{\"1\":{\"135\":1}}],[\"配置如图所示\",{\"1\":{\"138\":1}}],[\"配置\",{\"0\":{\"135\":1}}],[\"配置项目\",{\"1\":{\"21\":1}}],[\"推荐\",{\"0\":{\"133\":1}}],[\"推送代码到\",{\"0\":{\"31\":1}}],[\"国内网络的问题\",{\"0\":{\"132\":1}}],[\"主表列名\",{\"1\":{\"198\":2}}],[\"主表\",{\"1\":{\"198\":2}}],[\"主键字段\",{\"1\":{\"220\":1}}],[\"主键\",{\"1\":{\"180\":1}}],[\"主键自增\",{\"1\":{\"180\":1}}],[\"主键是一行数据的唯一标识\",{\"1\":{\"180\":1}}],[\"主键约束\",{\"1\":{\"180\":1}}],[\"主要包括三个阶段\",{\"1\":{\"171\":1}}],[\"主要为了帮助解释器识别变量边界\",{\"1\":{\"150\":1}}],[\"主要用于优化小对象的内存分配与释放\",{\"1\":{\"331\":1}}],[\"主要用于深度学习任务\",{\"1\":{\"137\":1}}],[\"主要用于数据科学\",{\"1\":{\"131\":1}}],[\"主题提供的脚手架工具创建项目\",{\"1\":{\"27\":1}}],[\"训练文件即可\",{\"1\":{\"130\":1}}],[\"旋转目标检测\",{\"1\":{\"130\":1}}],[\"姿态估计\",{\"1\":{\"130\":1}}],[\"速度和效率重新定义了可能实现的性能\",{\"1\":{\"130\":1}}],[\"岗位技能词云\",{\"1\":{\"124\":1,\"126\":1}}],[\"岗位词云统计\",{\"0\":{\"122\":1},\"1\":{\"125\":1,\"126\":1}}],[\"词云图\",{\"0\":{\"124\":1},\"2\":{\"129\":1}}],[\"词云\",{\"1\":{\"123\":1}}],[\"饼图\",{\"0\":{\"117\":1},\"2\":{\"129\":1}}],[\"纵向排列\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"纵坐标\",{\"1\":{\"108\":1,\"109\":1}}],[\"并提供基本的容器操作接口\",{\"1\":{\"332\":1}}],[\"并使用空闲链表进行管理\",{\"1\":{\"331\":1}}],[\"并不是运算符\",{\"1\":{\"319\":1}}],[\"并复制字节数组\",{\"1\":{\"301\":1}}],[\"并加上前导的0x\",{\"1\":{\"262\":1}}],[\"并在结点类的析构函数中打印一句提示语句\",{\"1\":{\"233\":1}}],[\"并将这两个结点连接起来\",{\"1\":{\"233\":1}}],[\"并将该资源对应的引用计数设置为1\",{\"1\":{\"229\":1}}],[\"并将该对象转换为\",{\"1\":{\"196\":1}}],[\"并将传入对象管理资源的指针置空\",{\"1\":{\"226\":1}}],[\"并行多图\",{\"0\":{\"110\":1,\"118\":1}}],[\"并且可以用int类型的值表示\",{\"1\":{\"277\":1}}],[\"并且可以一键把这组数据加到\",{\"1\":{\"58\":1}}],[\"并且长度是数组类型的一部分\",{\"1\":{\"238\":1}}],[\"并且只有当一个资源对应的引用计数减为0时才会释放资源\",{\"1\":{\"228\":1}}],[\"并且还会导致sp4原来管理的空间没有得到释放\",{\"1\":{\"225\":1}}],[\"并且底层已经实现了按照索引进行排序\",{\"1\":{\"219\":1}}],[\"并且设置外键为唯一的\",{\"1\":{\"199\":1}}],[\"并且提供了一个方便的环境管理工具\",{\"1\":{\"131\":1}}],[\"并且\",{\"1\":{\"62\":1,\"192\":1}}],[\"各省份平均工资\",{\"1\":{\"109\":1,\"112\":1}}],[\"柱状图\",{\"0\":{\"109\":1},\"2\":{\"129\":1}}],[\"展示所有数据中最大的一项\",{\"1\":{\"108\":1}}],[\"展开所有代码\",{\"1\":{\"76\":1}}],[\"展开当前代码s\",{\"1\":{\"76\":1}}],[\"横坐标\",{\"1\":{\"108\":1,\"109\":1}}],[\"折线图\",{\"0\":{\"108\":1},\"2\":{\"129\":1}}],[\"折叠所有代码\",{\"1\":{\"76\":1}}],[\"折叠当前代码\",{\"1\":{\"76\":1}}],[\"折叠\",{\"1\":{\"76\":1}}],[\"相除后再赋值\",{\"1\":{\"323\":1}}],[\"相除\",{\"1\":{\"319\":1}}],[\"相乘后再赋值\",{\"1\":{\"323\":1}}],[\"相乘\",{\"1\":{\"319\":1}}],[\"相减后再赋值\",{\"1\":{\"323\":1}}],[\"相减\",{\"1\":{\"319\":1}}],[\"相加后再赋值\",{\"1\":{\"323\":1}}],[\"相加\",{\"1\":{\"319\":1}}],[\"相对于变量\",{\"1\":{\"311\":1}}],[\"相对来说\",{\"1\":{\"181\":1}}],[\"相应示意图如下\",{\"1\":{\"280\":2}}],[\"相同长度和元素的切片\",{\"1\":{\"278\":1}}],[\"相同类型\",{\"1\":{\"278\":1}}],[\"相当于十进制的\",{\"1\":{\"292\":2}}],[\"相当于将各个资源与其对应的引用计数进行了绑定\",{\"1\":{\"229\":1}}],[\"相当于sp3和sp4管理的都是原来sp3管理的空间\",{\"1\":{\"225\":1}}],[\"相当于这sp1和sp2管理了同一块内存空间\",{\"1\":{\"225\":1}}],[\"相当于子查询结果是一张表\",{\"1\":{\"208\":1}}],[\"相当于查询\",{\"1\":{\"204\":1}}],[\"相当于横纵坐标\",{\"1\":{\"107\":1}}],[\"相关信息\",{\"1\":{\"72\":1,\"73\":1}}],[\"相关配置文档请见\",{\"1\":{\"1\":1}}],[\"地图的缩放比\",{\"1\":{\"107\":1}}],[\"地图\",{\"0\":{\"107\":1,\"116\":1},\"2\":{\"129\":1}}],[\"直到条件表达式返回false时自动退出循环\",{\"1\":{\"316\":1}}],[\"直到最终容量\",{\"1\":{\"286\":1}}],[\"直接跳到下一行的同列位置\",{\"1\":{\"297\":1}}],[\"直接输出字符串或者\",{\"1\":{\"261\":1}}],[\"直接简写为\",{\"1\":{\"196\":1}}],[\"直接点击\",{\"1\":{\"188\":1}}],[\"直接点击next\",{\"1\":{\"134\":1}}],[\"直接点击install安装即可\",{\"1\":{\"75\":1}}],[\"直聘\",{\"2\":{\"103\":1}}],[\"标识符\",{\"0\":{\"304\":1}}],[\"标识符和关键字\",{\"0\":{\"303\":1}}],[\"标准声明\",{\"0\":{\"306\":1}}],[\"标准\",{\"1\":{\"293\":1}}],[\"标准输出生成对象\",{\"1\":{\"270\":1,\"272\":1}}],[\"标准库fmt提供了以下几种输出相关的函数\",{\"1\":{\"249\":1}}],[\"标量子查询\",{\"0\":{\"209\":1},\"1\":{\"208\":1}}],[\"标度\",{\"1\":{\"181\":2}}],[\"标题\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"325\":1}}],[\"标签元素\",{\"0\":{\"324\":1}}],[\"标签要求必须定义在对应的for\",{\"1\":{\"317\":1}}],[\"标签\",{\"0\":{\"325\":1},\"1\":{\"101\":1,\"317\":1,\"325\":5},\"2\":{\"327\":1}}],[\"标头\",{\"1\":{\"87\":1}}],[\"把相同的数据进行合并输出\",{\"1\":{\"194\":1}}],[\"把json字符串转为json字典数据\",{\"1\":{\"101\":1}}],[\"把最底下add\",{\"1\":{\"72\":1}}],[\"页面中一个工作的信息包含在\",{\"1\":{\"101\":1}}],[\"页面中勾选了\",{\"1\":{\"55\":1}}],[\"比较是否相等\",{\"1\":{\"328\":1}}],[\"比较运算符\",{\"1\":{\"192\":2}}],[\"比较麻烦\",{\"1\":{\"100\":1}}],[\"比如计算直角三角形的斜边长时使用math包的sqrt\",{\"1\":{\"302\":1}}],[\"比如说\",{\"1\":{\"292\":1}}],[\"比如int和string类型的处理方式就不一样\",{\"1\":{\"286\":1}}],[\"比如刚才new\",{\"1\":{\"234\":1}}],[\"比如定义如下的结点类\",{\"1\":{\"233\":1}}],[\"比如函数指针\",{\"1\":{\"231\":1}}],[\"比如下面代码中用一个shared\",{\"1\":{\"230\":1}}],[\"比如\",{\"1\":{\"200\":1,\"224\":3,\"225\":1,\"226\":2,\"228\":1,\"230\":1,\"231\":2,\"233\":2,\"234\":1,\"238\":1}}],[\"比如博主下载的cuda版本12\",{\"1\":{\"139\":1}}],[\"比如还有城市\",{\"1\":{\"81\":1}}],[\"该函数接收的是float64类型的参数\",{\"1\":{\"302\":1}}],[\"该语法只能在两个类型之间支持相互转换的时候使用\",{\"1\":{\"302\":1}}],[\"该值对应的双引号括起来的go语法字符串字面值\",{\"1\":{\"261\":1}}],[\"该值对应的单引号括起来的go语法字符字面值\",{\"1\":{\"259\":1}}],[\"该值对应的unicode码值\",{\"1\":{\"259\":1}}],[\"该对象不能再用对原来管理的资源进行访问了\",{\"1\":{\"226\":1}}],[\"该行不会被统计在其中\",{\"1\":{\"193\":1}}],[\"该方法相较于前面\",{\"1\":{\"100\":1}}],[\"该元素必须存在\",{\"1\":{\"17\":1}}],[\"突破验证\",{\"1\":{\"100\":1}}],[\"例子\",{\"1\":{\"100\":1,\"253\":1,\"254\":1,\"263\":1,\"325\":1}}],[\"例如双层嵌套的for循环要退出时\",{\"1\":{\"317\":1}}],[\"例如下面的示例\",{\"1\":{\"282\":1}}],[\"例如博主的路径为c\",{\"1\":{\"139\":1}}],[\"例如薪资\",{\"1\":{\"81\":1}}],[\"例如我的是d\",{\"1\":{\"39\":1}}],[\"例如要切换到\",{\"1\":{\"27\":1}}],[\"例如\",{\"1\":{\"17\":2,\"53\":1,\"147\":1,\"149\":1,\"156\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1,\"241\":1,\"242\":1,\"246\":1,\"255\":1,\"285\":1,\"292\":1,\"296\":1,\"306\":1,\"308\":1,\"311\":2,\"316\":2,\"317\":2}}],[\"监听参数\",{\"1\":{\"100\":1}}],[\"作用\",{\"1\":{\"180\":1}}],[\"作用不大\",{\"1\":{\"100\":1}}],[\"作为固定大小的数组\",{\"1\":{\"332\":1}}],[\"作为可执行文件\",{\"1\":{\"144\":1}}],[\"作为\",{\"1\":{\"32\":1}}],[\"搜索性能会打折扣\",{\"1\":{\"219\":1}}],[\"搜索框中搜索city\",{\"1\":{\"86\":1}}],[\"搜全文\",{\"1\":{\"100\":1}}],[\"搜公司\",{\"1\":{\"100\":1}}],[\"职业关键字\",{\"1\":{\"100\":1}}],[\"职位\",{\"1\":{\"80\":1,\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"101\":1}}],[\"故在这里只教程如何爬取内容\",{\"1\":{\"99\":1}}],[\"故我们在此一并处理\",{\"1\":{\"81\":1}}],[\"等\",{\"1\":{\"289\":1,\"296\":1}}],[\"等同于\",{\"1\":{\"277\":3}}],[\"等价于\",{\"1\":{\"259\":1,\"260\":1}}],[\"等于\",{\"1\":{\"192\":1}}],[\"等视觉任务\",{\"1\":{\"130\":1}}],[\"等信息在一块\",{\"1\":{\"99\":1}}],[\"等待片刻\",{\"1\":{\"138\":1}}],[\"等待监听到的请求响应\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"等待自动下载\",{\"1\":{\"28\":1}}],[\"参与运算的两数各对应的二进位相异或\",{\"1\":{\"322\":1}}],[\"参与运算的两数各对应的二进位相或\",{\"1\":{\"322\":1}}],[\"参与运算的两数各对应的二进位相与\",{\"1\":{\"322\":1}}],[\"参照页面原型以及需求文档设计数据库表结构\",{\"1\":{\"171\":1}}],[\"参数说明\",{\"1\":{\"231\":1}}],[\"参数之后直接指定\",{\"1\":{\"167\":1}}],[\"参数不加\",{\"1\":{\"167\":2}}],[\"参数\",{\"1\":{\"157\":1}}],[\"参数有3个\",{\"1\":{\"93\":1}}],[\"参考智联招聘的city\",{\"1\":{\"81\":1}}],[\"基于内存池的自定义堆内存管理器\",{\"1\":{\"331\":1}}],[\"基本数据类型\",{\"0\":{\"289\":1}}],[\"基本语法\",{\"1\":{\"237\":1}}],[\"基本信息\",{\"1\":{\"199\":1}}],[\"基本信息+身份信息\",{\"1\":{\"199\":1}}],[\"基本上分为三种\",{\"1\":{\"197\":1}}],[\"基本查询\",{\"0\":{\"191\":1},\"1\":{\"190\":1}}],[\"基本的题目就算创建完成了\",{\"1\":{\"62\":1}}],[\"基础知识\",{\"0\":{\"165\":1}}],[\"基础\",{\"0\":{\"166\":1},\"2\":{\"164\":1,\"222\":1}}],[\"基础url\",{\"1\":{\"93\":1}}],[\"属性\",{\"1\":{\"91\":1,\"98\":1}}],[\"属于收费版\",{\"1\":{\"73\":1}}],[\"为空\",{\"1\":{\"332\":2}}],[\"为输入数据指定了具体的输入内容格式\",{\"1\":{\"268\":1}}],[\"为什么引用计数需要存放在堆区\",{\"1\":{\"229\":1}}],[\"为什么要解决智能指针对象的拷贝问题\",{\"1\":{\"225\":1}}],[\"为了保持文件的结构不会受到不同编译目标平台字节长度的影响\",{\"1\":{\"291\":1}}],[\"为了方便起见\",{\"1\":{\"277\":1}}],[\"为了防止程序中途返回或抛异常等原因导致结点未被释放\",{\"1\":{\"233\":1}}],[\"为了简化代码逻辑\",{\"1\":{\"230\":1}}],[\"为了让管理同一个资源的多个线程访问到的是同一个互斥锁\",{\"1\":{\"230\":1}}],[\"为了让smartptr对象能够像原生指针一样使用\",{\"1\":{\"224\":1}}],[\"为了提高范围查询效率\",{\"1\":{\"219\":1}}],[\"为\",{\"1\":{\"183\":1,\"187\":1}}],[\"为脚本解释器\",{\"1\":{\"144\":1}}],[\"为分割符\",{\"1\":{\"123\":1}}],[\"为此做一个区分\",{\"1\":{\"90\":1,\"97\":1}}],[\"为日后出\",{\"1\":{\"49\":1}}],[\"关系运算符\",{\"0\":{\"320\":1},\"1\":{\"318\":1}}],[\"关系\",{\"1\":{\"200\":1}}],[\"关联另外一方的主键\",{\"1\":{\"199\":1}}],[\"关键\",{\"1\":{\"216\":1}}],[\"关键字\",{\"0\":{\"305\":1},\"1\":{\"180\":1}}],[\"关键词和城市名不能为空\",{\"1\":{\"91\":1,\"98\":1}}],[\"关键词\",{\"1\":{\"80\":2,\"91\":1,\"98\":1}}],[\"关于表结构的操作也是包含四个部分\",{\"1\":{\"177\":1}}],[\"关于翻页操作的参数\",{\"1\":{\"90\":1,\"97\":1}}],[\"关闭\",{\"1\":{\"138\":1}}],[\"关闭浏览器实例\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"翻页操作\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"翻页处理\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"技能要求和福利\",{\"1\":{\"99\":1}}],[\"技能\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"123\":2,\"126\":1}}],[\"领域\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"101\":1}}],[\"学生与课程的关系\",{\"1\":{\"200\":1}}],[\"学生和课程的关系\",{\"1\":{\"200\":1}}],[\"学生和老师的关系\",{\"1\":{\"200\":1}}],[\"学习技巧\",{\"1\":{\"144\":1}}],[\"学习笔记\",{\"0\":{\"11\":1},\"2\":{\"22\":1,\"45\":1,\"68\":1}}],[\"学历\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"101\":1,\"199\":1}}],[\"经验\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"101\":1}}],[\"滚动到页面底部\",{\"1\":{\"90\":1,\"91\":1,\"97\":2,\"98\":2}}],[\"默认构造函数\",{\"1\":{\"328\":1,\"332\":1}}],[\"默认精度\",{\"1\":{\"263\":2}}],[\"默认宽度\",{\"1\":{\"263\":2}}],[\"默认的删除器\",{\"1\":{\"231\":1}}],[\"默认的下载速度往往会很慢\",{\"1\":{\"136\":1}}],[\"默认\",{\"1\":{\"215\":1}}],[\"默认值\",{\"1\":{\"195\":1}}],[\"默认值为全国\",{\"1\":{\"89\":1,\"91\":1,\"96\":1,\"98\":1}}],[\"默认约束\",{\"1\":{\"180\":1}}],[\"默认连接的端口号是\",{\"1\":{\"167\":1}}],[\"默认连接的是本地\",{\"1\":{\"167\":1}}],[\"默认变量\",{\"0\":{\"155\":1}}],[\"默认进入的是base环境\",{\"1\":{\"140\":1}}],[\"默认把所有的勾选上即可\",{\"1\":{\"72\":1}}],[\"刚刚获取到的city\",{\"1\":{\"89\":1}}],[\"刚刚我们获取完url的两个参数信息\",{\"1\":{\"87\":1}}],[\"zsh\",{\"1\":{\"144\":1}}],[\"zoom=1\",{\"1\":{\"107\":1,\"112\":1}}],[\"zh\",{\"0\":{\"336\":1}}],[\"zhaopin\",{\"1\":{\"93\":1,\"96\":1,\"98\":2}}],[\"zhipin\",{\"1\":{\"87\":1,\"89\":1,\"91\":2}}],[\"zhilian\",{\"1\":{\"80\":3,\"98\":4}}],[\"zpdata\",{\"1\":{\"89\":2,\"90\":1,\"91\":2}}],[\"zpcommon\",{\"1\":{\"89\":1,\"91\":1}}],[\"找到对应版本的cudnn\",{\"1\":{\"139\":1}}],[\"找到环境变量\",{\"1\":{\"135\":1}}],[\"找到请求标头的\",{\"1\":{\"87\":1}}],[\"找到city\",{\"1\":{\"86\":1}}],[\"所有的智能指针默认都是以delete的方式将资源释放\",{\"1\":{\"231\":1}}],[\"所有的数据都存储在叶子节点上\",{\"1\":{\"219\":2}}],[\"所有的\",{\"1\":{\"214\":1}}],[\"所有元素都初始化为特定值\",{\"1\":{\"17\":1}}],[\"所有元素都为默认值\",{\"1\":{\"17\":1}}],[\"所有元素初始化为默认值\",{\"1\":{\"17\":1}}],[\"所查询到的数据列表\",{\"1\":{\"196\":1}}],[\"所谓约束就是作用在表中字段上的规则\",{\"1\":{\"180\":1}}],[\"所以匿名变量之间不存在重复声明\",{\"1\":{\"311\":1}}],[\"所以字符串的长度是byte字节的长度\",{\"1\":{\"300\":1}}],[\"所以可以和\",{\"1\":{\"300\":1}}],[\"所以a和b其实都指向了同一块内存地址\",{\"1\":{\"287\":1}}],[\"所以要判断一个切片是否是空的\",{\"1\":{\"282\":1}}],[\"所以len\",{\"1\":{\"279\":1}}],[\"所以这里本就应该进行浅拷贝\",{\"1\":{\"225\":1}}],[\"所以一个第三层一个节点大概可以存储\",{\"1\":{\"219\":1}}],[\"所以为了减少红黑树的高度\",{\"1\":{\"219\":1}}],[\"所以各个表结构之间也存在着各种联系\",{\"1\":{\"197\":1}}],[\"所以接下来讲解\",{\"1\":{\"144\":1}}],[\"所以12\",{\"1\":{\"138\":1}}],[\"所以我们不能简单的按照字节去遍历一个包含中文的字符串\",{\"1\":{\"300\":1}}],[\"所以我们通常都需要用原变量接收append函数的返回值\",{\"1\":{\"285\":1}}],[\"所以我们可以基于数组通过切片表达式得到切片\",{\"1\":{\"277\":1}}],[\"所以我们可以通过chromiumpage\",{\"1\":{\"101\":1}}],[\"所以我们使用\",{\"1\":{\"90\":1,\"97\":1}}],[\"所以该网站不能像前面俩一样爬取\",{\"1\":{\"100\":1}}],[\"所以对应的url\",{\"1\":{\"87\":1}}],[\"就必须使用反引号字符\",{\"1\":{\"298\":1}}],[\"就表示精度为0\",{\"1\":{\"263\":1}}],[\"就会发生运行时panic\",{\"1\":{\"277\":1}}],[\"就会有一个资源对应的引用计数被减为0\",{\"1\":{\"233\":1}}],[\"就会造成数的高度比较高\",{\"1\":{\"219\":1}}],[\"就只能给shared\",{\"1\":{\"231\":1}}],[\"就需要把listnode类中的next和prev成员变量的类型也改为shared\",{\"1\":{\"233\":1}}],[\"就需要在构造智能指针对象时传入定制的删除器\",{\"1\":{\"231\":1}}],[\"就需要通过该指令\",{\"1\":{\"175\":1}}],[\"就像原生指针管理一块内存空间一样\",{\"1\":{\"230\":1}}],[\"就有\",{\"1\":{\"219\":1}}],[\"就满足这种要求\",{\"1\":{\"219\":1}}],[\"就进行事务的回滚\",{\"1\":{\"214\":1}}],[\"就不能再使用表名来指定对应的字段了\",{\"1\":{\"205\":1}}],[\"就占用多少个字符\",{\"1\":{\"181\":1}}],[\"就是新申请容量\",{\"1\":{\"286\":1}}],[\"就是新申请的容量\",{\"1\":{\"286\":1}}],[\"就是旧容量\",{\"1\":{\"286\":1}}],[\"就是最后一层子节点\",{\"1\":{\"219\":1}}],[\"就是不再像红黑树一样每个节点只能保存一个数据\",{\"1\":{\"219\":1}}],[\"就是使用索引可以提高查询的效率\",{\"1\":{\"218\":1}}],[\"就是来保证数据库当中数据的正确性\",{\"1\":{\"180\":1}}],[\"就是城市的参数文件\",{\"1\":{\"86\":1}}],[\"就将上述三个文件复制在c\",{\"1\":{\"139\":1}}],[\"就可以找到\",{\"1\":{\"219\":1}}],[\"就可以很方便的解决上述问题\",{\"1\":{\"198\":1}}],[\"就可以查询到当前所处的数据库\",{\"1\":{\"173\":1}}],[\"就可以添加一组对拍\",{\"1\":{\"58\":1}}],[\"就可以测试\",{\"1\":{\"54\":1}}],[\"刷新一下网页\",{\"1\":{\"86\":1}}],[\"按位异或后赋值\",{\"1\":{\"323\":1}}],[\"按位或后赋值\",{\"1\":{\"323\":1}}],[\"按位与后赋值\",{\"1\":{\"323\":1}}],[\"按长度分为\",{\"1\":{\"290\":1}}],[\"按照上面的方法每次都要确保提供的初始值和数组长度一致\",{\"1\":{\"241\":1}}],[\"按照某一列或者某几列\",{\"1\":{\"194\":1}}],[\"按照列去统计有多少行数据\",{\"1\":{\"193\":1}}],[\"按照职业将对应图表添加到时间线上\",{\"1\":{\"111\":1}}],[\"按f12打开开发者工具\",{\"1\":{\"86\":1}}],[\"按钮来查看题面\",{\"1\":{\"52\":1}}],[\"现在有一个数组a\",{\"1\":{\"280\":1}}],[\"现在以new的方式在堆上构建两个结点\",{\"1\":{\"233\":1}}],[\"现在的问题就是每个城市对应的参数是什么\",{\"1\":{\"86\":1}}],[\"现在开始查看\",{\"1\":{\"39\":1}}],[\"打印浮点数时\",{\"1\":{\"293\":1}}],[\"打印输出\",{\"1\":{\"270\":1,\"272\":1}}],[\"打印值的类型\",{\"1\":{\"257\":3}}],[\"打印\",{\"1\":{\"254\":1}}],[\"打印结果\",{\"1\":{\"254\":3}}],[\"打开文件出错\",{\"1\":{\"253\":1}}],[\"打开文件时发生错误\",{\"1\":{\"91\":1,\"98\":1}}],[\"打开\",{\"1\":{\"140\":1}}],[\"打开安装包\",{\"1\":{\"138\":1}}],[\"打开cmd\",{\"1\":{\"138\":2}}],[\"打开anaconda\",{\"1\":{\"135\":1,\"136\":1}}],[\"打开高级系统设置\",{\"1\":{\"135\":1}}],[\"打开官网前程无忧\",{\"1\":{\"99\":1}}],[\"打开官网智联招聘\",{\"1\":{\"93\":1}}],[\"打开官网boss直聘\",{\"1\":{\"86\":1}}],[\"打开开发者工具\",{\"1\":{\"87\":1}}],[\"打包成功后\",{\"1\":{\"62\":1}}],[\"✅️简单demo编写\",{\"0\":{\"101\":1}}],[\"✅️源代码如下\",{\"0\":{\"91\":1,\"98\":1}}],[\"✅️代码编写\",{\"0\":{\"88\":1,\"95\":1}}],[\"✅️招聘信息获取\",{\"0\":{\"87\":1,\"94\":1}}],[\"✅️url获取\",{\"0\":{\"86\":1,\"93\":1,\"100\":1}}],[\"✅️️数据处理\",{\"0\":{\"81\":1}}],[\"✅️️数据合并\",{\"0\":{\"80\":1}}],[\"✅️️pycharm\",{\"0\":{\"75\":1,\"76\":1}}],[\"✅️️安装包下载\",{\"0\":{\"74\":1}}],[\"✅️️运行安装包\",{\"0\":{\"72\":1}}],[\"处理完成后的数据如下\",{\"1\":{\"82\":1}}],[\"90\",{\"1\":{\"315\":1,\"316\":1}}],[\"900px\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"126\":1}}],[\"9223372036854775807\",{\"1\":{\"290\":1}}],[\"9223372036854775808\",{\"1\":{\"290\":1}}],[\"9\",{\"1\":{\"263\":2,\"264\":2,\"285\":2,\"317\":1}}],[\"9f\",{\"1\":{\"263\":1,\"264\":1}}],[\"967\",{\"1\":{\"181\":2}}],[\"9616\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"9e0ebfcd82d7\",{\"1\":{\"144\":5,\"153\":5,\"156\":2}}],[\"9以上版本\",{\"1\":{\"140\":1}}],[\"9999\",{\"1\":{\"181\":2}}],[\"99\",{\"1\":{\"17\":2}}],[\"计算值溢出\",{\"1\":{\"286\":1}}],[\"计算公式\",{\"1\":{\"196\":1}}],[\"计算指定列的平均值\",{\"1\":{\"193\":1}}],[\"计算指定列的最小值\",{\"1\":{\"193\":1}}],[\"计算指定列的最大值\",{\"1\":{\"193\":1}}],[\"计算指定列的数值和\",{\"1\":{\"193\":1}}],[\"计算工作的平均工资\",{\"1\":{\"82\":1}}],[\"计算机输出\",{\"1\":{\"325\":1}}],[\"计算机网络\",{\"0\":{\"6\":1},\"1\":{\"3\":1}}],[\"计算机\",{\"0\":{\"3\":1}}],[\"薪资\",{\"1\":{\"82\":1,\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"101\":1}}],[\"台湾\",{\"1\":{\"81\":2,\"82\":2}}],[\"台州\",{\"1\":{\"81\":1,\"82\":1}}],[\"澳门\",{\"1\":{\"81\":2,\"82\":2}}],[\"澳门特别行政区\",{\"1\":{\"81\":1,\"82\":1}}],[\"香港\",{\"1\":{\"81\":2,\"82\":2}}],[\"香港特别行政区\",{\"1\":{\"81\":1,\"82\":1}}],[\"琼中黎族苗族自治县\",{\"1\":{\"81\":1,\"82\":1}}],[\"琼海\",{\"1\":{\"81\":1,\"82\":1}}],[\"陵水黎族自治县\",{\"1\":{\"81\":1,\"82\":1}}],[\"乐东黎族自治县\",{\"1\":{\"81\":1,\"82\":1}}],[\"乐山\",{\"1\":{\"81\":1,\"82\":1}}],[\"澄迈\",{\"1\":{\"81\":1,\"82\":1}}],[\"屯昌\",{\"1\":{\"81\":1,\"82\":1}}],[\"五指山\",{\"1\":{\"81\":1,\"82\":1}}],[\"五家渠\",{\"1\":{\"81\":1,\"82\":1}}],[\"儋州\",{\"1\":{\"81\":1,\"82\":1}}],[\"钦州\",{\"1\":{\"81\":1,\"82\":1}}],[\"百分号\",{\"1\":{\"257\":1}}],[\"百色\",{\"1\":{\"81\":1,\"82\":1}}],[\"百科\",{\"1\":{\"46\":1}}],[\"贺州\",{\"1\":{\"81\":1,\"82\":1}}],[\"梧州\",{\"1\":{\"81\":1,\"82\":1}}],[\"桂林\",{\"1\":{\"81\":1,\"82\":1}}],[\"来分隔数字\",{\"1\":{\"292\":1}}],[\"来让编译器推导数组长度\",{\"1\":{\"246\":1}}],[\"来关联属于一这方的主键\",{\"1\":{\"198\":1}}],[\"来避免这个问题\",{\"1\":{\"174\":1}}],[\"来连接\",{\"1\":{\"167\":1}}],[\"来判断是否进行下一页\",{\"1\":{\"90\":1,\"97\":1}}],[\"来获取最后一个元素\",{\"1\":{\"90\":1,\"97\":1}}],[\"来宾\",{\"1\":{\"81\":1,\"82\":1}}],[\"来批量生成脚本\",{\"1\":{\"57\":1}}],[\"柳州\",{\"1\":{\"81\":1,\"82\":1}}],[\"崇左\",{\"1\":{\"81\":1,\"82\":1}}],[\"楚雄彝族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"迪庆藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"怒江傈僳族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"丽江\",{\"1\":{\"81\":1,\"82\":1}}],[\"丽水\",{\"1\":{\"81\":1,\"82\":1}}],[\"昭通\",{\"1\":{\"81\":1,\"82\":1}}],[\"普洱\",{\"1\":{\"81\":1,\"82\":1}}],[\"玉林\",{\"1\":{\"81\":1,\"82\":1}}],[\"玉溪\",{\"1\":{\"81\":1,\"82\":1}}],[\"玉树藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"曲靖\",{\"1\":{\"81\":1,\"82\":1}}],[\"云南\",{\"1\":{\"81\":16,\"82\":16}}],[\"云浮\",{\"1\":{\"81\":1,\"82\":1}}],[\"昆明\",{\"1\":{\"81\":1,\"82\":1}}],[\"昆玉市\",{\"1\":{\"81\":1,\"82\":1}}],[\"汕尾\",{\"1\":{\"81\":1,\"82\":1}}],[\"汕头\",{\"1\":{\"81\":1,\"82\":1}}],[\"茂名\",{\"1\":{\"81\":1,\"82\":1}}],[\"揭阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"阳江\",{\"1\":{\"81\":1,\"82\":1}}],[\"阳泉\",{\"1\":{\"81\":1,\"82\":1}}],[\"东方\",{\"1\":{\"81\":1,\"82\":1}}],[\"东沙群岛\",{\"1\":{\"81\":1,\"82\":1}}],[\"东莞\",{\"1\":{\"81\":1,\"82\":1}}],[\"东营\",{\"1\":{\"81\":1,\"82\":1}}],[\"潮州\",{\"1\":{\"81\":1,\"82\":1}}],[\"清远\",{\"1\":{\"81\":1,\"82\":1}}],[\"清空数组\",{\"1\":{\"332\":1}}],[\"清空等操作\",{\"1\":{\"332\":1}}],[\"清空字符串\",{\"1\":{\"328\":1}}],[\"清空整个向量\",{\"1\":{\"17\":1}}],[\"清空容器\",{\"1\":{\"17\":1}}],[\"湛江\",{\"1\":{\"81\":1,\"82\":1}}],[\"肇庆\",{\"1\":{\"81\":1,\"82\":1}}],[\"佛山\",{\"1\":{\"81\":1,\"82\":1}}],[\"珠海\",{\"1\":{\"81\":1,\"82\":1}}],[\"深圳\",{\"1\":{\"81\":1,\"82\":1,\"240\":2,\"241\":2,\"243\":1,\"245\":2,\"246\":4,\"285\":2}}],[\"深度学习\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"梅州\",{\"1\":{\"81\":1,\"82\":1}}],[\"惠州\",{\"1\":{\"81\":1,\"82\":1}}],[\"韶关\",{\"1\":{\"81\":1,\"82\":1}}],[\"凉山彝族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"德宏傣族景颇族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"德阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"德州\",{\"1\":{\"81\":1,\"82\":1}}],[\"雅安\",{\"1\":{\"81\":1,\"82\":1}}],[\"眉山\",{\"1\":{\"81\":1,\"82\":1}}],[\"泸州\",{\"1\":{\"81\":1,\"82\":1}}],[\"广西\",{\"1\":{\"81\":14,\"82\":14}}],[\"广西壮族自治区\",{\"1\":{\"81\":1,\"82\":1}}],[\"广东\",{\"1\":{\"81\":22,\"82\":22}}],[\"广州\",{\"1\":{\"81\":1,\"82\":1,\"245\":2,\"246\":4,\"285\":2}}],[\"广元\",{\"1\":{\"81\":1,\"82\":1}}],[\"广安\",{\"1\":{\"81\":1,\"82\":1}}],[\"遂宁\",{\"1\":{\"81\":1,\"82\":1}}],[\"达州\",{\"1\":{\"81\":1,\"82\":1}}],[\"绵阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"攀枝花\",{\"1\":{\"81\":1,\"82\":1}}],[\"四大特性\",{\"0\":{\"216\":1}}],[\"四个参数\",{\"1\":{\"100\":1}}],[\"四川\",{\"1\":{\"81\":21,\"82\":21}}],[\"四平\",{\"1\":{\"81\":1,\"82\":1}}],[\"成员变量\",{\"1\":{\"328\":1,\"332\":1}}],[\"成员函数或检查索引范围来避免越界访问\",{\"1\":{\"17\":1}}],[\"成员函数对于在不需要复制大量元素的情况下快速交换容器内容非常有用\",{\"1\":{\"17\":1}}],[\"成员函数将它们的内容互换\",{\"1\":{\"17\":1}}],[\"成员函数允许你在容器的末尾或指定位置以构造函数的方式插入新元素\",{\"1\":{\"17\":1}}],[\"成员函数的使用\",{\"1\":{\"17\":1}}],[\"成本\",{\"1\":{\"218\":1}}],[\"成功\",{\"1\":{\"215\":1}}],[\"成都\",{\"1\":{\"81\":1,\"82\":1,\"245\":2,\"246\":4,\"285\":2}}],[\"黔西南布依族苗族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"黔南布依族苗族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"黔东南苗族侗族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"六盘水\",{\"1\":{\"81\":1,\"82\":1}}],[\"六安\",{\"1\":{\"81\":1,\"82\":1}}],[\"毕节\",{\"1\":{\"81\":1,\"82\":1}}],[\"遵义\",{\"1\":{\"81\":1,\"82\":1}}],[\"贵港\",{\"1\":{\"81\":1,\"82\":1}}],[\"贵州\",{\"1\":{\"81\":9,\"82\":9}}],[\"贵阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"湘西土家族苗族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"湘潭\",{\"1\":{\"81\":1,\"82\":1}}],[\"永州\",{\"1\":{\"81\":1,\"82\":1}}],[\"怀化\",{\"1\":{\"81\":1,\"82\":1}}],[\"岳阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"邵阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"娄底\",{\"1\":{\"81\":1,\"82\":1}}],[\"益阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"郴州\",{\"1\":{\"81\":1,\"82\":1}}],[\"衡阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"衡水\",{\"1\":{\"81\":1,\"82\":1}}],[\"株洲\",{\"1\":{\"81\":1,\"82\":1}}],[\"鹰潭\",{\"1\":{\"81\":1,\"82\":1}}],[\"萍乡\",{\"1\":{\"81\":1,\"82\":1}}],[\"景德镇\",{\"1\":{\"81\":1,\"82\":1}}],[\"赣州\",{\"1\":{\"81\":1,\"82\":1}}],[\"吉安\",{\"1\":{\"81\":1,\"82\":1}}],[\"吉林\",{\"1\":{\"81\":10,\"82\":10}}],[\"宜宾\",{\"1\":{\"81\":1,\"82\":1}}],[\"宜春\",{\"1\":{\"81\":1,\"82\":1}}],[\"宜昌\",{\"1\":{\"81\":1,\"82\":1}}],[\"抚州\",{\"1\":{\"81\":1,\"82\":1}}],[\"抚顺\",{\"1\":{\"81\":1,\"82\":1}}],[\"九江\",{\"1\":{\"81\":1,\"82\":1}}],[\"江门\",{\"1\":{\"81\":1,\"82\":1}}],[\"江西\",{\"1\":{\"81\":11,\"82\":11}}],[\"江苏\",{\"1\":{\"81\":13,\"82\":13}}],[\"三沙\",{\"1\":{\"81\":1,\"82\":1}}],[\"三亚\",{\"1\":{\"81\":1,\"82\":1}}],[\"三明\",{\"1\":{\"81\":1,\"82\":1}}],[\"三门峡\",{\"1\":{\"81\":1,\"82\":1}}],[\"龙岩\",{\"1\":{\"81\":1,\"82\":1}}],[\"漳州\",{\"1\":{\"81\":1,\"82\":1}}],[\"泉州\",{\"1\":{\"81\":1,\"82\":1}}],[\"莆田\",{\"1\":{\"81\":1,\"82\":1}}],[\"厦门\",{\"1\":{\"81\":1,\"82\":1}}],[\"福利\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2}}],[\"福建\",{\"1\":{\"81\":9,\"82\":9}}],[\"福州\",{\"1\":{\"81\":1,\"82\":1}}],[\"池州\",{\"1\":{\"81\":1,\"82\":1}}],[\"宣城\",{\"1\":{\"81\":1,\"82\":1}}],[\"铜仁\",{\"1\":{\"81\":1,\"82\":1}}],[\"铜陵\",{\"1\":{\"81\":1,\"82\":1}}],[\"铜川\",{\"1\":{\"81\":1,\"82\":1}}],[\"滁州\",{\"1\":{\"81\":1,\"82\":1}}],[\"亳州\",{\"1\":{\"81\":1,\"82\":1}}],[\"阜阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"阜新\",{\"1\":{\"81\":1,\"82\":1}}],[\"宿州\",{\"1\":{\"81\":1,\"82\":1}}],[\"宿迁\",{\"1\":{\"81\":1,\"82\":1}}],[\"马鞍山\",{\"1\":{\"81\":1,\"82\":1}}],[\"淮北\",{\"1\":{\"81\":1,\"82\":1}}],[\"淮南\",{\"1\":{\"81\":1,\"82\":1}}],[\"淮安\",{\"1\":{\"81\":1,\"82\":1}}],[\"芜湖\",{\"1\":{\"81\":1,\"82\":1}}],[\"蚌埠\",{\"1\":{\"81\":1,\"82\":1}}],[\"合肥\",{\"1\":{\"81\":1,\"82\":1}}],[\"合并两个\",{\"1\":{\"80\":1}}],[\"舟山\",{\"1\":{\"81\":1,\"82\":1}}],[\"衢州\",{\"1\":{\"81\":1,\"82\":1}}],[\"金华\",{\"1\":{\"81\":1,\"82\":1}}],[\"金昌\",{\"1\":{\"81\":1,\"82\":1}}],[\"温州\",{\"1\":{\"81\":1,\"82\":1}}],[\"绍兴\",{\"1\":{\"81\":1,\"82\":1}}],[\"宁德\",{\"1\":{\"81\":1,\"82\":1}}],[\"宁波\",{\"1\":{\"81\":1,\"82\":1}}],[\"宁夏\",{\"1\":{\"81\":5,\"82\":5}}],[\"宁夏回族自治区\",{\"1\":{\"81\":1,\"82\":1}}],[\"嘉兴\",{\"1\":{\"81\":1,\"82\":1}}],[\"嘉峪关\",{\"1\":{\"81\":1,\"82\":1}}],[\"湖南\",{\"1\":{\"81\":14,\"82\":14}}],[\"湖州\",{\"1\":{\"81\":1,\"82\":1}}],[\"湖北\",{\"1\":{\"81\":17,\"82\":17}}],[\"浙江\",{\"1\":{\"81\":11,\"82\":11}}],[\"杭州\",{\"1\":{\"81\":1,\"82\":1}}],[\"神农架\",{\"1\":{\"81\":1,\"82\":1}}],[\"潜江\",{\"1\":{\"81\":1,\"82\":1}}],[\"仙桃\",{\"1\":{\"81\":1,\"82\":1}}],[\"恩施土家族苗族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"荆门\",{\"1\":{\"81\":1,\"82\":1}}],[\"荆州\",{\"1\":{\"81\":1,\"82\":1}}],[\"随州\",{\"1\":{\"81\":1,\"82\":1}}],[\"咸宁\",{\"1\":{\"81\":1,\"82\":1}}],[\"咸阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"黄山\",{\"1\":{\"81\":1,\"82\":1}}],[\"黄石\",{\"1\":{\"81\":1,\"82\":1}}],[\"黄冈\",{\"1\":{\"81\":1,\"82\":1}}],[\"黄南藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"孝感\",{\"1\":{\"81\":1,\"82\":1}}],[\"鄂州\",{\"1\":{\"81\":1,\"82\":1}}],[\"鄂尔多斯\",{\"1\":{\"81\":1,\"82\":1}}],[\"襄阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"武汉\",{\"1\":{\"81\":1,\"82\":1}}],[\"武威\",{\"1\":{\"81\":1,\"82\":1}}],[\"泰州\",{\"1\":{\"81\":1,\"82\":1}}],[\"泰安\",{\"1\":{\"81\":1,\"82\":1}}],[\"常量n1\",{\"1\":{\"311\":1}}],[\"常量在定义的时候必须赋值\",{\"1\":{\"311\":1}}],[\"常量的声明和变量声明非常类似\",{\"1\":{\"311\":1}}],[\"常量是恒定不变的值\",{\"1\":{\"311\":1}}],[\"常量索引也必须在有效范围内\",{\"1\":{\"277\":1}}],[\"常量索引必须是非负的\",{\"1\":{\"277\":1}}],[\"常作为临时表\",{\"1\":{\"212\":1}}],[\"常用聚合函数\",{\"1\":{\"193\":1}}],[\"常用的操作符\",{\"1\":{\"209\":1,\"210\":1,\"211\":1}}],[\"常用的逻辑运算符如下\",{\"1\":{\"192\":1}}],[\"常用的比较运算符如下\",{\"1\":{\"192\":1}}],[\"常用快捷键\",{\"0\":{\"76\":1}}],[\"常见的有\",{\"1\":{\"144\":1}}],[\"常德\",{\"1\":{\"81\":1,\"82\":1}}],[\"常州\",{\"1\":{\"81\":1,\"82\":1}}],[\"连接条件\",{\"1\":{\"205\":1,\"206\":2}}],[\"连接查询\",{\"1\":{\"204\":1}}],[\"连接\",{\"0\":{\"167\":1}}],[\"连接到远程仓库\",{\"1\":{\"31\":1}}],[\"连云港\",{\"1\":{\"81\":1,\"82\":1}}],[\"徐州\",{\"1\":{\"81\":1,\"82\":1}}],[\"盐城\",{\"1\":{\"81\":1,\"82\":1}}],[\"扬州\",{\"1\":{\"81\":1,\"82\":1}}],[\"苏州\",{\"1\":{\"81\":1,\"82\":1}}],[\"镇江\",{\"1\":{\"81\":1,\"82\":1}}],[\"无效的输入\",{\"1\":{\"317\":1}}],[\"无名指\",{\"1\":{\"317\":1}}],[\"无限循环\",{\"0\":{\"317\":1}}],[\"无论哪种转换\",{\"1\":{\"301\":1}}],[\"无论程序是正常执行完毕返回了\",{\"1\":{\"224\":1}}],[\"无需初始化\",{\"1\":{\"285\":1}}],[\"无小数部分\",{\"1\":{\"260\":1}}],[\"无符号整型\",{\"1\":{\"291\":1}}],[\"无符号\",{\"1\":{\"181\":1,\"290\":4}}],[\"无锡\",{\"1\":{\"81\":1,\"82\":1}}],[\"无参数初始化\",{\"1\":{\"17\":1}}],[\"南宁\",{\"1\":{\"81\":1,\"82\":1}}],[\"南充\",{\"1\":{\"81\":1,\"82\":1}}],[\"南昌\",{\"1\":{\"81\":1,\"82\":1}}],[\"南平\",{\"1\":{\"81\":1,\"82\":1}}],[\"南通\",{\"1\":{\"81\":1,\"82\":1}}],[\"南京\",{\"1\":{\"81\":1,\"82\":1}}],[\"南阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"驻马店\",{\"1\":{\"81\":1,\"82\":1}}],[\"漯河\",{\"1\":{\"81\":1,\"82\":1}}],[\"濮阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"鹤壁\",{\"1\":{\"81\":1,\"82\":1}}],[\"鹤岗\",{\"1\":{\"81\":1,\"82\":1}}],[\"焦作\",{\"1\":{\"81\":1,\"82\":1}}],[\"商丘\",{\"1\":{\"81\":1,\"82\":1}}],[\"商洛\",{\"1\":{\"81\":1,\"82\":1}}],[\"洛阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"信阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"平衡二叉树\",{\"1\":{\"219\":1}}],[\"平均值\",{\"1\":{\"193\":1}}],[\"平顶山\",{\"1\":{\"81\":1,\"82\":1}}],[\"平凉\",{\"1\":{\"81\":1,\"82\":1}}],[\"许昌\",{\"1\":{\"81\":1,\"82\":1}}],[\"河\",{\"1\":{\"300\":1}}],[\"河池\",{\"1\":{\"81\":1,\"82\":1}}],[\"河源\",{\"1\":{\"81\":1,\"82\":1}}],[\"河南\",{\"1\":{\"81\":18,\"82\":18}}],[\"河北\",{\"1\":{\"81\":11,\"82\":11}}],[\"郑州\",{\"1\":{\"81\":1,\"82\":1}}],[\"银川\",{\"1\":{\"81\":1,\"82\":1}}],[\"甘孜藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"甘南藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"甘肃\",{\"1\":{\"81\":14,\"82\":14}}],[\"陇南\",{\"1\":{\"81\":1,\"82\":1}}],[\"酒泉\",{\"1\":{\"81\":1,\"82\":1}}],[\"张三\",{\"1\":{\"187\":2}}],[\"张家界\",{\"1\":{\"81\":1,\"82\":1}}],[\"张家口\",{\"1\":{\"81\":1,\"82\":1}}],[\"张掖\",{\"1\":{\"81\":1,\"82\":1}}],[\"庆阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"定制删除器的实现问题\",{\"1\":{\"231\":1}}],[\"定制删除器的模拟实现\",{\"1\":{\"231\":1}}],[\"定制删除器的用法\",{\"1\":{\"231\":1}}],[\"定长字符串\",{\"1\":{\"181\":1}}],[\"定向物体检测\",{\"1\":{\"130\":1}}],[\"定安\",{\"1\":{\"81\":1,\"82\":1}}],[\"定西\",{\"1\":{\"81\":1,\"82\":1}}],[\"定义一个定义项目\",{\"1\":{\"325\":1}}],[\"定义一个长度为3元素类型为int的数组a\",{\"1\":{\"237\":1}}],[\"定义引用\",{\"1\":{\"325\":1}}],[\"定义短的引用语\",{\"1\":{\"325\":1}}],[\"定义长的引用\",{\"1\":{\"325\":1}}],[\"定义文字方向\",{\"1\":{\"325\":1}}],[\"定义地址\",{\"1\":{\"325\":1}}],[\"定义缩写\",{\"1\":{\"325\":1}}],[\"定义预格式文本\",{\"1\":{\"325\":1}}],[\"定义键盘码\",{\"1\":{\"325\":1}}],[\"定义计算机代码样本\",{\"1\":{\"325\":1}}],[\"定义计算机代码\",{\"1\":{\"325\":1}}],[\"定义删除字\",{\"1\":{\"325\":1}}],[\"定义插入字\",{\"1\":{\"325\":1}}],[\"定义上标字\",{\"1\":{\"325\":1}}],[\"定义下标字\",{\"1\":{\"325\":1}}],[\"定义加重语气\",{\"1\":{\"325\":1}}],[\"定义小号字\",{\"1\":{\"325\":1}}],[\"定义着重文字\",{\"1\":{\"325\":1}}],[\"定义粗体文本\",{\"1\":{\"325\":1}}],[\"定义数量级\",{\"1\":{\"313\":1}}],[\"定义外键关联另外一张表\",{\"1\":{\"198\":1}}],[\"定义操作所有关系型数据库的统一标准\",{\"1\":{\"168\":1}}],[\"定义\",{\"0\":{\"159\":1}}],[\"定义环境变量\",{\"1\":{\"153\":1}}],[\"定义变量\",{\"0\":{\"149\":1},\"1\":{\"149\":1,\"153\":1,\"325\":1}}],[\"定义热力图的最大值和最小值\",{\"1\":{\"107\":1}}],[\"定义热力图中的颜色\",{\"1\":{\"107\":1}}],[\"定义的最小值\",{\"1\":{\"106\":1}}],[\"定义的最大值\",{\"1\":{\"106\":1}}],[\"定义及初始化\",{\"1\":{\"17\":1}}],[\"定义容器a时\",{\"1\":{\"17\":1}}],[\"定义和声明\",{\"1\":{\"17\":1}}],[\"兰州\",{\"1\":{\"81\":1,\"82\":1}}],[\"果洛藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"海南\",{\"1\":{\"81\":19,\"82\":19}}],[\"海南藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"海口\",{\"1\":{\"81\":1,\"82\":1}}],[\"海西蒙古族藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"海北藏族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"海东\",{\"1\":{\"81\":1,\"82\":1}}],[\"青海\",{\"1\":{\"81\":8,\"82\":8}}],[\"青岛\",{\"1\":{\"81\":1,\"82\":1}}],[\"林芝\",{\"1\":{\"81\":1,\"82\":1}}],[\"昌江黎族自治县\",{\"1\":{\"81\":1,\"82\":1}}],[\"昌都\",{\"1\":{\"81\":1,\"82\":1}}],[\"昌吉回族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"拉萨\",{\"1\":{\"81\":1,\"82\":1}}],[\"胡杨河市\",{\"1\":{\"81\":1,\"82\":1}}],[\"北海\",{\"1\":{\"81\":1,\"82\":1}}],[\"北屯市\",{\"1\":{\"81\":1,\"82\":1}}],[\"北京吴彦祖报表了\",{\"1\":{\"255\":1}}],[\"北京吴彦祖\",{\"1\":{\"253\":1,\"254\":2}}],[\"北京\",{\"1\":{\"81\":2,\"82\":2,\"240\":2,\"241\":2,\"243\":1,\"245\":2,\"246\":4,\"285\":2}}],[\"北京市\",{\"1\":{\"81\":1,\"82\":1}}],[\"铁门关\",{\"1\":{\"81\":1,\"82\":1}}],[\"铁岭\",{\"1\":{\"81\":1,\"82\":1}}],[\"石嘴山\",{\"1\":{\"81\":1,\"82\":1}}],[\"石河子\",{\"1\":{\"81\":1,\"82\":1}}],[\"石家庄\",{\"1\":{\"81\":1,\"82\":1}}],[\"塔城地区\",{\"1\":{\"81\":1,\"82\":1}}],[\"喀什地区\",{\"1\":{\"81\":1,\"82\":1}}],[\"克孜勒苏柯尔克孜自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"克拉玛依\",{\"1\":{\"81\":1,\"82\":1}}],[\"阿坝藏族羌族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"阿里地区\",{\"1\":{\"81\":1,\"82\":1}}],[\"阿拉尔\",{\"1\":{\"81\":1,\"82\":1}}],[\"阿拉善盟\",{\"1\":{\"81\":1,\"82\":1}}],[\"阿勒泰地区\",{\"1\":{\"81\":1,\"82\":1}}],[\"阿克苏地区\",{\"1\":{\"81\":1,\"82\":1}}],[\"哈密\",{\"1\":{\"81\":1,\"82\":1}}],[\"哈尔滨\",{\"1\":{\"81\":1,\"82\":1}}],[\"吐鲁番\",{\"1\":{\"81\":1,\"82\":1}}],[\"伊犁哈萨克自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"伊春\",{\"1\":{\"81\":1,\"82\":1}}],[\"博主的最高支持的\",{\"1\":{\"138\":1}}],[\"博尔塔拉蒙古自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"博客搭建\",{\"0\":{\"20\":1}}],[\"巴中\",{\"1\":{\"81\":1,\"82\":1}}],[\"巴音郭楞蒙古自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"巴彦淖尔\",{\"1\":{\"81\":1,\"82\":1}}],[\"聊城\",{\"1\":{\"81\":1,\"82\":1}}],[\"枣庄\",{\"1\":{\"81\":1,\"82\":1}}],[\"威海\",{\"1\":{\"81\":1,\"82\":1}}],[\"滨州\",{\"1\":{\"81\":1,\"82\":1}}],[\"菏泽\",{\"1\":{\"81\":1,\"82\":1}}],[\"临高\",{\"1\":{\"81\":1,\"82\":1}}],[\"临沧\",{\"1\":{\"81\":1,\"82\":1}}],[\"临夏回族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"临沂\",{\"1\":{\"81\":1,\"82\":1}}],[\"临汾\",{\"1\":{\"81\":1,\"82\":1}}],[\"济源\",{\"1\":{\"81\":1,\"82\":1}}],[\"济宁\",{\"1\":{\"81\":1,\"82\":1}}],[\"济南\",{\"1\":{\"81\":1,\"82\":1}}],[\"潍坊\",{\"1\":{\"81\":1,\"82\":1}}],[\"烟台\",{\"1\":{\"81\":1,\"82\":1}}],[\"淄博\",{\"1\":{\"81\":1,\"82\":1}}],[\"山南\",{\"1\":{\"81\":1,\"82\":1}}],[\"山东\",{\"1\":{\"81\":16,\"82\":16}}],[\"山西\",{\"1\":{\"81\":11,\"82\":11}}],[\"宝鸡\",{\"1\":{\"81\":1,\"82\":1}}],[\"汉中\",{\"1\":{\"81\":1,\"82\":1}}],[\"安顺\",{\"1\":{\"81\":1,\"82\":1}}],[\"安庆\",{\"1\":{\"81\":1,\"82\":1}}],[\"安徽\",{\"1\":{\"81\":16,\"82\":16}}],[\"安阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"安康\",{\"1\":{\"81\":1,\"82\":1}}],[\"安装ultralytics\",{\"1\":{\"140\":1}}],[\"安装pytorch\",{\"1\":{\"140\":1}}],[\"安装测试\",{\"1\":{\"135\":1}}],[\"安装jupyter\",{\"1\":{\"104\":1}}],[\"安装教程以idea为例子\",{\"1\":{\"75\":1}}],[\"安装教程\",{\"0\":{\"75\":1}}],[\"安装完成之后\",{\"1\":{\"72\":1}}],[\"安装完成\",{\"1\":{\"72\":1,\"75\":1}}],[\"安装\",{\"0\":{\"70\":1,\"73\":1,\"134\":1}}],[\"安装依赖\",{\"0\":{\"28\":1}}],[\"渭南\",{\"1\":{\"81\":1,\"82\":1}}],[\"榆林\",{\"1\":{\"81\":1,\"82\":1}}],[\"延安\",{\"1\":{\"81\":1,\"82\":1}}],[\"延边朝鲜族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"陕西\",{\"1\":{\"81\":10,\"82\":10}}],[\"西双版纳傣族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"西宁\",{\"1\":{\"81\":1,\"82\":1}}],[\"西藏\",{\"1\":{\"81\":7,\"82\":7}}],[\"西藏自治区\",{\"1\":{\"81\":1,\"82\":1}}],[\"西安\",{\"1\":{\"81\":1,\"82\":1}}],[\"吕梁\",{\"1\":{\"81\":1,\"82\":1}}],[\"忻州\",{\"1\":{\"81\":1,\"82\":1}}],[\"朔州\",{\"1\":{\"81\":1,\"82\":1}}],[\"运算符重载\",{\"1\":{\"328\":1}}],[\"运算符\",{\"0\":{\"318\":1},\"1\":{\"319\":1,\"320\":1,\"321\":4,\"322\":1,\"323\":1,\"328\":1}}],[\"运城\",{\"1\":{\"81\":1,\"82\":1}}],[\"运行方式\",{\"1\":{\"144\":1}}],[\"运行jupyter\",{\"1\":{\"104\":1}}],[\"运行脚本后即可得到下述的各个数据\",{\"1\":{\"57\":1}}],[\"运行安装包\",{\"0\":{\"37\":1}}],[\"运行时环境\",{\"1\":{\"35\":1}}],[\"运行环境搭建\",{\"0\":{\"34\":1},\"1\":{\"21\":1}}],[\"晋城\",{\"1\":{\"81\":1,\"82\":1}}],[\"晋中\",{\"1\":{\"81\":1,\"82\":1}}],[\"长度和容量\",{\"1\":{\"273\":1}}],[\"长度不能变\",{\"1\":{\"238\":1}}],[\"长度不定\",{\"1\":{\"181\":1}}],[\"长度\",{\"1\":{\"183\":3}}],[\"长文本数据\",{\"1\":{\"181\":1}}],[\"长沙\",{\"1\":{\"81\":1,\"82\":1}}],[\"长治\",{\"1\":{\"81\":1,\"82\":1}}],[\"长春\",{\"1\":{\"81\":1,\"82\":1}}],[\"太原\",{\"1\":{\"81\":1,\"82\":1}}],[\"秦皇岛\",{\"1\":{\"81\":1,\"82\":1}}],[\"邯郸\",{\"1\":{\"81\":1,\"82\":1}}],[\"邢台\",{\"1\":{\"81\":1,\"82\":1}}],[\"沧州\",{\"1\":{\"81\":1,\"82\":1}}],[\"廊坊\",{\"1\":{\"81\":1,\"82\":1}}],[\"唐山\",{\"1\":{\"81\":1,\"82\":1}}],[\"承德\",{\"1\":{\"81\":1,\"82\":1}}],[\"兴安盟\",{\"1\":{\"81\":1,\"82\":1}}],[\"锡林郭勒盟\",{\"1\":{\"81\":1,\"82\":1}}],[\"乌鲁木齐\",{\"1\":{\"81\":1,\"82\":1}}],[\"乌兰察布\",{\"1\":{\"81\":1,\"82\":1}}],[\"乌海\",{\"1\":{\"81\":1,\"82\":1}}],[\"呼伦贝尔\",{\"1\":{\"81\":1,\"82\":1}}],[\"呼和浩特\",{\"1\":{\"81\":1,\"82\":1}}],[\"赤峰\",{\"1\":{\"81\":1,\"82\":1}}],[\"葫芦岛\",{\"1\":{\"81\":1,\"82\":1}}],[\"朝阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"营口\",{\"1\":{\"81\":1,\"82\":1}}],[\"锦州\",{\"1\":{\"81\":1,\"82\":1}}],[\"丹东\",{\"1\":{\"81\":1,\"82\":1}}],[\"鞍山\",{\"1\":{\"81\":1,\"82\":1}}],[\"辽阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"辽宁\",{\"1\":{\"81\":14,\"82\":14}}],[\"辽源\",{\"1\":{\"81\":1,\"82\":1}}],[\"沈阳\",{\"1\":{\"81\":1,\"82\":1}}],[\"白萝卜\",{\"1\":{\"301\":1}}],[\"白沙黎族自治县\",{\"1\":{\"81\":1,\"82\":1}}],[\"白银\",{\"1\":{\"81\":1,\"82\":1}}],[\"白杨市\",{\"1\":{\"81\":1,\"82\":1}}],[\"白山\",{\"1\":{\"81\":1,\"82\":1}}],[\"白城\",{\"1\":{\"81\":1,\"82\":1}}],[\"松原\",{\"1\":{\"81\":1,\"82\":1}}],[\"大拇指\",{\"1\":{\"317\":1}}],[\"大于2倍的旧容量\",{\"1\":{\"286\":1}}],[\"大于等于新申请的容量\",{\"1\":{\"286\":1}}],[\"大于等于\",{\"1\":{\"192\":1}}],[\"大于\",{\"1\":{\"192\":1}}],[\"大整数值\",{\"1\":{\"181\":3}}],[\"大小\",{\"1\":{\"181\":3,\"332\":1}}],[\"大家可以尝试编写代码\",{\"1\":{\"100\":1}}],[\"大理白族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"大同\",{\"1\":{\"81\":1,\"82\":1}}],[\"大连\",{\"1\":{\"81\":1,\"82\":1}}],[\"大兴安岭地区\",{\"1\":{\"81\":1,\"82\":1}}],[\"大庆\",{\"1\":{\"81\":1,\"82\":1}}],[\"双精度浮点数值\",{\"1\":{\"181\":1}}],[\"双引号\",{\"1\":{\"297\":1}}],[\"双引号字符串\",{\"1\":{\"154\":1}}],[\"双引号中的内容可以执行\",{\"1\":{\"154\":1}}],[\"双引号定义字符串\",{\"1\":{\"149\":1}}],[\"双河市\",{\"1\":{\"81\":1,\"82\":1}}],[\"双鸭山\",{\"1\":{\"81\":1,\"82\":1}}],[\"双击进入\",{\"1\":{\"135\":1}}],[\"双击进行下一步即可\",{\"1\":{\"75\":1}}],[\"双击下载好的安装包\",{\"1\":{\"72\":1}}],[\"鸡西\",{\"1\":{\"81\":1,\"82\":1}}],[\"七台河\",{\"1\":{\"81\":1,\"82\":1}}],[\"黑河\",{\"1\":{\"81\":1,\"82\":1}}],[\"黑龙江\",{\"1\":{\"81\":13,\"82\":13}}],[\"绥化\",{\"1\":{\"81\":1,\"82\":1}}],[\"佳木斯\",{\"1\":{\"81\":1,\"82\":1}}],[\"牡丹江\",{\"1\":{\"81\":1,\"82\":1}}],[\"齐齐哈尔\",{\"1\":{\"81\":1,\"82\":1}}],[\"省略了high则默认为切片操作数的长度\",{\"1\":{\"277\":1}}],[\"省略了low则默认为0\",{\"1\":{\"277\":1}}],[\"省\",{\"1\":{\"81\":1,\"82\":1}}],[\"重新分配内存\",{\"1\":{\"332\":1}}],[\"重载\",{\"1\":{\"328\":2}}],[\"重启之后数据亦然存在\",{\"1\":{\"216\":1}}],[\"重庆\",{\"1\":{\"81\":2,\"82\":2,\"245\":3,\"246\":4,\"285\":2}}],[\"重庆市\",{\"1\":{\"81\":1,\"82\":1}}],[\"重设容器大小\",{\"1\":{\"17\":1}}],[\"新增一个对象来管理该资源\",{\"1\":{\"229\":1,\"230\":1}}],[\"新表名\",{\"1\":{\"183\":1}}],[\"新字段名\",{\"1\":{\"183\":1}}],[\"新数据类型\",{\"1\":{\"183\":1}}],[\"新建一个\",{\"1\":{\"144\":1}}],[\"新建一个node\",{\"1\":{\"39\":1}}],[\"新建环境变量\",{\"1\":{\"135\":1}}],[\"新余\",{\"1\":{\"81\":1,\"82\":1}}],[\"新乡\",{\"1\":{\"81\":1,\"82\":1}}],[\"新星市\",{\"1\":{\"81\":1,\"82\":1}}],[\"新疆\",{\"1\":{\"81\":26,\"82\":26}}],[\"新疆维吾尔自治区\",{\"1\":{\"81\":1,\"82\":1}}],[\"内连接从语法上可以分为\",{\"1\":{\"205\":1}}],[\"内连接查询\",{\"1\":{\"205\":1}}],[\"内连接\",{\"0\":{\"205\":1},\"1\":{\"204\":1}}],[\"内容如下\",{\"1\":{\"144\":1}}],[\"内江\",{\"1\":{\"81\":1,\"82\":1}}],[\"内蒙古\",{\"1\":{\"81\":12,\"82\":12}}],[\"内蒙古自治区\",{\"1\":{\"81\":1,\"82\":1}}],[\"内存池\",{\"1\":{\"331\":1}}],[\"内存管理\",{\"1\":{\"328\":1,\"332\":1}}],[\"内存泄露是指因为疏忽或错误\",{\"1\":{\"224\":1}}],[\"内存泄露问题\",{\"1\":{\"224\":1}}],[\"内存重新分配\",{\"1\":{\"17\":1}}],[\"内存分配器\",{\"1\":{\"332\":1}}],[\"内存分配策略\",{\"0\":{\"16\":1}}],[\"内存分配\",{\"0\":{\"14\":1}}],[\"天天向上\",{\"1\":{\"254\":2}}],[\"天门\",{\"1\":{\"81\":1,\"82\":1}}],[\"天水\",{\"1\":{\"81\":1,\"82\":1}}],[\"天津\",{\"1\":{\"81\":2,\"82\":2}}],[\"天津市\",{\"1\":{\"81\":1,\"82\":1}}],[\"天\",{\"1\":{\"81\":1,\"82\":1}}],[\"x=\",{\"1\":{\"311\":1}}],[\"x时\",{\"1\":{\"265\":1}}],[\"x或\",{\"1\":{\"265\":2}}],[\"xx\",{\"1\":{\"253\":1}}],[\"x的进行下载\",{\"1\":{\"139\":1}}],[\"x86\",{\"1\":{\"133\":1}}],[\"xaxis\",{\"1\":{\"108\":1,\"109\":3,\"112\":4}}],[\"x\",{\"1\":{\"81\":7,\"82\":7,\"107\":6,\"109\":7,\"112\":13,\"116\":6,\"117\":6,\"120\":12,\"153\":1,\"247\":4,\"259\":4,\"261\":4,\"265\":3,\"292\":2,\"300\":1,\"311\":2}}],[\"但实际上只用了2个\",{\"1\":{\"279\":1}}],[\"但输出结构体时会添加字段名\",{\"1\":{\"257\":1}}],[\"但不会增加这块资源对应的引用计数\",{\"1\":{\"234\":1}}],[\"但不能在临界区中释放互斥锁\",{\"1\":{\"230\":1}}],[\"但如果去掉连接结点时的两句代码中的任意一句\",{\"1\":{\"233\":1}}],[\"但我们是直接用一个类来模拟实现shared\",{\"1\":{\"231\":1}}],[\"但我们翻到第二页的时候\",{\"1\":{\"94\":1}}],[\"但每次运行程序得到引用计数的值可能都是不一样的\",{\"1\":{\"230\":1}}],[\"但同时需要注意\",{\"1\":{\"229\":1}}],[\"但防拷贝其实也不是一个很好的办法\",{\"1\":{\"226\":1}}],[\"但一个对象的管理权转移后也就意味着\",{\"1\":{\"226\":1}}],[\"但单纯的浅拷贝又会导致空间被多次释放\",{\"1\":{\"225\":1}}],[\"但可以是多列\",{\"1\":{\"208\":1}}],[\"但可以是多行\",{\"1\":{\"208\":1}}],[\"但是初始语句后的分号必须要写\",{\"1\":{\"316\":1}}],[\"但是所有的转义字符均无效\",{\"1\":{\"298\":1}}],[\"但是我们不能说一个长度和容量都是0的切片一定是nil\",{\"1\":{\"282\":1}}],[\"但是数组大小不可变化\",{\"1\":{\"237\":1}}],[\"但是使用起来没有c++标准库中的那么方便\",{\"1\":{\"231\":1}}],[\"但是如果高并发访问\",{\"1\":{\"219\":1}}],[\"但是在\",{\"1\":{\"219\":1}}],[\"但是对于用户的身份信息查询频率很低\",{\"1\":{\"199\":1}}],[\"但是\",{\"1\":{\"100\":1}}],[\"但是同上操作在最后一页下一页的按钮为\",{\"1\":{\"90\":1}}],[\"但是该文件的省份为缩写\",{\"1\":{\"81\":1}}],[\"但会增加容器的容量\",{\"1\":{\"17\":1}}],[\"万用户\",{\"1\":{\"219\":1}}],[\"万条数据\",{\"1\":{\"219\":1}}],[\"万宁\",{\"1\":{\"81\":1,\"82\":1}}],[\"万\",{\"1\":{\"81\":2,\"82\":1}}],[\"千万条数据\",{\"1\":{\"219\":1}}],[\"千\",{\"1\":{\"81\":2,\"82\":1}}],[\"元素管理\",{\"1\":{\"332\":1}}],[\"元素访问\",{\"1\":{\"328\":1,\"332\":1}}],[\"元素操作\",{\"1\":{\"328\":1,\"332\":1}}],[\"元素数量\",{\"1\":{\"238\":1}}],[\"元素之间用空格隔开\",{\"1\":{\"159\":1}}],[\"元\",{\"1\":{\"81\":1,\"108\":1,\"109\":1,\"112\":2}}],[\"月\",{\"1\":{\"81\":1,\"109\":1,\"112\":1}}],[\"周口\",{\"1\":{\"81\":1,\"82\":1}}],[\"周\",{\"1\":{\"81\":2,\"82\":1}}],[\"日文或者其他复合字符时\",{\"1\":{\"300\":1}}],[\"日常我们在网站中看到的各种各样的分页条\",{\"1\":{\"196\":1}}],[\"日期等\",{\"1\":{\"209\":1}}],[\"日期值\",{\"1\":{\"181\":1}}],[\"日期时间类型\",{\"1\":{\"181\":2}}],[\"日期有\",{\"1\":{\"81\":1}}],[\"日喀则\",{\"1\":{\"81\":1,\"82\":1}}],[\"日照\",{\"1\":{\"81\":1,\"82\":1}}],[\"日\",{\"1\":{\"81\":2,\"82\":1}}],[\"智能指针管理的也可能是以new\",{\"1\":{\"231\":1}}],[\"智能指针就是要模拟原生指针的行为\",{\"1\":{\"225\":1}}],[\"智能指针对象的拷贝问题\",{\"1\":{\"225\":1}}],[\"智能指针的原理\",{\"0\":{\"225\":1}}],[\"智能指针的使用\",{\"0\":{\"224\":1}}],[\"智能指针\",{\"0\":{\"223\":1},\"2\":{\"236\":1}}],[\"智能跳到下一行\",{\"1\":{\"76\":1}}],[\"智联招聘\",{\"0\":{\"92\":1},\"1\":{\"80\":1,\"98\":1,\"107\":1,\"112\":1,\"116\":1,\"120\":1},\"2\":{\"103\":1}}],[\"对一个切片的修改会影响另一个切片的内容\",{\"1\":{\"283\":1}}],[\"对切片再执行切片表达式时\",{\"1\":{\"277\":1}}],[\"对字符串采用\",{\"1\":{\"265\":1}}],[\"对数值\",{\"1\":{\"265\":1}}],[\"对\",{\"1\":{\"225\":1,\"226\":2,\"229\":1,\"234\":1,\"265\":3}}],[\"对于数组\",{\"1\":{\"278\":1}}],[\"对于数组或常量字符串\",{\"1\":{\"277\":1}}],[\"对于数组或字符串\",{\"1\":{\"277\":1}}],[\"对于数值类型会把填充的0放在正负号后面\",{\"1\":{\"265\":1}}],[\"对于当前实现的smartptr类\",{\"1\":{\"225\":1}}],[\"对于这种情况\",{\"1\":{\"224\":1}}],[\"对于第二层每个元素有指针\",{\"1\":{\"219\":1}}],[\"对用户的基本信息查询频率特别的高\",{\"1\":{\"199\":1}}],[\"对null值不作为统计\",{\"1\":{\"193\":1}}],[\"对应的无符号整型\",{\"1\":{\"290\":1}}],[\"对应的关键字\",{\"1\":{\"198\":1}}],[\"对应的为省份名称和对应职位的工资\",{\"1\":{\"107\":1}}],[\"对应的文件找到了\",{\"1\":{\"94\":1}}],[\"对象中\",{\"1\":{\"196\":1}}],[\"对象的eles方法获取页面中所有joblist\",{\"1\":{\"101\":1}}],[\"对象并生成对应的\",{\"1\":{\"80\":1}}],[\"对话中发送pycharm\",{\"1\":{\"74\":1}}],[\"创建索引\",{\"1\":{\"220\":1}}],[\"创建表时指定\",{\"1\":{\"198\":1}}],[\"创建表\",{\"1\":{\"177\":1}}],[\"创建数据库\",{\"0\":{\"174\":1}}],[\"创建文件\",{\"1\":{\"156\":1}}],[\"创建完之后输入以下指令进入yolov11环境之中\",{\"1\":{\"140\":1}}],[\"创建\",{\"0\":{\"178\":1},\"1\":{\"80\":1,\"172\":1}}],[\"创建项目\",{\"0\":{\"26\":1},\"1\":{\"21\":1}}],[\"全部字段\",{\"1\":{\"186\":1}}],[\"全部字段添加数据\",{\"1\":{\"186\":1}}],[\"全称\",{\"1\":{\"170\":1}}],[\"全局变量m\",{\"1\":{\"310\":1}}],[\"全局变量\",{\"1\":{\"153\":1}}],[\"全国招聘数量分布\",{\"1\":{\"116\":1,\"120\":1}}],[\"全国招聘工作数量可视化表\",{\"0\":{\"114\":1},\"1\":{\"119\":1,\"120\":1}}],[\"全国招聘工作工资分布可视化表\",{\"0\":{\"105\":1},\"1\":{\"111\":1,\"112\":1}}],[\"全国岗位平均工资\",{\"1\":{\"108\":1,\"112\":1}}],[\"全国各省份平均工资\",{\"1\":{\"107\":1,\"112\":1}}],[\"全国\",{\"1\":{\"80\":1}}],[\"全家桶\",{\"1\":{\"75\":1}}],[\"人称\",{\"1\":{\"254\":2}}],[\"人称北京吴彦祖\",{\"1\":{\"252\":1}}],[\"人称北京\",{\"1\":{\"251\":1}}],[\"人工智能\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"人生苦短\",{\"1\":{\"70\":1}}],[\"网速更快\",{\"1\":{\"136\":1}}],[\"网站信息爬取过程\",{\"1\":{\"101\":1}}],[\"网络安全\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"网址中\",{\"1\":{\"86\":1}}],[\"网址\",{\"1\":{\"49\":1}}],[\"保证一个资源在任何时刻都只有一个对象在对其进行管理\",{\"1\":{\"226\":1}}],[\"保证事务在不受外部并发操作影响的独立环境下运行\",{\"1\":{\"216\":1}}],[\"保证在一个事务中多次操作数据库表中数据时\",{\"1\":{\"214\":1}}],[\"保证数据的一致性和完整性\",{\"1\":{\"180\":1,\"198\":1}}],[\"保证字段的所有数据都是唯一\",{\"1\":{\"180\":1}}],[\"保存数据时\",{\"1\":{\"180\":1}}],[\"保存\",{\"1\":{\"136\":1}}],[\"保存在字典内\",{\"1\":{\"101\":1}}],[\"保存合并且去重后的数据到新的\",{\"1\":{\"80\":1}}],[\"保亭黎族苗族自治县\",{\"1\":{\"81\":1,\"82\":1}}],[\"保山\",{\"1\":{\"81\":1,\"82\":1}}],[\"保定\",{\"1\":{\"81\":1,\"82\":1}}],[\"保持所有的默认设置\",{\"0\":{\"37\":1}}],[\"城市参数\",{\"1\":{\"100\":2}}],[\"城市参数网址\",{\"1\":{\"93\":1}}],[\"城市对应的省份\",{\"1\":{\"81\":1}}],[\"城市\",{\"1\":{\"80\":3,\"82\":2,\"90\":1,\"91\":3,\"97\":1,\"98\":3,\"101\":1}}],[\"城市字段去重\",{\"1\":{\"80\":1}}],[\"公司领域\",{\"1\":{\"101\":1}}],[\"公司姓名\",{\"1\":{\"101\":1}}],[\"公司标签如图所示\",{\"1\":{\"101\":1}}],[\"公司信息如图所示\",{\"1\":{\"101\":1}}],[\"公司\",{\"1\":{\"80\":2,\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"101\":1,\"130\":1}}],[\"招聘网站\",{\"1\":{\"79\":1,\"84\":1}}],[\"招聘网站爬虫\",{\"0\":{\"66\":1},\"1\":{\"66\":1,\"69\":1}}],[\"爬取数据并写入csv\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"爬取\",{\"1\":{\"79\":1}}],[\"爬虫\",{\"2\":{\"68\":1,\"78\":1}}],[\"替换掉文件名中的非法字符\",{\"1\":{\"91\":1,\"98\":1}}],[\"替换\",{\"1\":{\"76\":2}}],[\"缩进来增强语句的可读性\",{\"1\":{\"169\":1}}],[\"缩进\",{\"1\":{\"76\":1}}],[\"q1mi\",{\"1\":{\"311\":1}}],[\"qq号码\",{\"1\":{\"183\":2}}],[\"qq\",{\"1\":{\"183\":6}}],[\"query\",{\"1\":{\"170\":1}}],[\"query=python\",{\"1\":{\"87\":1,\"91\":1}}],[\"quit\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"qurey代表求职信息即我们搜索框中输入的内容\",{\"1\":{\"86\":1}}],[\"qurey=python\",{\"1\":{\"86\":1}}],[\"q\",{\"1\":{\"76\":1,\"259\":1,\"261\":2,\"265\":3}}],[\"选中时复制粘贴选中部分\",{\"1\":{\"76\":1}}],[\"选择替换即可\",{\"1\":{\"140\":1}}],[\"选择第一个\",{\"1\":{\"139\":1}}],[\"选择第二种\",{\"1\":{\"72\":1}}],[\"选择<精简>安装\",{\"1\":{\"138\":1}}],[\"选择自己电脑对应的cuda版本\",{\"1\":{\"138\":1}}],[\"选择仅个人的话\",{\"1\":{\"134\":1}}],[\"选择网络一栏\",{\"1\":{\"86\":1,\"87\":1}}],[\"选择代码和测试点就可以运行了\",{\"1\":{\"60\":1}}],[\"选择\",{\"1\":{\"32\":1,\"87\":1,\"134\":2}}],[\"选择你想使用的源\",{\"1\":{\"27\":1}}],[\"选择包管理器\",{\"1\":{\"27\":1}}],[\"选择一些默认的配置\",{\"1\":{\"27\":1}}],[\"未选中时\",{\"1\":{\"76\":1}}],[\"注释内容\",{\"1\":{\"169\":2}}],[\"注释内容或\",{\"1\":{\"169\":1}}],[\"注释\",{\"0\":{\"145\":1},\"1\":{\"76\":2,\"169\":1,\"183\":2,\"325\":1}}],[\"注意不能是字符串\",{\"1\":{\"278\":1}}],[\"注意不是stdout\",{\"1\":{\"157\":1}}],[\"注意事项\",{\"1\":{\"187\":1,\"188\":1,\"194\":1,\"195\":1,\"196\":1,\"205\":1,\"206\":1,\"220\":1,\"291\":1,\"311\":1}}],[\"注意修改为自己想要的安装路径\",{\"1\":{\"136\":1}}],[\"注意此处的\",{\"1\":{\"50\":1}}],[\"注意\",{\"1\":{\"17\":4,\"27\":2,\"52\":1,\"54\":1,\"134\":1,\"174\":1,\"179\":1,\"180\":1,\"193\":1,\"246\":1,\"247\":1,\"253\":1,\"277\":1,\"285\":1,\"291\":1,\"295\":1,\"319\":1}}],[\"向打开的文件句柄中写入内容\",{\"1\":{\"253\":1}}],[\"向标准输出写入内容\",{\"1\":{\"253\":2}}],[\"向指定字段添加数据\",{\"1\":{\"186\":1}}],[\"向上插入一行\",{\"1\":{\"76\":1}}],[\"向向量末尾添加元素\",{\"1\":{\"17\":1}}],[\"移动语义支持\",{\"1\":{\"332\":1}}],[\"移动赋值运算符\",{\"1\":{\"328\":1,\"332\":1}}],[\"移动构造函数\",{\"1\":{\"328\":1,\"332\":1}}],[\"移动\",{\"1\":{\"76\":1}}],[\"首先我们来看一个问题\",{\"1\":{\"287\":1}}],[\"首先判断\",{\"1\":{\"286\":1}}],[\"首先\",{\"1\":{\"229\":1}}],[\"首先找到解压包下的安装包\",{\"1\":{\"75\":1}}],[\"首先创建一个\",{\"1\":{\"31\":1}}],[\"破解过程与idea一致\",{\"1\":{\"75\":1}}],[\"微信公众号搜索软件管家\",{\"1\":{\"74\":1}}],[\"涉及版权\",{\"1\":{\"74\":1}}],[\"警告\",{\"1\":{\"74\":1}}],[\"免费\",{\"1\":{\"73\":1}}],[\"只返回通道内的值\",{\"1\":{\"317\":1}}],[\"只是把var换成了const\",{\"1\":{\"311\":1}}],[\"只是项目名\",{\"1\":{\"50\":1}}],[\"只能在常量的表达式中使用\",{\"1\":{\"312\":1}}],[\"只能和nil比较\",{\"1\":{\"274\":1}}],[\"只能输出到\",{\"1\":{\"253\":1}}],[\"只不过它们不是从标准输入中读取数据而是从指定字符串中读取数据\",{\"1\":{\"272\":1}}],[\"只不过它们不是从标准输出读取数据是从io\",{\"1\":{\"271\":1}}],[\"只有按照格式输入数据才会被扫描并存入变量\",{\"1\":{\"268\":1}}],[\"只有表名存在时才会删除该表\",{\"1\":{\"184\":1}}],[\"只要满足io\",{\"1\":{\"253\":1}}],[\"只要smartptr对象的生命周期结束就会调用其对应的析构函数\",{\"1\":{\"224\":1}}],[\"只剩下最初的shared\",{\"1\":{\"230\":1}}],[\"只需要调整连接查询时\",{\"1\":{\"206\":1}}],[\"只需要使用逗号分隔多张表即可\",{\"1\":{\"203\":1}}],[\"只保留表关联部分的数据\",{\"1\":{\"203\":1}}],[\"只支持一维数组\",{\"1\":{\"158\":1}}],[\"只支持python开发\",{\"1\":{\"73\":1}}],[\"只读变量\",{\"0\":{\"151\":1}}],[\"社区版\",{\"1\":{\"73\":1}}],[\"专业版\",{\"1\":{\"73\":1}}],[\"专业版本\",{\"1\":{\"73\":1}}],[\"我是春生\",{\"1\":{\"251\":1,\"252\":1,\"254\":2}}],[\"我是北京吴彦祖\",{\"1\":{\"250\":1}}],[\"我叫春生\",{\"1\":{\"250\":1}}],[\"我这里选择下载最新版本的\",{\"1\":{\"133\":1}}],[\"我的电脑是windows系统\",{\"1\":{\"133\":1}}],[\"我们要打印一个windows平台下的一个文件路径\",{\"1\":{\"297\":1}}],[\"我们要操作某一个数据库下的表时\",{\"1\":{\"175\":1}}],[\"我们要操作某一个数据库\",{\"1\":{\"173\":1}}],[\"我们不能使用==操作符来判断两个切片是否含有全部相等元素\",{\"1\":{\"282\":1}}],[\"我们就需要使用内置的make\",{\"1\":{\"279\":1}}],[\"我们就完成了编写代码的准备环节\",{\"1\":{\"87\":1}}],[\"我们上面都是基于数组来创建的切片\",{\"1\":{\"279\":1}}],[\"我们可以借助fmt函数来将一个整数以不同进制形式展示\",{\"1\":{\"292\":1}}],[\"我们可以使用切片本身的特性来删除元素\",{\"1\":{\"288\":1}}],[\"我们可以通过使用内置的len\",{\"1\":{\"275\":1}}],[\"我们可以在func函数中先对div函数中抛出的异常进行捕获\",{\"1\":{\"224\":1}}],[\"我们通常用这个函数往文件中写入内容\",{\"1\":{\"253\":1}}],[\"我们这里以二维数组为例\",{\"1\":{\"244\":1}}],[\"我们还可以使用指定索引值的方式来初始化数组\",{\"1\":{\"242\":1}}],[\"我们将这两个结点分别交给两个shared\",{\"1\":{\"233\":1}}],[\"我们将项目生成至当前目录下的\",{\"1\":{\"27\":1}}],[\"我们平常所说的索引\",{\"1\":{\"219\":1}}],[\"我们只需要在任意一方来添加一个外键就可以了\",{\"1\":{\"199\":1}}],[\"我们需要更改下载的位置\",{\"1\":{\"136\":1}}],[\"我们访问网址\",{\"1\":{\"87\":1}}],[\"我们再搜索一个求职信息如\",{\"1\":{\"86\":1}}],[\"我们随便搜索一个求职信息如\",{\"1\":{\"86\":1}}],[\"我们在获取城市代码的过程中可以获取到它对应的省\",{\"1\":{\"81\":1}}],[\"我们在招聘网站中获取到的数据\",{\"1\":{\"81\":1}}],[\"我们现在将两个网站数据进行合并\",{\"1\":{\"80\":1}}],[\"我下载的是\",{\"1\":{\"73\":1}}],[\"由所有参数构成的用空格隔开的字符串\",{\"1\":{\"157\":1}}],[\"由于切片是引用类型\",{\"1\":{\"287\":1}}],[\"由于互斥锁也是在堆区创建的\",{\"1\":{\"230\":1}}],[\"由于管理同一个资源的多个对象的引用计数是共享的\",{\"1\":{\"230\":1}}],[\"由于引用计数的内存空间也是在堆上开辟的\",{\"1\":{\"229\":1}}],[\"由于业务之间相互关联\",{\"1\":{\"197\":1}}],[\"由于该网站招聘信息\",{\"1\":{\"99\":1}}],[\"由于我们在后面的可视化表格需要全称\",{\"1\":{\"81\":1}}],[\"由于专业版本需要付费\",{\"1\":{\"74\":1}}],[\"由于插件之间版本不同容易出现依赖冲突\",{\"1\":{\"28\":1}}],[\"由jetbrains开发而成\",{\"1\":{\"73\":1}}],[\"⬇️pycharm\",{\"0\":{\"73\":1}}],[\"⬇️python\",{\"0\":{\"70\":1}}],[\"继续输入exit\",{\"1\":{\"72\":1}}],[\"请始终使用len\",{\"1\":{\"281\":1}}],[\"请输入内容\",{\"1\":{\"270\":1,\"272\":1}}],[\"请输入搜索关键词\",{\"1\":{\"91\":1,\"98\":1}}],[\"请输入城市名\",{\"1\":{\"91\":1,\"98\":1}}],[\"请参照\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"124\":1,\"125\":1}}],[\"请参照公众号文章教程\",{\"1\":{\"75\":1}}],[\"请参考官方\",{\"1\":{\"54\":1,\"55\":1}}],[\"请不要勾选第六项\",{\"1\":{\"72\":1}}],[\"否则为\",{\"1\":{\"321\":3}}],[\"否则返回\",{\"1\":{\"320\":6}}],[\"否则结束循环\",{\"1\":{\"316\":1}}],[\"否则判断表达式2\",{\"1\":{\"315\":1}}],[\"否则判断\",{\"1\":{\"286\":2}}],[\"否则就会出现上面输出中第一行的结果\",{\"1\":{\"300\":1}}],[\"否则就会索引越界\",{\"1\":{\"277\":1}}],[\"否则就会导致线程安全问题\",{\"1\":{\"230\":1}}],[\"否则程序很容易出问题\",{\"1\":{\"226\":1}}],[\"否则程序就会崩溃\",{\"1\":{\"226\":1}}],[\"否则不执行删除\",{\"1\":{\"176\":1}}],[\"否则不能操作\",{\"1\":{\"175\":1}}],[\"否则将会报错\",{\"1\":{\"174\":1}}],[\"否则需要手动添加环境变量\",{\"1\":{\"72\":1}}],[\"否则会导致未定义行为\",{\"1\":{\"17\":1}}],[\"建\",{\"1\":{\"257\":1}}],[\"建立第三张中间表\",{\"1\":{\"200\":1}}],[\"建完表后\",{\"1\":{\"198\":1}}],[\"建议使用python3\",{\"1\":{\"140\":1}}],[\"建议别放在c盘\",{\"1\":{\"75\":1}}],[\"建议别安装在c盘\",{\"1\":{\"72\":1}}],[\"建议选择专业版\",{\"1\":{\"73\":1}}],[\"建议自定义安装\",{\"1\":{\"72\":1}}],[\"建好以后开始配置环境\",{\"1\":{\"39\":1}}],[\"第2种情况\",{\"1\":{\"215\":1}}],[\"第1种情况\",{\"1\":{\"215\":1}}],[\"第四个参数\",{\"1\":{\"156\":2}}],[\"第三行\",{\"1\":{\"298\":1}}],[\"第三行注释\",{\"1\":{\"147\":3}}],[\"第三层由\",{\"1\":{\"219\":1}}],[\"第三个参数\",{\"1\":{\"156\":2}}],[\"第二行\",{\"1\":{\"298\":1}}],[\"第二行注释\",{\"1\":{\"147\":3}}],[\"第二层一共是\",{\"1\":{\"219\":1}}],[\"第二个参数\",{\"1\":{\"156\":2}}],[\"第二种写法\",{\"1\":{\"161\":2,\"162\":2}}],[\"第二种方法\",{\"1\":{\"153\":1}}],[\"第二种\",{\"1\":{\"72\":1}}],[\"第一张表存放的是用户的基本信息\",{\"1\":{\"199\":1}}],[\"第一个参数\",{\"1\":{\"156\":2}}],[\"第一行注释\",{\"1\":{\"147\":3}}],[\"第一种写法\",{\"1\":{\"161\":2,\"162\":2}}],[\"第一种方法\",{\"1\":{\"153\":1}}],[\"第一种\",{\"1\":{\"72\":1}}],[\"立即安装\",{\"1\":{\"72\":1}}],[\"易学\",{\"1\":{\"70\":1}}],[\"易错提醒\",{\"1\":{\"17\":1}}],[\"快用python\",{\"1\":{\"70\":1}}],[\"都不满足时\",{\"1\":{\"315\":1}}],[\"都会重新分配内存\",{\"1\":{\"301\":1}}],[\"都会导致程序崩溃\",{\"1\":{\"225\":1}}],[\"都会警告\",{\"1\":{\"49\":1}}],[\"都是指默认的\",{\"1\":{\"219\":1}}],[\"都是使用逻辑外键\",{\"1\":{\"198\":1}}],[\"都可以描述字符串\",{\"1\":{\"181\":1}}],[\"都可以选择安装\",{\"1\":{\"138\":1}}],[\"都符合标签\",{\"1\":{\"62\":1}}],[\"后缀判断\",{\"1\":{\"299\":1}}],[\"后台给前端返回的数据包含\",{\"1\":{\"196\":1}}],[\"后台也都需要借助于数据库的分页操作\",{\"1\":{\"196\":1}}],[\"后端需要响应什么数据给前端\",{\"1\":{\"196\":1}}],[\"后端开发\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"后续就是等待安装完成即可\",{\"1\":{\"134\":1}}],[\"后续需要自定义\",{\"1\":{\"54\":1}}],[\"后期数据处理很麻烦\",{\"1\":{\"99\":1}}],[\"后面加\",{\"1\":{\"285\":1}}],[\"后面介绍如何把创建的环境和下载的包都装在自己想装的盘里\",{\"1\":{\"134\":1}}],[\"后面使用可能会报错\",{\"1\":{\"134\":1}}],[\"后面编写代码需要\",{\"1\":{\"87\":1}}],[\"后面制作表格需要\",{\"1\":{\"82\":1}}],[\"后的求职信息\",{\"1\":{\"79\":1}}],[\"后\",{\"1\":{\"62\":1}}],[\"会返回一个错误报告原因\",{\"1\":{\"267\":1}}],[\"会输出空格和单引号括起来的go字面值\",{\"1\":{\"265\":1}}],[\"会给各打印的字节之间加空格\",{\"1\":{\"265\":1}}],[\"会生成全部是ascii字符的输出\",{\"1\":{\"265\":1}}],[\"会使用默认精度\",{\"1\":{\"263\":1}}],[\"会自动对变量对应的内存区域进行初始化操作\",{\"1\":{\"308\":1}}],[\"会自动推导出当前的变量\",{\"1\":{\"257\":1}}],[\"会自动创建主键索引\",{\"1\":{\"220\":1}}],[\"会panic\",{\"1\":{\"238\":1}}],[\"会影响检索速度\",{\"1\":{\"219\":1}}],[\"会明确指出禁止使用物理外键\",{\"1\":{\"198\":1}}],[\"会根据业务需求及业务模块之间的关系\",{\"1\":{\"197\":1}}],[\"会提示询问是否确认删除所有数据\",{\"1\":{\"188\":1}}],[\"会报错\",{\"1\":{\"151\":1}}],[\"会在最下方提醒\",{\"1\":{\"60\":1}}],[\"会用黄色标识出来\",{\"1\":{\"60\":1}}],[\"有时候我们会将变量的类型省略\",{\"1\":{\"309\":1}}],[\"有时候我们想完整获取输入内容\",{\"1\":{\"270\":1}}],[\"有小数部分但无指数部分\",{\"1\":{\"260\":1}}],[\"有如下优点\",{\"1\":{\"219\":1}}],[\"有\",{\"1\":{\"219\":1}}],[\"有些业务操作要多次访问数据库\",{\"1\":{\"214\":1}}],[\"有些需要进行处理\",{\"1\":{\"81\":1}}],[\"有升序排序\",{\"1\":{\"195\":1}}],[\"有符号\",{\"1\":{\"181\":1,\"290\":4}}],[\"有效性和完整性\",{\"1\":{\"180\":1}}],[\"有别于boss直聘\",{\"1\":{\"94\":1}}],[\"有着简单\",{\"1\":{\"70\":1}}],[\"有两种情况\",{\"1\":{\"60\":1}}],[\"有版本管理系统\",{\"1\":{\"49\":1}}],[\"了\",{\"1\":{\"60\":1}}],[\"评测状态\",{\"1\":{\"60\":1}}],[\"之后\",{\"1\":{\"208\":3}}],[\"之后的内容均是注释\",{\"1\":{\"146\":1}}],[\"之后输入下方命令即可安装pytorch\",{\"1\":{\"140\":1}}],[\"之后可以在列表里点进去\",{\"1\":{\"60\":1}}],[\"之前数据清洗过之后的文件\",{\"1\":{\"106\":1}}],[\"之类的\",{\"1\":{\"60\":1}}],[\"之类的来表示在一个范围内随机选择\",{\"1\":{\"58\":1}}],[\"测试点的\",{\"1\":{\"57\":1}}],[\"即从默认的右对齐切换为左对齐\",{\"1\":{\"265\":1}}],[\"即raii特性\",{\"1\":{\"225\":1}}],[\"即\",{\"1\":{\"219\":1,\"286\":3}}],[\"即执行一条\",{\"1\":{\"215\":1}}],[\"即这些操作要么同时成功\",{\"1\":{\"214\":1}}],[\"即为安装成功\",{\"1\":{\"138\":1}}],[\"即采用默认安装方式\",{\"1\":{\"72\":1}}],[\"即可\",{\"1\":{\"139\":1,\"188\":2}}],[\"即可进行打包\",{\"1\":{\"62\":1}}],[\"即可在本地访问你的blog\",{\"1\":{\"28\":1}}],[\"即展示在题面中\",{\"1\":{\"57\":1}}],[\"其核心思想是预分配一块连续内存\",{\"1\":{\"331\":1}}],[\"其次\",{\"1\":{\"229\":1}}],[\"其实一对一我们可以看成一种特殊的一对多\",{\"1\":{\"199\":1}}],[\"其他条件和简单切片表达式相同\",{\"1\":{\"278\":1}}],[\"其他falg\",{\"0\":{\"265\":1}}],[\"其他满足\",{\"1\":{\"248\":1}}],[\"其他值表示错误\",{\"1\":{\"157\":1}}],[\"其他参数与上面类似\",{\"1\":{\"116\":1}}],[\"其它参数相关变量\",{\"0\":{\"157\":1}}],[\"其它文件\",{\"1\":{\"53\":1}}],[\"其中扩容相关代码如下\",{\"1\":{\"286\":1}}],[\"其中\",{\"1\":{\"147\":1,\"274\":1,\"279\":1,\"287\":1,\"290\":1,\"302\":1}}],[\"其中可以使用\",{\"1\":{\"58\":1}}],[\"其中点击每个测试点的\",{\"1\":{\"57\":1}}],[\"编译器默认生成的拷贝赋值函数对内置类型也是完成值拷贝\",{\"1\":{\"225\":1}}],[\"编译器默认生成的拷贝构造函数对内置类型完成值拷贝\",{\"1\":{\"225\":1}}],[\"编写sql语句对数据表中的数据进行增删改查操作\",{\"1\":{\"171\":1}}],[\"编写请参考官方\",{\"1\":{\"56\":1}}],[\"编辑\",{\"1\":{\"76\":1}}],[\"编程语言\",{\"0\":{\"5\":1,\"344\":1}}],[\"仅限在for循环内使用\",{\"1\":{\"317\":1}}],[\"仅用于单节点数据库\",{\"1\":{\"198\":1}}],[\"仅\",{\"1\":{\"55\":1}}],[\"才有该选项\",{\"1\":{\"55\":1}}],[\"添加元素和切片扩容\",{\"1\":{\"285\":1}}],[\"添加唯一约束时\",{\"1\":{\"220\":1}}],[\"添加外键\",{\"1\":{\"198\":1}}],[\"添加数据\",{\"1\":{\"185\":1}}],[\"添加字段\",{\"1\":{\"183\":1,\"198\":1}}],[\"添加中科大源\",{\"1\":{\"136\":1}}],[\"添加阿里云镜像源\",{\"1\":{\"136\":1}}],[\"添加清华源\",{\"1\":{\"136\":1}}],[\"添加以下几个变量\",{\"1\":{\"135\":1}}],[\"添加若干组输出以及对应的期望评测结果\",{\"1\":{\"54\":1}}],[\"添加到暂存区\",{\"1\":{\"31\":1}}],[\"教程\",{\"1\":{\"54\":1,\"55\":1,\"56\":1}}],[\"教程章节\",{\"0\":{\"21\":1,\"44\":1,\"67\":1}}],[\"下划线\",{\"1\":{\"325\":1}}],[\"下标在合法范围之外\",{\"1\":{\"238\":1}}],[\"下标是从0开始\",{\"1\":{\"238\":1}}],[\"下标从0开始\",{\"1\":{\"158\":1}}],[\"下的值\",{\"1\":{\"180\":1}}],[\"下边距设置为\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"下一页的标签在\",{\"1\":{\"90\":1,\"97\":1}}],[\"下一步\",{\"1\":{\"72\":3,\"75\":3,\"138\":1}}],[\"下面将讲解\",{\"1\":{\"75\":1}}],[\"下面的代码中演示了拷贝前后两个变量共享底层数组\",{\"1\":{\"283\":1}}],[\"下面的\",{\"1\":{\"54\":1,\"56\":1}}],[\"下载链接\",{\"1\":{\"138\":1,\"139\":1}}],[\"下载完成我们就可以得到一个exe文件\",{\"1\":{\"133\":1}}],[\"下载完成后执行以下命令即可在本地打开博客\",{\"1\":{\"28\":1}}],[\"下载速度快\",{\"0\":{\"133\":1}}],[\"下载速度很慢\",{\"0\":{\"132\":1}}],[\"下载的时候找到对应的点击即可\",{\"1\":{\"132\":1}}],[\"下载的内容为\",{\"1\":{\"75\":1}}],[\"下载最新的\",{\"1\":{\"130\":1}}],[\"下来\",{\"1\":{\"54\":1}}],[\"自减\",{\"1\":{\"319\":1}}],[\"自增\",{\"1\":{\"319\":1}}],[\"自定帮我们添加换行符\",{\"1\":{\"252\":1}}],[\"自定义变量改成环境变量\",{\"1\":{\"153\":1}}],[\"自定义变量\",{\"1\":{\"153\":1}}],[\"自定义安装\",{\"1\":{\"72\":2}}],[\"自定义安装路径\",{\"1\":{\"37\":1}}],[\"自定义一下安装路径\",{\"1\":{\"37\":1}}],[\"自动带\",{\"1\":{\"253\":1}}],[\"自动帮我们添加了\",{\"1\":{\"252\":1}}],[\"自动提交事务\",{\"1\":{\"215\":1}}],[\"自动增长\",{\"1\":{\"180\":1}}],[\"自动\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"自动播放\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"自动加在题面里\",{\"1\":{\"57\":1}}],[\"自贡\",{\"1\":{\"81\":1,\"82\":1}}],[\"自行选择\",{\"1\":{\"74\":1}}],[\"自行去\",{\"1\":{\"54\":1}}],[\"自己可根据自己的需要进行选择\",{\"1\":{\"73\":1}}],[\"均需要包含头文件\",{\"1\":{\"54\":1}}],[\"官网下载\",{\"0\":{\"132\":1}}],[\"官网描述为\",{\"1\":{\"49\":1}}],[\"官方文档可参考pyecharts\",{\"1\":{\"104\":1}}],[\"官方下载\",{\"1\":{\"73\":1}}],[\"官方教程\",{\"1\":{\"53\":1}}],[\"式交互题需要\",{\"1\":{\"55\":1}}],[\"式交互题还有\",{\"1\":{\"53\":1}}],[\"式交互参见\",{\"1\":{\"53\":1}}],[\"外层for循环判断\",{\"1\":{\"317\":1}}],[\"外连接分为两种\",{\"1\":{\"206\":1}}],[\"外连接\",{\"0\":{\"206\":1},\"1\":{\"204\":1}}],[\"外键字段名\",{\"1\":{\"198\":2}}],[\"外键名称\",{\"1\":{\"198\":2}}],[\"外键约束\",{\"0\":{\"198\":1},\"1\":{\"180\":1,\"198\":1}}],[\"外\",{\"1\":{\"53\":1}}],[\"样例在\",{\"1\":{\"52\":1}}],[\"题面编辑完后需要\",{\"1\":{\"52\":1}}],[\"题面编辑内容不包括样例\",{\"1\":{\"52\":1}}],[\"题面和题解都需要使用\",{\"1\":{\"52\":1}}],[\"题目类型\",{\"1\":{\"51\":1}}],[\"题目创建\",{\"0\":{\"43\":1}}],[\"需要强制转换\",{\"1\":{\"302\":1}}],[\"需要先将其转换成\",{\"1\":{\"301\":1}}],[\"需要先在下面的\",{\"1\":{\"52\":1}}],[\"需要自定义\",{\"1\":{\"253\":1}}],[\"需要让智能指针管理的资源\",{\"1\":{\"231\":1}}],[\"需要注意的是\",{\"1\":{\"225\":1,\"286\":1}}],[\"需要将多次访问数据库的操作视为一个整体来执行\",{\"1\":{\"214\":1}}],[\"需要消除无效的笛卡尔积\",{\"1\":{\"203\":1}}],[\"需要检查外键关系\",{\"1\":{\"198\":1}}],[\"需要指定长度\",{\"1\":{\"181\":2}}],[\"需要加上\",{\"1\":{\"150\":1,\"257\":1}}],[\"需要新建环境\",{\"1\":{\"140\":1}}],[\"需要用到的库有\",{\"1\":{\"104\":1}}],[\"需要手动验证\",{\"1\":{\"100\":1}}],[\"需要提供输入和期望是否合法\",{\"1\":{\"56\":1}}],[\"需要放在\",{\"1\":{\"53\":1}}],[\"需要包含相应的头文件\",{\"1\":{\"17\":1}}],[\"通道\",{\"1\":{\"289\":1,\"317\":1}}],[\"通用占位符\",{\"0\":{\"257\":1}}],[\"通用语法\",{\"0\":{\"169\":1}}],[\"通常使用这种方式来自定义错误类型\",{\"1\":{\"255\":1}}],[\"通常是用来做单表的拆分\",{\"1\":{\"199\":1}}],[\"通常是原内存的两倍\",{\"1\":{\"16\":1}}],[\"通常封装到\",{\"1\":{\"196\":1}}],[\"通配符\",{\"1\":{\"191\":1}}],[\"通辽\",{\"1\":{\"81\":1,\"82\":1}}],[\"通化\",{\"1\":{\"81\":1,\"82\":1}}],[\"通过at函数获取\",{\"1\":{\"332\":1}}],[\"通过for\",{\"1\":{\"317\":1}}],[\"通过flag变量来判断解锁后释放需要释放互斥锁资源\",{\"1\":{\"230\":1}}],[\"通过var声明的零值切片可以在append\",{\"1\":{\"285\":1}}],[\"通过转义\",{\"1\":{\"265\":1}}],[\"通过use\",{\"1\":{\"234\":1}}],[\"通过这种引用计数的方式就能支持多个对象一起管理某一个资源\",{\"1\":{\"228\":1}}],[\"通过这个引用计数记录着当前有多少个对象在管理着这块资源\",{\"1\":{\"228\":1}}],[\"通过索引列对数据进行排序\",{\"1\":{\"218\":1}}],[\"通过逻辑外键\",{\"1\":{\"198\":1}}],[\"通过指令\",{\"1\":{\"173\":1}}],[\"通过数据库的优化来提高数据库的访问性能\",{\"1\":{\"171\":1}}],[\"通过直接爬取网页元素\",{\"1\":{\"100\":1}}],[\"通过对比两个网址\",{\"1\":{\"86\":1}}],[\"通过\",{\"1\":{\"52\":1,\"62\":2,\"331\":1}}],[\"一样\",{\"1\":{\"296\":1}}],[\"一种指定low和high两个索引界限值的简单的形式\",{\"1\":{\"276\":1}}],[\"一种是出现了\",{\"1\":{\"60\":1}}],[\"一旦定义\",{\"1\":{\"238\":1}}],[\"一旦为表起了别名\",{\"1\":{\"205\":1}}],[\"一致性\",{\"1\":{\"216\":2}}],[\"一行一列\",{\"1\":{\"208\":1}}],[\"一门课程也可以供多个学生选择\",{\"1\":{\"200\":1}}],[\"一门操作关系型数据库的编程语言\",{\"1\":{\"168\":1}}],[\"一个分支可以有多个值\",{\"1\":{\"317\":1}}],[\"一个rune字符由一个或多个byte组成\",{\"1\":{\"300\":1}}],[\"一个nil值的切片的长度和容量都是0\",{\"1\":{\"282\":1}}],[\"一个nil值的切片并没有底层数组\",{\"1\":{\"282\":1}}],[\"一个指针占\",{\"1\":{\"219\":1}}],[\"一个\",{\"1\":{\"219\":1}}],[\"一个节点可以保存多个数据\",{\"1\":{\"219\":1}}],[\"一个节点下面只能有两个子节点\",{\"1\":{\"219\":1}}],[\"一个事务一旦被提交或回滚\",{\"1\":{\"216\":1}}],[\"一个事务的成功或者失败对于其他的事务是没有影响\",{\"1\":{\"216\":1}}],[\"一个事务完成之后数据都必须处于一致性状态\",{\"1\":{\"216\":1}}],[\"一个用户的事务不能被其他用户的事务干扰\",{\"1\":{\"216\":1}}],[\"一个用户只能对应一个身份证\",{\"1\":{\"199\":1}}],[\"一个业务要发送多条\",{\"1\":{\"214\":1}}],[\"一个课程也可以供多个学生选修\",{\"1\":{\"200\":1}}],[\"一个学生可以选修多门课程\",{\"1\":{\"200\":2}}],[\"一个学生可以有多个授课老师\",{\"1\":{\"200\":1}}],[\"一个授课老师也可以有多个学生\",{\"1\":{\"200\":1}}],[\"一对一的应用场景\",{\"1\":{\"199\":1}}],[\"一对一关系表在实际开发中应用起来比较简单\",{\"1\":{\"199\":1}}],[\"一对一\",{\"0\":{\"199\":1},\"1\":{\"197\":1,\"199\":1}}],[\"一对多我们是怎么设计表关系的\",{\"1\":{\"199\":1}}],[\"一对多关系实现\",{\"1\":{\"198\":1}}],[\"一对多\",{\"0\":{\"198\":1},\"1\":{\"197\":1}}],[\"一列\",{\"1\":{\"123\":1}}],[\"一栏\",{\"1\":{\"87\":1}}],[\"一下包含破解教程\",{\"1\":{\"74\":1}}],[\"一般情况下我们可以让编译器根据初始值的个数自行推断数组的长度\",{\"1\":{\"241\":1}}],[\"一般需要同时修改公共字段\",{\"1\":{\"187\":1}}],[\"一般是数据没有过\",{\"1\":{\"60\":1}}],[\"一般用于审核\",{\"1\":{\"52\":1}}],[\"一路下一步即可\",{\"0\":{\"37\":1}}],[\"与else匹配的\",{\"1\":{\"315\":1}}],[\"与sp对象一同管理它的资源\",{\"1\":{\"229\":1,\"230\":1}}],[\"与传入对象一起管理它管理的资源\",{\"1\":{\"229\":1}}],[\"与\",{\"1\":{\"52\":1,\"181\":1,\"194\":1,\"304\":1}}],[\"还需要将对应的互斥锁也交给当前对象\",{\"1\":{\"230\":1}}],[\"还需要将该资源对应的引用计数的内存空间进行释放\",{\"1\":{\"229\":1}}],[\"还需要把这个引用计数也给它\",{\"1\":{\"229\":1}}],[\"还需要对\",{\"1\":{\"224\":1}}],[\"还是因为某些原因中途返回了\",{\"1\":{\"224\":1}}],[\"还可以支持范围查询\",{\"1\":{\"219\":1}}],[\"还可以通过\",{\"1\":{\"52\":1}}],[\"还支持目标跟踪\",{\"1\":{\"130\":1}}],[\"还有数组\",{\"1\":{\"289\":1}}],[\"还有一些为面议\",{\"1\":{\"81\":1}}],[\"还有内置的\",{\"1\":{\"46\":1}}],[\"空闲链表\",{\"1\":{\"331\":1}}],[\"空间限制\",{\"1\":{\"51\":1}}],[\"空的整数向量\",{\"1\":{\"17\":1}}],[\"🔥创建虚拟环境\",{\"0\":{\"140\":1}}],[\"🔥cudnn\",{\"0\":{\"139\":1}}],[\"🔥cuda\",{\"0\":{\"138\":1}}],[\"🔥anaconda默认环境保存路径和下载源修改\",{\"0\":{\"136\":1}}],[\"🔥anaconda\",{\"0\":{\"132\":1,\"133\":1,\"134\":1,\"135\":1}}],[\"🔒清除包缓存\",{\"1\":{\"134\":1}}],[\"🔒base环境以python3\",{\"1\":{\"134\":1}}],[\"🔒创建开始菜单\",{\"1\":{\"134\":1}}],[\"📌wordcloud\",{\"0\":{\"124\":1}}],[\"📌pie\",{\"0\":{\"117\":1}}],[\"📌成果展示\",{\"0\":{\"113\":1,\"121\":1,\"127\":1}}],[\"📌timeline\",{\"0\":{\"111\":1,\"119\":1,\"125\":1}}],[\"📌grid\",{\"0\":{\"110\":1,\"118\":1}}],[\"📌bar\",{\"0\":{\"109\":1}}],[\"📌line\",{\"0\":{\"108\":1}}],[\"📌map\",{\"0\":{\"107\":1,\"116\":1}}],[\"📌数据获取\",{\"0\":{\"106\":1,\"115\":1,\"123\":1}}],[\"📌数据抓取\",{\"0\":{\"90\":1,\"97\":1}}],[\"📌url获取模块\",{\"0\":{\"96\":1}}],[\"📌完整代码\",{\"0\":{\"82\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"📌️url获取模块\",{\"0\":{\"89\":1}}],[\"📌️packages\",{\"0\":{\"62\":1}}],[\"📌️issues\",{\"0\":{\"61\":1}}],[\"📌️invocations\",{\"0\":{\"60\":1}}],[\"📌️interactor\",{\"0\":{\"55\":1}}],[\"📌️solution\",{\"0\":{\"59\":1}}],[\"📌️stresses\",{\"0\":{\"58\":1}}],[\"📌️statement\",{\"0\":{\"52\":1}}],[\"📌️tests\",{\"0\":{\"57\":1}}],[\"📌️validator\",{\"0\":{\"56\":1}}],[\"📌️checker\",{\"0\":{\"54\":1}}],[\"📌️files\",{\"0\":{\"53\":1}}],[\"📌️general\",{\"0\":{\"51\":1}}],[\"📍2\",{\"0\":{\"137\":1}}],[\"📍1\",{\"0\":{\"131\":1}}],[\"📍题目创建\",{\"0\":{\"50\":1}}],[\"📍简介\",{\"0\":{\"49\":1}}],[\"点击进行下载\",{\"1\":{\"139\":1}}],[\"点击toolkit后准备安装包下载\",{\"1\":{\"138\":1}}],[\"点击下一页按钮\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"点击i\",{\"1\":{\"75\":1}}],[\"点击close关闭即可\",{\"1\":{\"72\":1}}],[\"点击\",{\"1\":{\"50\":1,\"58\":1,\"62\":1,\"134\":1,\"138\":4}}],[\"开启事务\",{\"1\":{\"215\":2}}],[\"开启手动控制事务\",{\"1\":{\"215\":1}}],[\"开封\",{\"1\":{\"81\":1,\"82\":1}}],[\"开源\",{\"1\":{\"73\":1}}],[\"开源项目\",{\"0\":{\"12\":1}}],[\"开始下一次的循环迭代过程\",{\"1\":{\"317\":1}}],[\"开始循环增加原来的1\",{\"1\":{\"286\":1}}],[\"开始时间\",{\"1\":{\"199\":1}}],[\"开始\",{\"1\":{\"196\":1}}],[\"开始自增\",{\"1\":{\"180\":1}}],[\"开始cuda下载\",{\"1\":{\"138\":1}}],[\"开始安装\",{\"1\":{\"134\":1,\"138\":1}}],[\"开始编辑题目\",{\"1\":{\"50\":1}}],[\"开始创建一个题目表格\",{\"1\":{\"50\":1}}],[\"能看懂英文就基本能用了\",{\"1\":{\"50\":1}}],[\"能够正确显示版本号说明安装成功\",{\"1\":{\"39\":1}}],[\"做准备\",{\"1\":{\"49\":1}}],[\"发生错误\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"发现找不到对应的json文件\",{\"1\":{\"94\":1}}],[\"发现参数qurey=java和city=100010000\",{\"1\":{\"86\":1}}],[\"发现问题可以提\",{\"1\":{\"49\":1}}],[\"发布站点\",{\"0\":{\"32\":1}}],[\"拍出来的数据可以直接添加到题目数据中\",{\"1\":{\"49\":1}}],[\"正数前加空格而负数前加负号\",{\"1\":{\"265\":1}}],[\"正则表达式进行替换\",{\"1\":{\"89\":1}}],[\"正则表达式获取数字\",{\"1\":{\"81\":1}}],[\"正解未\",{\"1\":{\"49\":1}}],[\"正确用法\",{\"1\":{\"17\":1}}],[\"错解\",{\"1\":{\"49\":1}}],[\"错误用法\",{\"1\":{\"17\":1}}],[\"环环相扣\",{\"1\":{\"49\":1}}],[\"环境验证\",{\"1\":{\"138\":1}}],[\"环境\",{\"1\":{\"131\":1}}],[\"环境就已经完全配好了\",{\"1\":{\"39\":1}}],[\"环境变量改为自定义变量\",{\"1\":{\"153\":1}}],[\"环境变量中的cuda文件夹路径\",{\"1\":{\"139\":1}}],[\"环境变量中的路径可查看\",{\"1\":{\"139\":1}}],[\"环境变量\",{\"1\":{\"39\":1,\"153\":1}}],[\"环境配置\",{\"0\":{\"39\":1,\"69\":1,\"130\":1},\"1\":{\"67\":1},\"2\":{\"41\":1,\"141\":1}}],[\"尤其是多人合作出题时\",{\"1\":{\"49\":1}}],[\"尤其是对于大型容器\",{\"1\":{\"17\":1}}],[\"功能\",{\"1\":{\"192\":2,\"193\":1}}],[\"功能强大\",{\"1\":{\"73\":1}}],[\"功能非常完善\",{\"1\":{\"49\":1}}],[\"功能使用\",{\"0\":{\"17\":1}}],[\"出题系统完善\",{\"1\":{\"49\":1}}],[\"出题必须使用\",{\"1\":{\"49\":1}}],[\"出题\",{\"1\":{\"48\":1}}],[\"本函数返回成功扫描的数据个数和遇到的任何错误\",{\"1\":{\"267\":1,\"268\":1,\"269\":1}}],[\"本质就是要让对引用计数的自增和自减操作变成一个原子操作\",{\"1\":{\"230\":1}}],[\"本文不需要重复配置\",{\"1\":{\"130\":1}}],[\"本溪\",{\"1\":{\"81\":1,\"82\":1}}],[\"本页面将简要介绍使用多人协作出题平台\",{\"1\":{\"48\":1}}],[\"本教程将指导你如何制作可视化图表\",{\"1\":{\"104\":1}}],[\"本教程将指导你如何爬取\",{\"1\":{\"84\":1}}],[\"本教程将指导你如何处理\",{\"1\":{\"79\":1}}],[\"本教程将指导你如何配置\",{\"1\":{\"69\":1}}],[\"本教程将指导你如何搭建\",{\"1\":{\"34\":1}}],[\"本教程指引你如何部署\",{\"1\":{\"30\":1}}],[\"本教程指引你如何配置\",{\"1\":{\"23\":1}}],[\"文本格式化标签\",{\"1\":{\"325\":1}}],[\"文本将会原样输出\",{\"1\":{\"298\":1}}],[\"文本位置设置为右侧\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"文昌\",{\"1\":{\"81\":1,\"82\":1}}],[\"文山壮族苗族自治州\",{\"1\":{\"81\":1,\"82\":1}}],[\"文件权限\",{\"1\":{\"253\":1}}],[\"文件打开模式\",{\"1\":{\"253\":1}}],[\"文件路径\",{\"1\":{\"253\":1}}],[\"文件句柄\",{\"1\":{\"225\":1}}],[\"文件名\",{\"1\":{\"156\":2}}],[\"文件参数变量\",{\"0\":{\"156\":1}}],[\"文件开头需要写\",{\"1\":{\"144\":1}}],[\"文件的数据\",{\"1\":{\"80\":1}}],[\"文件\",{\"1\":{\"54\":1,\"80\":2,\"144\":1,\"248\":1}}],[\"文件夹\",{\"1\":{\"27\":1,\"40\":2}}],[\"文档和项目\",{\"1\":{\"46\":1}}],[\"上下两种写法的区别在哪里\",{\"1\":{\"316\":1}}],[\"上面示例中\",{\"1\":{\"311\":1}}],[\"上面代码中a的内部存储空间已经分配了10个\",{\"1\":{\"279\":1}}],[\"上面的代码会构造与简单切片表达式a\",{\"1\":{\"278\":1}}],[\"上述程序是没有问题的\",{\"1\":{\"233\":1}}],[\"上述问题也可以使用智能指针进行解决\",{\"1\":{\"224\":1}}],[\"上述语法中的\",{\"1\":{\"176\":1}}],[\"上述指令\",{\"1\":{\"167\":1}}],[\"上一条命令的退出状态\",{\"1\":{\"157\":1}}],[\"上一步完成推送后\",{\"1\":{\"32\":1}}],[\"上边距设置为\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"上饶\",{\"1\":{\"81\":1,\"82\":1}}],[\"上海\",{\"1\":{\"81\":2,\"82\":2,\"240\":2,\"241\":2,\"243\":1,\"245\":2,\"246\":4,\"285\":2}}],[\"上海市\",{\"1\":{\"81\":1,\"82\":1}}],[\"上传题目数据\",{\"0\":{\"64\":1},\"1\":{\"44\":1}}],[\"设置退出标签\",{\"1\":{\"317\":2}}],[\"设置别名\",{\"1\":{\"191\":1}}],[\"设置搜索时显示通道地址\",{\"1\":{\"136\":1}}],[\"设置热力图\",{\"1\":{\"107\":1}}],[\"设置鼠标放置旁边时\",{\"1\":{\"107\":1,\"108\":1,\"117\":1}}],[\"设置标签\",{\"1\":{\"49\":1}}],[\"设置全局模块的安装路径到\",{\"1\":{\"40\":1}}],[\"设置缓存到\",{\"1\":{\"40\":1}}],[\"设置协议\",{\"1\":{\"27\":1}}],[\"修改字符串\",{\"0\":{\"301\":1}}],[\"修改b的同时a的值也会发生变化\",{\"1\":{\"287\":1}}],[\"修改语句的条件可以有\",{\"1\":{\"187\":1}}],[\"修改数据\",{\"1\":{\"185\":1}}],[\"修改数据类型\",{\"1\":{\"183\":1}}],[\"修改\",{\"0\":{\"183\":1,\"187\":1},\"1\":{\"183\":1}}],[\"修改表名\",{\"1\":{\"183\":1}}],[\"修改表的时候添加约束\",{\"1\":{\"180\":1}}],[\"修改表\",{\"1\":{\"177\":1}}],[\"修改安装路径\",{\"1\":{\"72\":1,\"75\":1}}],[\"修改缓存目录和全局目录\",{\"0\":{\"40\":1}}],[\"修改或删除的文件\",{\"1\":{\"31\":1}}],[\"输入\",{\"0\":{\"248\":1,\"266\":1}}],[\"输入这行代码\",{\"1\":{\"135\":1}}],[\"输入python验证\",{\"1\":{\"72\":1}}],[\"输入以下指令\",{\"1\":{\"39\":1,\"136\":2}}],[\"输出运算符\",{\"1\":{\"328\":1}}],[\"输出结果\",{\"1\":{\"278\":1}}],[\"输出结果如下\",{\"1\":{\"259\":1,\"260\":1,\"261\":1,\"265\":1}}],[\"输出值\",{\"1\":{\"257\":1}}],[\"输出内容独占一行\",{\"1\":{\"252\":1}}],[\"输出3\",{\"1\":{\"154\":1}}],[\"输出\",{\"0\":{\"248\":1,\"249\":1},\"1\":{\"154\":2,\"246\":1,\"277\":2,\"285\":1,\"300\":1,\"317\":2}}],[\"输出空行\",{\"1\":{\"152\":1}}],[\"输出yxcacwing\",{\"1\":{\"150\":1}}],[\"输出yxc\",{\"1\":{\"150\":2}}],[\"输出自动生成\",{\"1\":{\"49\":1}}],[\"输出二维\",{\"1\":{\"17\":2}}],[\"键盘win+r进入cmd\",{\"1\":{\"39\":1}}],[\"改的效率\",{\"1\":{\"198\":1}}],[\"改操作\",{\"1\":{\"185\":1}}],[\"改为自定义变量\",{\"1\":{\"153\":1}}],[\"改成\",{\"1\":{\"39\":1}}],[\"改进\",{\"1\":{\"17\":1}}],[\"u+\",{\"1\":{\"259\":1}}],[\"u+1234\",{\"1\":{\"259\":1}}],[\"u\",{\"1\":{\"231\":2,\"259\":1,\"265\":2}}],[\"up\",{\"1\":{\"226\":2}}],[\"up2\",{\"1\":{\"226\":1}}],[\"up1\",{\"1\":{\"226\":2}}],[\"update\",{\"0\":{\"187\":1},\"1\":{\"28\":2,\"185\":1,\"187\":5,\"188\":1,\"208\":1,\"218\":1}}],[\"unicode\",{\"1\":{\"300\":2}}],[\"unique\",{\"1\":{\"180\":1,\"199\":1,\"220\":1,\"226\":12},\"2\":{\"235\":1}}],[\"unsigned\",{\"1\":{\"181\":1}}],[\"unset\",{\"1\":{\"152\":2}}],[\"u用户名\",{\"1\":{\"167\":1}}],[\"usr\",{\"1\":{\"144\":3}}],[\"ustc\",{\"1\":{\"136\":6}}],[\"use\",{\"1\":{\"57\":1,\"175\":1,\"228\":3,\"229\":1,\"230\":2,\"234\":4}}],[\"username\",{\"1\":{\"181\":2}}],[\"users\",{\"1\":{\"134\":1,\"136\":1,\"270\":1}}],[\"user\",{\"1\":{\"39\":1,\"270\":1}}],[\"ultralytics\",{\"0\":{\"130\":1,\"338\":1},\"1\":{\"130\":1,\"140\":1}}],[\"utils\",{\"1\":{\"112\":1}}],[\"utf\",{\"1\":{\"82\":1,\"91\":1,\"98\":1,\"300\":1}}],[\"uinptr\",{\"1\":{\"305\":1}}],[\"uint类型时\",{\"1\":{\"291\":1}}],[\"uintptr\",{\"1\":{\"291\":1}}],[\"uint\",{\"1\":{\"291\":2,\"305\":1}}],[\"uint64\",{\"1\":{\"290\":2,\"305\":1}}],[\"uint32\",{\"1\":{\"290\":2,\"305\":1}}],[\"uint16\",{\"1\":{\"290\":2,\"305\":1}}],[\"uint8类型\",{\"1\":{\"300\":1}}],[\"uint8就是我们熟知的byte型\",{\"1\":{\"290\":1}}],[\"uint8\",{\"1\":{\"290\":2,\"305\":1}}],[\"ui\",{\"1\":{\"90\":1}}],[\"ui设计师\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"urls\",{\"1\":{\"136\":1}}],[\"url\",{\"1\":{\"89\":7,\"90\":1,\"91\":9,\"96\":7,\"97\":1,\"98\":9,\"140\":1}}],[\"如123\",{\"1\":{\"260\":1}}],[\"如内存\",{\"1\":{\"225\":1}}],[\"如上例中值为\",{\"1\":{\"157\":2}}],[\"如上例中值为4\",{\"1\":{\"157\":1}}],[\"如下表所示\",{\"1\":{\"297\":1}}],[\"如下图\",{\"1\":{\"229\":3,\"233\":3}}],[\"如下图所示\",{\"1\":{\"138\":1}}],[\"如下图所示即安装成功\",{\"1\":{\"72\":1}}],[\"如下\",{\"1\":{\"106\":1}}],[\"如何破解\",{\"1\":{\"75\":1}}],[\"如\",{\"1\":{\"53\":1,\"176\":2,\"203\":1,\"219\":1,\"260\":3,\"300\":1}}],[\"如图所示\",{\"0\":{\"38\":1}}],[\"如果条件为\",{\"1\":{\"321\":1}}],[\"如果两边的操作数有一个\",{\"1\":{\"321\":1}}],[\"如果两边的操作数都是\",{\"1\":{\"321\":1}}],[\"如果相等返回\",{\"1\":{\"320\":1}}],[\"如果满足则执行分支2\",{\"1\":{\"315\":1}}],[\"如果省略了值则表示和上面一行的值相同\",{\"1\":{\"311\":1}}],[\"如果想要忽略某个值\",{\"1\":{\"311\":1}}],[\"如果最终容量\",{\"1\":{\"286\":1}}],[\"如果旧切片长度大于等于1024\",{\"1\":{\"286\":1}}],[\"如果旧切片的长度小于1024\",{\"1\":{\"286\":1}}],[\"如果新申请容量\",{\"1\":{\"286\":1}}],[\"如果索引在运行时超出范围\",{\"1\":{\"277\":1}}],[\"如果low和high两个指标都是常数\",{\"1\":{\"277\":1}}],[\"如果0\",{\"1\":{\"277\":1}}],[\"如果读取的数据个数比提供的参数少\",{\"1\":{\"267\":1}}],[\"如果点号后没有跟数字吗\",{\"1\":{\"263\":1}}],[\"如果为指定精度\",{\"1\":{\"263\":1}}],[\"如果未指定宽度\",{\"1\":{\"263\":1}}],[\"如果未指定该字段值\",{\"1\":{\"180\":1}}],[\"如果打印的是\",{\"1\":{\"257\":1}}],[\"如果传入的删除器是一个lambda表达式就更麻烦了\",{\"1\":{\"231\":1}}],[\"如果传入的删除器是一个仿函数\",{\"1\":{\"231\":1}}],[\"如果有其他对象也想要管理这个资源\",{\"1\":{\"229\":1}}],[\"如果减为0则需要将该资源释放\",{\"1\":{\"229\":1}}],[\"如果减为0则需要释放\",{\"1\":{\"229\":1}}],[\"如果用户定义shared\",{\"1\":{\"231\":1}}],[\"如果用户输入的除数为0\",{\"1\":{\"224\":1}}],[\"如果用一个smartptr对象来拷贝构造另一个smartptr对象\",{\"1\":{\"225\":1}}],[\"如果用时在时限的一半到两倍之间\",{\"1\":{\"60\":1}}],[\"如果事务执行出现错误\",{\"1\":{\"216\":1}}],[\"如果事务成功的完成\",{\"1\":{\"216\":1}}],[\"如果其中有一条\",{\"1\":{\"214\":1}}],[\"如果在业务系统当中\",{\"1\":{\"199\":1}}],[\"如果查询的是第一页数据\",{\"1\":{\"196\":1}}],[\"如果不相等返回\",{\"1\":{\"320\":1}}],[\"如果不是数值类型\",{\"1\":{\"193\":1}}],[\"如果不加该参数项\",{\"1\":{\"184\":1}}],[\"如果这一列中有\",{\"1\":{\"193\":1}}],[\"如果这些代码需要\",{\"1\":{\"53\":1}}],[\"如果没有特别指明\",{\"1\":{\"219\":1}}],[\"如果没有条件\",{\"1\":{\"187\":1,\"188\":1}}],[\"如果没有联网\",{\"1\":{\"72\":1}}],[\"如果数据结构是红黑树\",{\"1\":{\"219\":1}}],[\"如果数据库存在\",{\"1\":{\"176\":1}}],[\"如果数据中存在变量没有达到最小值或最大值\",{\"1\":{\"60\":1}}],[\"如果删除一个不存在的数据库\",{\"1\":{\"176\":1}}],[\"如果存在则不创建\",{\"1\":{\"174\":1}}],[\"如果已经会配置\",{\"1\":{\"130\":1}}],[\"如果拍出错就会显示\",{\"1\":{\"58\":1}}],[\"如果勾选了\",{\"1\":{\"57\":1}}],[\"如果需要动态的创建一个切片\",{\"1\":{\"279\":1}}],[\"如果需要自己编写\",{\"1\":{\"54\":1}}],[\"如果需要在题面中添加图片\",{\"1\":{\"52\":1}}],[\"如果是返回\",{\"1\":{\"320\":4}}],[\"如果是升序\",{\"1\":{\"195\":1}}],[\"如果是\",{\"1\":{\"53\":1}}],[\"如果出现有关`crlf`\",{\"1\":{\"31\":1}}],[\"如果你有需求\",{\"1\":{\"27\":1}}],[\"如果向量不为空\",{\"1\":{\"17\":1}}],[\"如果向量为空\",{\"1\":{\"17\":1}}],[\"然后增加一个支持传入删除器的构造函数\",{\"1\":{\"231\":1}}],[\"然后将删除器的类型在各个类之间进行传递\",{\"1\":{\"231\":1}}],[\"然后将用户变量默认的\",{\"1\":{\"39\":1}}],[\"然后用两个线程分别对这个shared\",{\"1\":{\"230\":1}}],[\"然后可以对分类完的数据进行合并计算\",{\"1\":{\"194\":1}}],[\"然后返回一个结果值\",{\"1\":{\"193\":1}}],[\"然后回车\",{\"1\":{\"167\":1}}],[\"然后再用decltype来声明删除器的类型\",{\"1\":{\"231\":1}}],[\"然后再与传入对象一起管理它管理的资源\",{\"1\":{\"229\":1}}],[\"然后再接管传入对象管理的资源\",{\"1\":{\"226\":1}}],[\"然后再将异常重新抛出\",{\"1\":{\"224\":1}}],[\"然后再使用如下指令\",{\"1\":{\"167\":1}}],[\"然后再在系统变量的path中添加\",{\"1\":{\"39\":1}}],[\"然后再在安装路径的根目录下新建两个文件夹\",{\"0\":{\"38\":1}}],[\"然后执行该脚本\",{\"1\":{\"156\":1}}],[\"然后运行对拍\",{\"1\":{\"58\":1}}],[\"然后在题面中加上\",{\"1\":{\"52\":1}}],[\"然后点击next\",{\"1\":{\"134\":1}}],[\"然后点击\",{\"1\":{\"50\":1,\"54\":1,\"134\":1}}],[\"然后释放旧内存\",{\"1\":{\"16\":1}}],[\"前缀\",{\"1\":{\"299\":1}}],[\"前端在请求服务端时\",{\"1\":{\"196\":1}}],[\"前端查询数据库的流程\",{\"1\":{\"196\":1}}],[\"前情提要\",{\"1\":{\"99\":1}}],[\"前程无忧\",{\"0\":{\"99\":1},\"1\":{\"101\":1},\"2\":{\"103\":1}}],[\"前面我们获取了两个网站的数据\",{\"1\":{\"80\":1}}],[\"前面新建文件夹node\",{\"1\":{\"39\":1}}],[\"前言\",{\"1\":{\"70\":1,\"81\":1,\"104\":1,\"130\":1,\"131\":1,\"137\":1}}],[\"前往\",{\"1\":{\"32\":1}}],[\"前进到下一个元素\",{\"1\":{\"17\":1}}],[\"静态部署\",{\"1\":{\"31\":1}}],[\"y=\",{\"1\":{\"311\":1}}],[\"yyyy\",{\"1\":{\"181\":4}}],[\"yxc\",{\"1\":{\"149\":2,\"154\":3,\"159\":1,\"160\":1,\"161\":1,\"162\":1}}],[\"yolov8\",{\"1\":{\"130\":1}}],[\"yolov11\",{\"0\":{\"130\":1},\"1\":{\"130\":1,\"140\":2}}],[\"yolo\",{\"1\":{\"130\":2},\"2\":{\"141\":1}}],[\"yolo11\",{\"1\":{\"130\":3}}],[\"yaxis\",{\"1\":{\"108\":1,\"109\":2,\"112\":3}}],[\"year\",{\"1\":{\"181\":1}}],[\"yellow\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"yes\",{\"1\":{\"27\":1,\"136\":1}}],[\"y\",{\"1\":{\"76\":1,\"109\":3,\"111\":2,\"112\":5,\"311\":2}}],[\"yml`文件\",{\"1\":{\"31\":1}}],[\"仓库的pages\",{\"1\":{\"32\":1}}],[\"仓库中的更改推送到远程仓库\",{\"1\":{\"31\":1}}],[\"仓库\",{\"1\":{\"31\":2}}],[\"仓库地址是一个普通的形如\",{\"1\":{\"31\":1}}],[\"容量并不会影响当前元素的个数\",{\"1\":{\"279\":1}}],[\"容量等于得到的切片的底层数组的容量\",{\"1\":{\"277\":1}}],[\"容易引发数据库的死锁问题\",{\"1\":{\"198\":1}}],[\"容易出现依赖冲突\",{\"1\":{\"28\":1}}],[\"容器容量\",{\"1\":{\"332\":1}}],[\"容器遍历\",{\"1\":{\"17\":1}}],[\"容器为空不存在a\",{\"1\":{\"17\":1}}],[\"也必须与else写在同一行\",{\"1\":{\"315\":1}}],[\"也无法与其他类型进行转换\",{\"1\":{\"295\":1}}],[\"也是非常常见的一个功能\",{\"1\":{\"196\":1}}],[\"也是不错的选择\",{\"1\":{\"49\":1}}],[\"也有降序排序\",{\"1\":{\"195\":1}}],[\"也可以使用\",{\"1\":{\"300\":1}}],[\"也可以添加另一个切片中的元素\",{\"1\":{\"285\":1}}],[\"也可以先用auto接收lambda表达式\",{\"1\":{\"231\":1}}],[\"也可以用原子类atomic对引用计数进行封装\",{\"1\":{\"230\":1}}],[\"也可以用双引号\",{\"1\":{\"154\":1}}],[\"也可以没有\",{\"1\":{\"187\":1,\"188\":1}}],[\"也可以替换成\",{\"1\":{\"176\":1}}],[\"也可以直接定义数组中某个元素的值\",{\"1\":{\"159\":1}}],[\"也可以不用引号\",{\"1\":{\"154\":1}}],[\"也可以不加引号\",{\"1\":{\"149\":1}}],[\"也可以将一套逻辑组织成一个文件\",{\"1\":{\"144\":1}}],[\"也可以修改为其他名或者python版本\",{\"1\":{\"140\":1}}],[\"也可以提醒自己需要卡掉它们\",{\"1\":{\"59\":1}}],[\"也可以选择后再点\",{\"1\":{\"54\":1}}],[\"也不需要互相传文件\",{\"1\":{\"49\":1}}],[\"也不要下载这个插件\",{\"1\":{\"28\":1}}],[\"也就是\",{\"1\":{\"292\":1}}],[\"也就是下面代码中从数组a中选出1<=索引值<4的元素组成切片s\",{\"1\":{\"277\":1}}],[\"也就是支持了智能指针的拷贝\",{\"1\":{\"228\":1}}],[\"也就是简单粗暴的防止对智能指针对象进行拷贝\",{\"1\":{\"226\":1}}],[\"也就是将一张大表拆分成两张小表\",{\"1\":{\"199\":1}}],[\"也就是你package\",{\"1\":{\"28\":1}}],[\"也就是说\",{\"1\":{\"16\":1,\"219\":1}}],[\"✖\",{\"1\":{\"28\":1}}],[\"^=\",{\"1\":{\"323\":1}}],[\"^\",{\"1\":{\"89\":2,\"91\":2,\"96\":2,\"98\":2,\"322\":1}}],[\"^2\",{\"1\":{\"28\":1}}],[\"^3\",{\"1\":{\"28\":1}}],[\"8字符\",{\"1\":{\"300\":1}}],[\"8编码\",{\"1\":{\"296\":1}}],[\"8e308\",{\"1\":{\"293\":1}}],[\"8位整型\",{\"1\":{\"290\":2}}],[\"8+6\",{\"1\":{\"219\":1}}],[\"838\",{\"1\":{\"181\":2}}],[\"8388607\",{\"1\":{\"181\":1}}],[\"8388608\",{\"1\":{\"181\":1}}],[\"8bytes\",{\"1\":{\"181\":2}}],[\"82\",{\"1\":{\"117\":1,\"120\":1}}],[\"80\",{\"1\":{\"117\":1,\"120\":1}}],[\"8751\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"8\",{\"0\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1},\"1\":{\"28\":1,\"81\":1,\"82\":2,\"91\":1,\"98\":1,\"181\":1,\"219\":1,\"280\":1,\"285\":8,\"317\":1}}],[\"l\",{\"1\":{\"300\":4}}],[\"logo\",{\"1\":{\"325\":1}}],[\"loop\",{\"1\":{\"286\":1}}],[\"long\",{\"1\":{\"196\":1}}],[\"longtext\",{\"1\":{\"181\":1}}],[\"longblob\",{\"1\":{\"181\":1}}],[\"low\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1,\"277\":4,\"278\":5}}],[\"loads\",{\"1\":{\"101\":1}}],[\"loader\",{\"1\":{\"28\":1}}],[\"lesson1\",{\"1\":{\"297\":1}}],[\"legendopts\",{\"1\":{\"117\":1,\"120\":1}}],[\"legend\",{\"1\":{\"117\":1,\"120\":1}}],[\"left\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"206\":1}}],[\"left=\",{\"1\":{\"107\":2,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"112\":7,\"116\":2,\"119\":1,\"120\":3,\"125\":1,\"126\":1}}],[\"length\",{\"1\":{\"328\":1}}],[\"len\",{\"1\":{\"81\":3,\"82\":3,\"238\":1,\"243\":1,\"277\":12,\"278\":3,\"279\":1,\"280\":1,\"282\":3,\"284\":1,\"285\":12,\"286\":1,\"299\":1,\"300\":1,\"305\":1,\"328\":1}}],[\"lambda示例2\",{\"1\":{\"231\":1}}],[\"lambda示例1\",{\"1\":{\"231\":1}}],[\"lambda表达式以及被包装器包装后的可调用对象\",{\"1\":{\"231\":1}}],[\"language\",{\"1\":{\"170\":4,\"172\":1,\"185\":1}}],[\"labelopts\",{\"1\":{\"108\":1,\"109\":3,\"111\":1,\"112\":5,\"119\":1,\"120\":1}}],[\"label\",{\"1\":{\"108\":1,\"109\":1,\"111\":1,\"112\":3,\"119\":1,\"120\":1}}],[\"lastindex\",{\"1\":{\"299\":1}}],[\"last\",{\"1\":{\"90\":2,\"91\":1,\"97\":2,\"98\":1}}],[\"later稍后重启系统\",{\"1\":{\"75\":1}}],[\"latex\",{\"1\":{\"52\":1}}],[\"literals\",{\"0\":{\"292\":1}}],[\"like\",{\"1\":{\"192\":1,\"219\":1}}],[\"limit\",{\"1\":{\"190\":2,\"196\":3}}],[\"light\",{\"1\":{\"126\":1}}],[\"lightskyblue\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"line\",{\"1\":{\"108\":2,\"110\":1,\"112\":4,\"120\":1}}],[\"linux系统平台中安装和使用\",{\"1\":{\"132\":1}}],[\"linux\",{\"0\":{\"339\":1},\"1\":{\"3\":1,\"144\":2},\"2\":{\"163\":1}}],[\"li\",{\"1\":{\"97\":1}}],[\"list<t>\",{\"1\":{\"332\":1}}],[\"listnode时就会调用weak\",{\"1\":{\"234\":1}}],[\"listnode\",{\"1\":{\"231\":6,\"233\":10,\"234\":3}}],[\"list\",{\"1\":{\"97\":1,\"98\":1,\"106\":2,\"108\":1,\"111\":1,\"112\":4,\"119\":1,\"120\":3,\"196\":3,\"331\":3,\"332\":6}}],[\"listen\",{\"1\":{\"90\":2,\"91\":2,\"97\":2,\"98\":2}}],[\"library\",{\"1\":{\"135\":2,\"270\":1}}],[\"lib\",{\"1\":{\"28\":1,\"139\":1}}],[\"license\",{\"1\":{\"28\":1}}],[\"kvector\",{\"1\":{\"332\":11}}],[\"kallocator\",{\"0\":{\"331\":1},\"1\":{\"331\":1,\"332\":1}}],[\"katex\",{\"1\":{\"28\":2}}],[\"kstring\",{\"0\":{\"328\":1},\"1\":{\"328\":21}}],[\"ksh\",{\"1\":{\"144\":1}}],[\"kb\",{\"1\":{\"313\":1}}],[\"key\",{\"1\":{\"180\":2,\"198\":5,\"219\":7}}],[\"keywordtype\",{\"1\":{\"100\":1}}],[\"keywordtype=\",{\"1\":{\"100\":1,\"101\":1}}],[\"keyword=java\",{\"1\":{\"100\":1,\"101\":1}}],[\"keyword=keyword\",{\"1\":{\"80\":2,\"91\":1,\"98\":1}}],[\"keyword\",{\"1\":{\"80\":6,\"82\":7,\"89\":1,\"91\":9,\"96\":1,\"98\":9,\"100\":1,\"106\":6,\"112\":6,\"120\":6,\"123\":3,\"126\":5}}],[\"keywords\",{\"1\":{\"80\":2,\"82\":2,\"126\":2}}],[\"kw=招聘岗位\",{\"1\":{\"93\":1}}],[\"kw=python\",{\"1\":{\"93\":1,\"98\":1}}],[\"k\",{\"1\":{\"81\":3,\"82\":2,\"144\":1}}],[\"kotlin\",{\"1\":{\"28\":1}}],[\"w占位符用来生成一个可以包裹error的wrapping\",{\"1\":{\"255\":1}}],[\"wrap了一个错误\",{\"1\":{\"255\":1}}],[\"wronly|os\",{\"1\":{\"253\":1}}],[\"writeheader\",{\"1\":{\"82\":1,\"91\":1,\"98\":1}}],[\"writer借口都支持写入\",{\"1\":{\"253\":1}}],[\"writer接口类中\",{\"1\":{\"253\":1}}],[\"writerow\",{\"1\":{\"82\":1,\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"writer\",{\"1\":{\"82\":3,\"90\":1,\"91\":3,\"97\":1,\"98\":3,\"248\":1,\"253\":3}}],[\"when\",{\"1\":{\"286\":1}}],[\"where\",{\"1\":{\"187\":2,\"188\":1,\"190\":2,\"192\":1,\"194\":6,\"195\":1,\"203\":1,\"205\":1,\"208\":2}}],[\"what\",{\"1\":{\"224\":3}}],[\"whl\",{\"1\":{\"140\":1}}],[\"w64\",{\"1\":{\"135\":1}}],[\"with\",{\"1\":{\"254\":1,\"257\":1,\"258\":1,\"262\":1,\"264\":1,\"267\":1,\"268\":1,\"269\":1}}],[\"windows\",{\"1\":{\"133\":1}}],[\"width=1\",{\"1\":{\"117\":1,\"120\":1}}],[\"width=\",{\"1\":{\"111\":2,\"112\":2,\"119\":2,\"120\":2,\"125\":1,\"126\":2,\"325\":1}}],[\"wikis\",{\"1\":{\"46\":1}}],[\"weak\",{\"0\":{\"232\":1,\"234\":1},\"1\":{\"234\":10},\"2\":{\"235\":1}}],[\"we\",{\"1\":{\"100\":1,\"101\":1}}],[\"welfarelist\",{\"1\":{\"90\":1,\"91\":1}}],[\"web\",{\"1\":{\"87\":1,\"91\":1}}],[\"web前端\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"webpack\",{\"1\":{\"28\":1}}],[\"www\",{\"1\":{\"87\":1,\"89\":1,\"91\":2,\"93\":1,\"98\":1,\"325\":1}}],[\"w\",{\"1\":{\"81\":3,\"82\":3,\"91\":1,\"98\":1,\"253\":3,\"255\":3}}],[\"wait\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"wapi\",{\"1\":{\"89\":1,\"91\":1}}],[\"want\",{\"1\":{\"75\":1}}],[\"wa\",{\"1\":{\"62\":1}}],[\"waline\",{\"1\":{\"28\":1}}],[\"world\",{\"1\":{\"144\":5,\"146\":1}}],[\"word\",{\"1\":{\"124\":1,\"126\":1}}],[\"words\",{\"1\":{\"123\":1,\"124\":1,\"126\":2}}],[\"words=\",{\"1\":{\"123\":1,\"126\":1}}],[\"wordcloud\",{\"1\":{\"28\":1,\"124\":1,\"126\":2}}],[\"work=y\",{\"1\":{\"111\":1,\"112\":1}}],[\"work\",{\"1\":{\"106\":7,\"107\":3,\"108\":1,\"109\":2,\"111\":2,\"112\":17,\"116\":4,\"117\":3,\"118\":3,\"119\":4,\"120\":21}}],[\"workingexp\",{\"1\":{\"97\":1,\"98\":1}}],[\"workcity\",{\"1\":{\"97\":1,\"98\":1}}],[\"workflows\",{\"1\":{\"31\":1}}],[\"href=\",{\"1\":{\"325\":1}}],[\"hassuffix\",{\"1\":{\"299\":1}}],[\"hasprefix\",{\"1\":{\"299\":1}}],[\"hash\",{\"1\":{\"219\":1}}],[\"hasattr\",{\"1\":{\"91\":1,\"98\":1}}],[\"having\",{\"1\":{\"190\":1,\"194\":5}}],[\"h数据库服务器的ip地址\",{\"1\":{\"167\":1}}],[\"hh\",{\"1\":{\"154\":4,\"181\":3}}],[\"hello沙河\",{\"1\":{\"300\":1}}],[\"hello\",{\"1\":{\"144\":5,\"146\":1,\"154\":5,\"250\":1,\"296\":1}}],[\"helper\",{\"1\":{\"28\":1}}],[\"height=\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"126\":1,\"325\":1}}],[\"high的上限边界是切片的容量cap\",{\"1\":{\"277\":1}}],[\"high\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1,\"277\":4,\"278\":3}}],[\"h\",{\"1\":{\"54\":2,\"167\":1,\"300\":2}}],[\"html\",{\"0\":{\"105\":1,\"114\":1,\"122\":1,\"346\":1},\"1\":{\"52\":2,\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1,\"325\":3},\"2\":{\"326\":1}}],[\"https\",{\"1\":{\"31\":2,\"32\":1,\"54\":1,\"87\":1,\"89\":1,\"91\":2,\"93\":1,\"96\":1,\"97\":1,\"98\":2,\"100\":2,\"101\":1,\"136\":11,\"140\":1,\"325\":1}}],[\"hope\",{\"1\":{\"20\":1,\"26\":1,\"27\":3,\"28\":4},\"2\":{\"29\":1}}],[\"home\",{\"1\":{\"1\":1,\"39\":4,\"144\":1}}],[\"是把a的各二进位全部右移b位\",{\"1\":{\"322\":1}}],[\"是把a的各二进位全部左移b位\",{\"1\":{\"322\":1}}],[\"是为了兼容c语言中的case设计的\",{\"1\":{\"317\":1}}],[\"是什么格式\",{\"1\":{\"257\":1}}],[\"是不是季度我的容颜\",{\"1\":{\"251\":1}}],[\"是不是在多的一方添加外键\",{\"1\":{\"199\":1}}],[\"是go语言中的标准库主要是用来\",{\"1\":{\"248\":1}}],[\"是一种利用对象生命周期来控制程序资源\",{\"1\":{\"225\":1}}],[\"是一个拥有相同类型元素的可变长度的序列\",{\"1\":{\"273\":1}}],[\"是一个不可分割的工作单元\",{\"1\":{\"216\":1}}],[\"是一个开源的机器学习库\",{\"1\":{\"137\":1}}],[\"是一个开源的\",{\"1\":{\"131\":1}}],[\"是一个生成数据的脚本\",{\"1\":{\"58\":1}}],[\"是一个支持多人协作的出题平台\",{\"1\":{\"49\":1}}],[\"是一个互联工作空间\",{\"1\":{\"46\":1}}],[\"是一个基于\",{\"1\":{\"35\":1}}],[\"是一个参数\",{\"1\":{\"27\":1}}],[\"是按照从大到小\",{\"1\":{\"219\":1}}],[\"是帮助数据库高效获取数据的数据结构\",{\"1\":{\"218\":1}}],[\"是分组之后对结果进行过滤\",{\"1\":{\"194\":1}}],[\"是分组之前进行过滤\",{\"1\":{\"194\":1}}],[\"是null\",{\"1\":{\"192\":1}}],[\"是变长字符串\",{\"1\":{\"181\":1}}],[\"是定长字符串\",{\"1\":{\"181\":1}}],[\"是文件名\",{\"1\":{\"156\":1}}],[\"是第二个参数\",{\"1\":{\"156\":1}}],[\"是第一个参数\",{\"1\":{\"156\":1}}],[\"是我们通过命令行与操作系统沟通的语言\",{\"1\":{\"144\":1}}],[\"是\",{\"1\":{\"130\":1}}],[\"是学习者比较容易上手的一门语言\",{\"1\":{\"70\":1}}],[\"是测试所有\",{\"1\":{\"62\":1}}],[\"是通过\",{\"1\":{\"54\":1}}],[\"是用来存放\",{\"1\":{\"53\":1}}],[\"是否有可用块\",{\"1\":{\"332\":1}}],[\"是否存在默认值等信息\",{\"1\":{\"182\":1}}],[\"是否可以为null\",{\"1\":{\"182\":1}}],[\"是否正确返回了评测结果\",{\"1\":{\"54\":1}}],[\"是否为交互题\",{\"1\":{\"51\":1}}],[\"是否需要一个自动部署文档到\",{\"1\":{\"27\":1}}],[\"是你对应文件夹的绝对路径\",{\"1\":{\"40\":1}}],[\"你好\",{\"1\":{\"296\":1}}],[\"你的用户名\",{\"1\":{\"136\":1}}],[\"你的网站将会被发布到\",{\"1\":{\"32\":1}}],[\"你在搜索公司名称时\",{\"1\":{\"94\":1}}],[\"你需要下载并安装最新的长期维护版\",{\"1\":{\"35\":1}}],[\"你想要创建什么类型的项目\",{\"1\":{\"27\":1}}],[\"你可以更改此参数来使用一个新文件夹名称\",{\"1\":{\"27\":1}}],[\"你应该在页面\",{\"1\":{\"1\":1}}],[\"n5\",{\"1\":{\"313\":1}}],[\"n4\",{\"1\":{\"312\":1,\"313\":2}}],[\"n3的值都是100\",{\"1\":{\"311\":1}}],[\"n3\",{\"1\":{\"311\":1,\"312\":1,\"313\":1}}],[\"n2\",{\"1\":{\"311\":2,\"312\":1,\"313\":2}}],[\"n1\",{\"1\":{\"311\":1,\"312\":1,\"313\":2}}],[\"nil来判断\",{\"1\":{\"281\":1,\"282\":1}}],[\"nil\",{\"1\":{\"253\":1,\"274\":3,\"305\":1}}],[\"n\",{\"1\":{\"140\":1,\"219\":2,\"230\":5,\"241\":2,\"242\":1,\"247\":2,\"251\":2,\"252\":1,\"253\":3,\"257\":6,\"258\":2,\"259\":13,\"260\":6,\"261\":4,\"262\":1,\"264\":11,\"265\":7,\"267\":1,\"268\":2,\"269\":1,\"270\":2,\"271\":3,\"272\":2,\"277\":3,\"278\":1,\"285\":1,\"292\":5,\"293\":2,\"297\":1,\"310\":2,\"317\":7,\"332\":1}}],[\"nvidia\",{\"1\":{\"138\":1,\"139\":3}}],[\"nullptr\",{\"1\":{\"226\":8,\"229\":4,\"230\":4,\"231\":3,\"234\":1}}],[\"null\",{\"1\":{\"111\":2,\"112\":2,\"119\":2,\"120\":2,\"125\":2,\"126\":2,\"180\":1,\"188\":1,\"192\":1,\"193\":1}}],[\"numslice\",{\"1\":{\"285\":7}}],[\"numarray\",{\"1\":{\"240\":2,\"241\":5}}],[\"num\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1,\"106\":1,\"108\":1,\"112\":2,\"183\":2}}],[\"number=0\",{\"1\":{\"82\":1}}],[\"number\",{\"0\":{\"292\":1},\"1\":{\"82\":9,\"106\":3,\"112\":3,\"120\":3}}],[\"number2\",{\"1\":{\"81\":5,\"82\":5}}],[\"number1\",{\"1\":{\"81\":5,\"82\":5}}],[\"next成员\",{\"1\":{\"233\":1}}],[\"next\",{\"1\":{\"90\":3,\"91\":3,\"97\":3,\"98\":3,\"138\":1,\"231\":1,\"233\":4,\"234\":2}}],[\"net\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"newsize\",{\"1\":{\"332\":1}}],[\"newcap=old\",{\"1\":{\"286\":1}}],[\"newcap=doublecap\",{\"1\":{\"286\":1}}],[\"newcap\",{\"1\":{\"286\":21}}],[\"newreader\",{\"0\":{\"270\":1},\"1\":{\"270\":1,\"272\":1}}],[\"newline=\",{\"1\":{\"82\":1,\"91\":1,\"98\":1}}],[\"new\",{\"1\":{\"50\":1,\"224\":3,\"225\":3,\"226\":4,\"228\":3,\"229\":1,\"230\":3,\"231\":5,\"233\":4,\"234\":2,\"255\":1,\"305\":1,\"332\":1}}],[\"npx\",{\"1\":{\"28\":1}}],[\"npm\",{\"1\":{\"27\":2,\"28\":2,\"31\":1,\"39\":2,\"40\":2}}],[\"name3=yxc\",{\"1\":{\"149\":1}}],[\"name2=\",{\"1\":{\"149\":1}}],[\"name1=\",{\"1\":{\"149\":1}}],[\"name=abc\",{\"1\":{\"151\":1}}],[\"name=yxc\",{\"1\":{\"150\":1,\"151\":1,\"152\":1,\"153\":2,\"154\":1}}],[\"name=\",{\"1\":{\"107\":1,\"109\":1,\"112\":2,\"116\":1,\"117\":1,\"120\":2,\"154\":2,\"187\":1}}],[\"name\",{\"1\":{\"28\":1,\"50\":1,\"82\":2,\"89\":1,\"91\":4,\"96\":2,\"97\":2,\"98\":7,\"101\":2,\"106\":1,\"112\":2,\"120\":2,\"150\":2,\"151\":2,\"152\":1,\"153\":3,\"154\":2,\"187\":1,\"253\":2,\"257\":5,\"267\":5,\"268\":5,\"269\":5,\"272\":4,\"274\":2,\"306\":1,\"308\":2,\"309\":1}}],[\"namespace\",{\"1\":{\"17\":1,\"226\":2,\"229\":1,\"230\":1,\"231\":1,\"234\":1}}],[\"noexcept\",{\"1\":{\"328\":2,\"332\":2}}],[\"noargsconstructor\",{\"1\":{\"196\":1}}],[\"none\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2}}],[\"now\",{\"1\":{\"72\":1}}],[\"node2当中的\",{\"1\":{\"233\":1}}],[\"node2\",{\"1\":{\"233\":7,\"234\":5}}],[\"node1和node2的生命周期也就结束了\",{\"1\":{\"233\":1}}],[\"node1\",{\"1\":{\"233\":7,\"234\":5}}],[\"nodejs\",{\"1\":{\"39\":1}}],[\"node\",{\"0\":{\"35\":1},\"1\":{\"35\":1,\"39\":7,\"40\":2,\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1},\"2\":{\"41\":1}}],[\"notebook\",{\"1\":{\"104\":5},\"2\":{\"77\":1,\"128\":1}}],[\"notion\",{\"0\":{\"46\":1},\"1\":{\"44\":1,\"46\":1},\"2\":{\"47\":1}}],[\"not\",{\"1\":{\"28\":1,\"81\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"174\":3,\"180\":1,\"192\":1,\"210\":1,\"211\":1,\"321\":1,\"335\":1}}],[\"no\",{\"1\":{\"27\":1}}],[\"指向数组的指针\",{\"1\":{\"278\":1}}],[\"指向数组或切片的指针构造子字符串或切片\",{\"1\":{\"276\":1}}],[\"指针变量的默认为nil\",{\"1\":{\"308\":1}}],[\"指针去掉前面的0x\",{\"1\":{\"265\":1}}],[\"指针域\",{\"1\":{\"219\":1}}],[\"指针\",{\"0\":{\"262\":1},\"1\":{\"219\":1}}],[\"指明\",{\"1\":{\"144\":1}}],[\"指的是你将要放置你的项目所在的文件路径\",{\"1\":{\"27\":1}}],[\"指定列下相同的数据归为一类\",{\"1\":{\"194\":1}}],[\"指定的字段顺序需要与值的顺序是一一对应的\",{\"1\":{\"186\":1}}],[\"指定的长度为最大占用长度\",{\"1\":{\"181\":1}}],[\"指定字段\",{\"1\":{\"186\":1}}],[\"指定长度多长\",{\"1\":{\"181\":1}}],[\"指定初始值初始化\",{\"1\":{\"17\":1}}],[\"指定大小和初始值初始化\",{\"1\":{\"17\":1}}],[\"指定大小初始化\",{\"1\":{\"17\":1}}],[\"d>\",{\"1\":{\"231\":1}}],[\"durability\",{\"1\":{\"216\":2}}],[\"duplicates\",{\"1\":{\"80\":1}}],[\"db01\",{\"1\":{\"176\":1}}],[\"dql\",{\"0\":{\"189\":1},\"1\":{\"170\":2,\"190\":1,\"191\":1}}],[\"dml英文全称是\",{\"1\":{\"185\":1}}],[\"dml\",{\"0\":{\"185\":1},\"1\":{\"170\":2}}],[\"datetime\",{\"1\":{\"181\":1}}],[\"date\",{\"1\":{\"181\":1}}],[\"database\",{\"1\":{\"173\":2,\"174\":3,\"176\":3}}],[\"databases\",{\"1\":{\"173\":1}}],[\"data=bar\",{\"1\":{\"109\":1,\"112\":1}}],[\"data=\",{\"1\":{\"108\":1,\"112\":1}}],[\"data\",{\"1\":{\"82\":3,\"89\":3,\"90\":4,\"91\":7,\"96\":4,\"97\":5,\"98\":9,\"101\":6,\"106\":6,\"107\":12,\"109\":6,\"112\":23,\"116\":5,\"117\":5,\"120\":15,\"170\":4,\"172\":1,\"185\":1,\"196\":1,\"328\":1,\"332\":1}}],[\"dataframe\",{\"1\":{\"80\":1}}],[\"dark\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"dcl\",{\"1\":{\"170\":2}}],[\"dc\",{\"1\":{\"101\":3}}],[\"ddl\",{\"0\":{\"171\":1},\"1\":{\"170\":2,\"172\":2}}],[\"ddd\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"dd\",{\"1\":{\"100\":2,\"181\":3}}],[\"drissionpage\",{\"1\":{\"82\":1,\"91\":1,\"98\":1,\"101\":1},\"2\":{\"102\":1}}],[\"drop\",{\"1\":{\"80\":1,\"176\":2,\"183\":1,\"184\":1,\"220\":1}}],[\"distinct\",{\"1\":{\"191\":1}}],[\"disabled\",{\"1\":{\"90\":1}}],[\"disable\",{\"1\":{\"90\":1,\"91\":1,\"97\":2,\"98\":1}}],[\"dimension=0\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"div\",{\"1\":{\"101\":5,\"224\":6}}],[\"divs\",{\"1\":{\"101\":2}}],[\"dit\",{\"1\":{\"89\":2,\"91\":2,\"96\":4,\"98\":4,\"101\":2}}],[\"dictwriter\",{\"1\":{\"82\":1,\"91\":1,\"98\":1}}],[\"dict\",{\"1\":{\"81\":1,\"82\":3}}],[\"dirs\",{\"1\":{\"136\":2}}],[\"dir\",{\"1\":{\"27\":3,\"40\":3}}],[\"d+\",{\"1\":{\"81\":4,\"82\":4}}],[\"df\",{\"1\":{\"80\":4,\"82\":2,\"106\":2,\"112\":2,\"120\":2,\"123\":2,\"126\":2}}],[\"df2\",{\"1\":{\"80\":2}}],[\"df1\",{\"1\":{\"80\":2}}],[\"d\",{\"1\":{\"76\":1,\"107\":3,\"112\":3,\"116\":3,\"117\":3,\"120\":6,\"135\":4,\"136\":2,\"231\":4,\"259\":2,\"267\":1,\"268\":1,\"274\":2,\"285\":2,\"292\":1,\"307\":1,\"313\":1}}],[\"deallocate\",{\"1\":{\"332\":1}}],[\"destslice\",{\"1\":{\"287\":2}}],[\"desc\",{\"1\":{\"182\":1,\"195\":1}}],[\"description\",{\"1\":{\"28\":1}}],[\"detect\",{\"1\":{\"286\":1}}],[\"dept\",{\"1\":{\"203\":4}}],[\"deploy\",{\"1\":{\"31\":1}}],[\"decltype\",{\"1\":{\"231\":1}}],[\"declare\",{\"1\":{\"151\":2,\"153\":2}}],[\"decimal\",{\"1\":{\"181\":1}}],[\"delarr<listnode>>\",{\"1\":{\"231\":1}}],[\"delarr<listnode>\",{\"1\":{\"231\":2}}],[\"delarr\",{\"1\":{\"231\":2}}],[\"delete<t>>\",{\"1\":{\"231\":1}}],[\"delete\",{\"0\":{\"188\":1},\"1\":{\"185\":1,\"188\":4,\"208\":1,\"218\":1,\"224\":5,\"226\":7,\"229\":6,\"230\":4,\"231\":9,\"233\":2,\"305\":1}}],[\"del\",{\"1\":{\"91\":1,\"98\":1,\"231\":7}}],[\"deduplicate\",{\"1\":{\"80\":2}}],[\"defer\",{\"1\":{\"305\":1}}],[\"default\",{\"1\":{\"180\":1,\"305\":1,\"317\":4}}],[\"defaults\",{\"1\":{\"136\":1}}],[\"definition\",{\"1\":{\"170\":1,\"172\":1}}],[\"def\",{\"1\":{\"80\":1,\"81\":3,\"82\":3,\"89\":2,\"90\":1,\"91\":5,\"96\":2,\"97\":1,\"98\":5,\"112\":1,\"116\":1,\"117\":1,\"118\":1,\"120\":3,\"159\":2,\"160\":1,\"161\":1,\"162\":1}}],[\"developer\",{\"1\":{\"138\":1,\"139\":1}}],[\"developers\",{\"1\":{\"73\":1}}],[\"devdependencies\",{\"1\":{\"28\":1}}],[\"dev\",{\"1\":{\"28\":5}}],[\"download\",{\"1\":{\"73\":1,\"140\":1}}],[\"docs\",{\"1\":{\"27\":4,\"28\":5,\"31\":2}}],[\"docker\",{\"0\":{\"10\":1}}],[\"docker等等\",{\"1\":{\"3\":1}}],[\"doublecap\",{\"1\":{\"286\":3}}],[\"double\",{\"1\":{\"17\":2,\"181\":1}}],[\"盘锦\",{\"1\":{\"81\":1,\"82\":1}}],[\"盘\",{\"1\":{\"27\":1}}],[\"执行分支1\",{\"1\":{\"315\":1}}],[\"执行上述代码时\",{\"1\":{\"224\":1}}],[\"执行sql语句\",{\"1\":{\"215\":2}}],[\"执行时机不同\",{\"1\":{\"194\":1}}],[\"执行顺序\",{\"1\":{\"194\":1}}],[\"执行将会报错\",{\"1\":{\"184\":1}}],[\"执行过程中出现\",{\"1\":{\"28\":1}}],[\"执行以下命令之一\",{\"1\":{\"31\":1}}],[\"执行以下命令\",{\"1\":{\"27\":1,\"28\":1}}],[\"执行\",{\"1\":{\"27\":2}}],[\"窗口执行以下指令\",{\"1\":{\"40\":1}}],[\"窗口\",{\"1\":{\"27\":1}}],[\"用c++98的方式将拷贝构造函数和拷贝赋值函数声明为私有\",{\"1\":{\"226\":1}}],[\"用传入对象管理的资源来构造当前对象\",{\"1\":{\"226\":1}}],[\"用户的id\",{\"1\":{\"199\":1}}],[\"用户表\",{\"1\":{\"199\":1}}],[\"用户名\",{\"1\":{\"181\":1}}],[\"用于优化内存管理\",{\"1\":{\"328\":1}}],[\"用于存放一个指针\",{\"1\":{\"291\":1}}],[\"用于获取其管理的资源\",{\"1\":{\"234\":1}}],[\"用于获取当前对象管理的资源对应的引用计数\",{\"1\":{\"228\":1}}],[\"用于索引数据\",{\"1\":{\"219\":1}}],[\"用于限制存储在表中的数据\",{\"1\":{\"180\":1}}],[\"用于在\",{\"1\":{\"17\":1}}],[\"用法\",{\"1\":{\"173\":1}}],[\"用解释器执行\",{\"1\":{\"144\":1}}],[\"用记事本打开\",{\"1\":{\"136\":1}}],[\"用到的包drissionpage\",{\"1\":{\"88\":1,\"95\":1}}],[\"用作学习也够用\",{\"1\":{\"73\":1}}],[\"用来对数据库中表的数据记录进行增\",{\"1\":{\"185\":1}}],[\"用来对数据库表中的数据进行增删改\",{\"1\":{\"170\":1}}],[\"用来创建数据库用户\",{\"1\":{\"170\":1}}],[\"用来查询数据库中表的记录\",{\"1\":{\"170\":1}}],[\"用来定义数据库对象\",{\"1\":{\"170\":1,\"172\":1}}],[\"用来提\",{\"1\":{\"61\":1}}],[\"用来测试\",{\"1\":{\"56\":1}}],[\"用来检测数据合法性\",{\"1\":{\"56\":1}}],[\"用管理员模式在项目根目录\",{\"1\":{\"28\":1}}],[\"用管理员模式打开\",{\"1\":{\"27\":1,\"40\":1}}],[\"gb\",{\"1\":{\"313\":1}}],[\"gotodemo2\",{\"1\":{\"317\":1}}],[\"gotodemo1\",{\"1\":{\"317\":1}}],[\"goto语句可以在快速跳出循环\",{\"1\":{\"317\":1}}],[\"goto语句通过标签进行代码间的无条件跳转\",{\"1\":{\"317\":1}}],[\"goto\",{\"1\":{\"305\":1,\"317\":2}}],[\"go源码\",{\"1\":{\"286\":1}}],[\"go1\",{\"1\":{\"255\":1,\"292\":1,\"317\":1}}],[\"go\",{\"1\":{\"248\":1,\"289\":1,\"295\":1,\"296\":1,\"297\":2,\"300\":2,\"305\":1,\"316\":1,\"318\":1}}],[\"go语言规定每个switch只能有一个default分支\",{\"1\":{\"317\":1}}],[\"go语言规定与if匹配的左括号\",{\"1\":{\"315\":1}}],[\"go语言在声明变量的时候\",{\"1\":{\"308\":1}}],[\"go语言支持两种浮点型数\",{\"1\":{\"293\":1}}],[\"go语言中使用goto语句能简化一些代码的实现过程\",{\"1\":{\"317\":1}}],[\"go语言中可以使用for\",{\"1\":{\"317\":1}}],[\"go语言中if条件判断的格式如下\",{\"1\":{\"315\":1}}],[\"go语言中只有强制类型转换\",{\"1\":{\"302\":1}}],[\"go语言中要定义一个多行字符串时\",{\"1\":{\"298\":1}}],[\"go语言中的字符串以原生数据类型出现\",{\"1\":{\"296\":1}}],[\"go语言中以bool类型进行声明布尔型数据\",{\"1\":{\"295\":1}}],[\"go语言中有丰富的数据类型\",{\"1\":{\"289\":1}}],[\"go语言中并没有删除切片元素的专用方法\",{\"1\":{\"288\":1}}],[\"go语言中终端输入输出以及格式化输出常用的函数\",{\"1\":{\"248\":1}}],[\"go语言内建的copy\",{\"1\":{\"287\":1}}],[\"go语言的内建函数append\",{\"1\":{\"285\":1}}],[\"go语言的fmt包下有fmt\",{\"1\":{\"266\":1}}],[\"go语言fmt包\",{\"0\":{\"248\":1}}],[\"go语言是支持多维数组的\",{\"1\":{\"244\":1}}],[\"golang\",{\"0\":{\"345\":1},\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"gpu\",{\"1\":{\"139\":2}}],[\"g\",{\"1\":{\"111\":2,\"112\":2,\"260\":4}}],[\"gallery\",{\"1\":{\"104\":1}}],[\"gridopts\",{\"1\":{\"110\":3,\"112\":3,\"118\":2,\"120\":2}}],[\"grid\",{\"1\":{\"110\":5,\"112\":7,\"118\":6,\"119\":1,\"120\":8}}],[\"group\",{\"1\":{\"81\":2,\"82\":2,\"190\":2,\"194\":1,\"195\":1}}],[\"grader\",{\"1\":{\"53\":1}}],[\"geek\",{\"1\":{\"87\":1,\"91\":1}}],[\"general\",{\"1\":{\"55\":1}}],[\"generator\",{\"1\":{\"49\":1,\"53\":2,\"54\":1}}],[\"getcapacity\",{\"1\":{\"332\":1}}],[\"getsize\",{\"1\":{\"332\":1}}],[\"getsalary\",{\"1\":{\"81\":1,\"82\":2}}],[\"getprovince\",{\"1\":{\"81\":1,\"82\":2}}],[\"getunit\",{\"1\":{\"81\":3,\"82\":3}}],[\"get\",{\"1\":{\"89\":4,\"90\":2,\"91\":6,\"96\":4,\"97\":2,\"98\":6,\"101\":1,\"111\":1,\"112\":2,\"116\":1,\"117\":1,\"118\":3,\"119\":1,\"120\":6,\"234\":2,\"328\":1},\"2\":{\"24\":1}}],[\"globle\",{\"1\":{\"39\":1}}],[\"globals\",{\"1\":{\"112\":1,\"120\":1}}],[\"global的路径\",{\"1\":{\"39\":1}}],[\"global\",{\"1\":{\"31\":1,\"39\":1,\"40\":1,\"107\":1,\"108\":1,\"109\":1,\"112\":3,\"116\":1,\"117\":1,\"120\":2,\"124\":1,\"126\":1,\"219\":1}}],[\"gh\",{\"1\":{\"32\":2}}],[\"github\",{\"0\":{\"31\":1,\"32\":1},\"1\":{\"27\":1,\"31\":4,\"32\":3,\"54\":1,\"97\":1},\"2\":{\"33\":1}}],[\"git\",{\"0\":{\"9\":1},\"1\":{\"3\":1,\"31\":10}}],[\"项目开发中\",{\"1\":{\"197\":1}}],[\"项目需要用到多语言么\",{\"1\":{\"27\":1}}],[\"项目的文件夹名称\",{\"1\":{\"27\":1}}],[\"项目初始化\",{\"0\":{\"27\":1}}],[\"项目配置\",{\"0\":{\"23\":1}}],[\"项目部署\",{\"0\":{\"30\":1},\"1\":{\"21\":1}}],[\"项目\",{\"1\":{\"20\":1,\"23\":1,\"26\":1,\"30\":1,\"66\":1}}],[\"提高分配效率\",{\"1\":{\"331\":1}}],[\"提高数据查询的效率\",{\"1\":{\"218\":1}}],[\"提高性能\",{\"1\":{\"16\":1}}],[\"提交事务\",{\"1\":{\"215\":2}}],[\"提交信息\",{\"1\":{\"31\":1}}],[\"提取从0开始的5个字符\",{\"1\":{\"154\":1}}],[\"提取子串\",{\"1\":{\"154\":1}}],[\"提取相关数据内容\",{\"1\":{\"101\":1}}],[\"提取标签\",{\"1\":{\"101\":1}}],[\"提取具体的数据内容\",{\"1\":{\"101\":1}}],[\"提示\",{\"1\":{\"89\":1,\"90\":1,\"97\":1}}],[\"提供\",{\"1\":{\"332\":1}}],[\"提供插入\",{\"1\":{\"332\":1}}],[\"提供类似\",{\"1\":{\"332\":1}}],[\"提供一个无参的构造函数\",{\"1\":{\"234\":1}}],[\"提供了一个关键字\",{\"1\":{\"180\":1}}],[\"提供了一些内置的\",{\"1\":{\"54\":1}}],[\"提供了以下5种约束\",{\"1\":{\"180\":1}}],[\"提供了灵活的张量\",{\"1\":{\"137\":1}}],[\"提供的教程\",{\"1\":{\"57\":1}}],[\"提前分配内存\",{\"1\":{\"17\":1}}],[\"不应该使用s\",{\"1\":{\"282\":1}}],[\"不支持直接比较\",{\"1\":{\"274\":1}}],[\"不支持多维数组的内层使用\",{\"1\":{\"246\":1}}],[\"不带换行符\",{\"1\":{\"253\":1}}],[\"不带任何的查询条件\",{\"1\":{\"191\":1}}],[\"不带任何条件\",{\"1\":{\"190\":1}}],[\"不可以这样做\",{\"1\":{\"238\":1}}],[\"不可嵌套\",{\"1\":{\"157\":1}}],[\"不在指定的集合范围之内\",{\"1\":{\"210\":1}}],[\"不适用与分布式\",{\"1\":{\"198\":1}}],[\"不同的数据库有不同的实现\",{\"1\":{\"196\":1}}],[\"不参与分组\",{\"1\":{\"194\":1}}],[\"不满足\",{\"1\":{\"194\":1}}],[\"不是树结构最下面的节点\",{\"1\":{\"219\":1}}],[\"不是\",{\"1\":{\"192\":1}}],[\"不是最终的题目名\",{\"1\":{\"50\":1}}],[\"不等于\",{\"1\":{\"192\":1}}],[\"不超过255个字符的二进制数据\",{\"1\":{\"181\":1}}],[\"不重复的\",{\"1\":{\"180\":1}}],[\"不用引号\",{\"1\":{\"154\":1}}],[\"不需要加\",{\"1\":{\"149\":1}}],[\"不需要管\",{\"1\":{\"28\":1}}],[\"不要使用int和\",{\"1\":{\"291\":1}}],[\"不要死记硬背\",{\"1\":{\"144\":1}}],[\"不要在循环内修改容器\",{\"1\":{\"17\":1}}],[\"不建议修改路径\",{\"1\":{\"138\":1}}],[\"不建议安装在c盘\",{\"1\":{\"37\":1}}],[\"不推荐\",{\"0\":{\"132\":1}}],[\"不会分配内存\",{\"1\":{\"311\":1}}],[\"不会改变本身的值\",{\"1\":{\"247\":1}}],[\"不会取变量\",{\"1\":{\"154\":1}}],[\"不会执行\",{\"1\":{\"154\":1}}],[\"不会被引用\",{\"1\":{\"91\":1,\"98\":1}}],[\"不会复制元素\",{\"1\":{\"17\":1}}],[\"不能假定它是32位或64位的整型\",{\"1\":{\"291\":1}}],[\"不能嫉妒我容颜\",{\"1\":{\"252\":1}}],[\"不能对聚合函数进行判断\",{\"1\":{\"194\":1}}],[\"不能创建两个名称相同的数据库\",{\"1\":{\"174\":1}}],[\"不能自行指定安装的路径\",{\"1\":{\"72\":1}}],[\"不能使用\",{\"1\":{\"52\":1}}],[\"不断增长时\",{\"1\":{\"17\":1}}],[\"v2\",{\"1\":{\"246\":2}}],[\"v1\",{\"1\":{\"246\":2}}],[\"v12\",{\"1\":{\"139\":2}}],[\"void\",{\"1\":{\"224\":3,\"230\":3,\"231\":4,\"328\":2,\"332\":7}}],[\"variable\",{\"1\":{\"311\":1}}],[\"var\",{\"1\":{\"237\":1,\"238\":4,\"240\":3,\"241\":3,\"243\":1,\"257\":2,\"267\":1,\"268\":1,\"269\":1,\"272\":1,\"274\":5,\"282\":1,\"285\":5,\"292\":3,\"294\":2,\"300\":2,\"302\":2,\"305\":1,\"306\":4,\"307\":1,\"308\":4,\"309\":2,\"310\":1,\"311\":1,\"317\":1}}],[\"varchar\",{\"1\":{\"181\":4,\"183\":4}}],[\"val\",{\"1\":{\"231\":1,\"233\":2,\"234\":1}}],[\"validate\",{\"1\":{\"60\":1}}],[\"validator\",{\"1\":{\"49\":1,\"52\":1,\"53\":1,\"54\":1,\"56\":4,\"60\":1,\"62\":2}}],[\"values\",{\"1\":{\"106\":1,\"112\":1,\"120\":1,\"186\":4}}],[\"value\",{\"1\":{\"17\":1,\"106\":1,\"107\":4,\"109\":1,\"112\":6,\"116\":1,\"117\":1,\"120\":3,\"243\":2,\"284\":2,\"332\":3}}],[\"v\",{\"1\":{\"39\":2,\"257\":8,\"267\":2,\"268\":3,\"269\":3,\"270\":1,\"272\":1,\"277\":9,\"278\":3,\"285\":1,\"292\":5,\"300\":2,\"317\":8}}],[\"v8\",{\"1\":{\"35\":1}}],[\"visualmapopts\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"visualmap\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"view\",{\"1\":{\"28\":1,\"54\":1,\"60\":1}}],[\"vite\",{\"1\":{\"28\":4}}],[\"vue3\",{\"1\":{\"28\":1}}],[\"vueuse\",{\"1\":{\"28\":1}}],[\"vue\",{\"1\":{\"28\":2}}],[\"vuepress\",{\"1\":{\"20\":1,\"23\":1,\"26\":1,\"27\":3,\"28\":18,\"30\":1,\"34\":1},\"2\":{\"22\":1,\"24\":1,\"29\":1,\"33\":1}}],[\"vp\",{\"1\":{\"28\":1}}],[\"vertical\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"verify\",{\"1\":{\"62\":1}}],[\"version\",{\"1\":{\"28\":1,\"135\":1,\"138\":1}}],[\"vector2\",{\"1\":{\"17\":3}}],[\"vector1\",{\"1\":{\"17\":3}}],[\"vector对象被创建时为空\",{\"1\":{\"17\":1}}],[\"vector可以通过多种方式进行初始化\",{\"1\":{\"17\":1}}],[\"vector<std\",{\"1\":{\"17\":2}}],[\"vector<myclass>\",{\"1\":{\"17\":1}}],[\"vector<int>>\",{\"1\":{\"17\":2}}],[\"vector<int>a\",{\"1\":{\"17\":3}}],[\"vector<int>\",{\"1\":{\"17\":18}}],[\"vector<元素类型>\",{\"1\":{\"17\":1}}],[\"vector容器的定义和声明可以如下所示\",{\"1\":{\"17\":1}}],[\"vector的内存分配策略通常是指数增长的\",{\"1\":{\"16\":1}}],[\"vector会分配一块内存来存储元素\",{\"1\":{\"15\":1}}],[\"vector是一个动态数组会自动分配和管理内部的内存\",{\"1\":{\"13\":1}}],[\"vector\",{\"0\":{\"13\":1},\"1\":{\"17\":18,\"332\":1},\"2\":{\"18\":1}}],[\"确保用户输入不为空\",{\"1\":{\"91\":1,\"98\":1}}],[\"确保在对象销毁时关闭csv文件\",{\"1\":{\"91\":1,\"98\":1}}],[\"确保如果文件打开失败\",{\"1\":{\"91\":1,\"98\":1}}],[\"确保索引值在有效范围内\",{\"1\":{\"17\":1}}],[\"确保不越界\",{\"1\":{\"17\":1}}],[\"越界访问\",{\"1\":{\"17\":1}}],[\"j++\",{\"1\":{\"317\":4}}],[\"jl=城市\",{\"1\":{\"93\":1}}],[\"jl=489\",{\"1\":{\"93\":1,\"98\":1}}],[\"join操作\",{\"1\":{\"299\":1}}],[\"join\",{\"1\":{\"90\":2,\"91\":2,\"97\":2,\"98\":2,\"101\":1,\"205\":1,\"206\":2,\"230\":2,\"299\":1}}],[\"jobyear\",{\"1\":{\"101\":1}}],[\"jobsalary\",{\"1\":{\"101\":1}}],[\"jobskilltags\",{\"1\":{\"97\":1,\"98\":1}}],[\"jobtitle\",{\"1\":{\"101\":1}}],[\"jobarea\",{\"1\":{\"100\":1,\"101\":1}}],[\"jobarea=020000\",{\"1\":{\"100\":1,\"101\":1}}],[\"jobknowledgewelfarefeatures\",{\"1\":{\"97\":1,\"98\":1}}],[\"jobdegree\",{\"1\":{\"90\":1,\"91\":1,\"101\":1}}],[\"jobexperience\",{\"1\":{\"90\":1,\"91\":1}}],[\"jobname\",{\"1\":{\"90\":1,\"91\":1}}],[\"joblist\",{\"1\":{\"87\":1,\"90\":4,\"91\":4,\"97\":2,\"98\":2,\"101\":2}}],[\"job\",{\"1\":{\"87\":1,\"90\":10,\"91\":11,\"97\":10,\"98\":10,\"100\":1,\"101\":1}}],[\"java\",{\"1\":{\"80\":1,\"82\":1,\"86\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"javascript\",{\"1\":{\"35\":2}}],[\"jupyter\",{\"1\":{\"104\":3},\"2\":{\"77\":1,\"128\":1}}],[\"jetbrains\",{\"1\":{\"73\":1,\"75\":1}}],[\"jscode\",{\"1\":{\"112\":1}}],[\"js®\",{\"1\":{\"35\":1}}],[\"js\",{\"0\":{\"35\":1},\"1\":{\"80\":1,\"82\":1,\"100\":2,\"106\":1,\"112\":1,\"120\":1,\"126\":1},\"2\":{\"41\":1}}],[\"json返回的是一个字典类型\",{\"1\":{\"89\":1}}],[\"json网址\",{\"1\":{\"89\":1}}],[\"json\",{\"1\":{\"86\":2,\"87\":1,\"89\":7,\"90\":3,\"91\":10,\"96\":6,\"97\":2,\"98\":8,\"100\":1,\"101\":8,\"196\":1}}],[\"json所在的文件夹目录\",{\"1\":{\"28\":1}}],[\"json文件\",{\"1\":{\"28\":1,\"81\":1}}],[\"j\",{\"1\":{\"17\":6,\"317\":16}}],[\"txt\",{\"1\":{\"253\":1}}],[\"t表示要转换的类型\",{\"1\":{\"302\":1}}],[\"t表示数组指针\",{\"1\":{\"247\":1}}],[\"t表示指针数组\",{\"1\":{\"247\":1}}],[\"t\",{\"1\":{\"224\":4,\"226\":8,\"229\":4,\"230\":7,\"231\":6,\"234\":3,\"238\":1,\"241\":2,\"242\":1,\"246\":1,\"257\":5,\"258\":3,\"268\":1,\"274\":2,\"278\":10,\"279\":2,\"287\":1,\"297\":1,\"302\":1,\"328\":9,\"332\":15}}],[\"t>\",{\"1\":{\"224\":1,\"226\":2,\"229\":1,\"230\":1,\"231\":3,\"234\":1}}],[\"t2\",{\"1\":{\"208\":1,\"230\":2}}],[\"t1\",{\"1\":{\"208\":1,\"230\":2}}],[\"tb\",{\"1\":{\"183\":3,\"187\":2,\"203\":6,\"313\":1}}],[\"tuna\",{\"1\":{\"136\":3}}],[\"tutorial\",{\"1\":{\"52\":1},\"2\":{\"24\":1}}],[\"tag\",{\"1\":{\"101\":1}}],[\"tags\",{\"1\":{\"101\":2}}],[\"tableb\",{\"1\":{\"205\":2}}],[\"tablea\",{\"1\":{\"205\":2}}],[\"tables\",{\"1\":{\"182\":1}}],[\"table\",{\"1\":{\"179\":1,\"182\":1,\"183\":7,\"184\":1,\"198\":2}}],[\"tab\",{\"1\":{\"76\":1}}],[\"tinytext\",{\"1\":{\"181\":1}}],[\"tinyblob\",{\"1\":{\"181\":1}}],[\"tinyint\",{\"1\":{\"181\":1}}],[\"title=keyword+\",{\"1\":{\"124\":1,\"126\":1}}],[\"title=\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"112\":3,\"116\":1,\"120\":1}}],[\"titleopts\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"112\":3,\"116\":1,\"120\":1,\"124\":1,\"126\":1}}],[\"title\",{\"1\":{\"101\":1,\"107\":2,\"108\":1,\"109\":1,\"112\":4,\"116\":2,\"120\":2,\"124\":1,\"126\":1}}],[\"time=now\",{\"1\":{\"187\":1}}],[\"timestamp\",{\"1\":{\"181\":1}}],[\"timeline\",{\"1\":{\"111\":5,\"112\":6,\"119\":5,\"120\":6,\"125\":2,\"126\":6}}],[\"time\",{\"1\":{\"98\":2,\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"126\":1,\"181\":1,\"187\":1}}],[\"typora\",{\"1\":{\"270\":1}}],[\"typoraimg\",{\"1\":{\"97\":1}}],[\"types\",{\"1\":{\"28\":1,\"305\":1}}],[\"type\",{\"1\":{\"28\":1,\"90\":2,\"91\":1,\"97\":2,\"98\":1,\"108\":1,\"112\":1,\"241\":4,\"242\":2,\"305\":1}}],[\"the\",{\"1\":{\"286\":2}}],[\"themetype\",{\"1\":{\"112\":1,\"120\":1}}],[\"theme=themetype\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"126\":1}}],[\"theme\",{\"1\":{\"20\":1,\"26\":1,\"27\":3,\"28\":4},\"2\":{\"29\":1}}],[\"thread\",{\"1\":{\"230\":2}}],[\"throw\",{\"1\":{\"224\":4}}],[\"this\",{\"1\":{\"226\":2,\"229\":1,\"230\":1,\"234\":1}}],[\"thirty\",{\"1\":{\"97\":1}}],[\"torchvision==0\",{\"1\":{\"140\":1}}],[\"torch==2\",{\"1\":{\"140\":1}}],[\"torch\",{\"1\":{\"137\":1}}],[\"top\",{\"1\":{\"107\":2,\"112\":2,\"116\":2,\"120\":2}}],[\"top=\",{\"1\":{\"107\":2,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"112\":7,\"116\":2,\"119\":1,\"120\":3}}],[\"toolkit\",{\"1\":{\"138\":1,\"139\":2}}],[\"tooltipopts\",{\"1\":{\"107\":2,\"108\":1,\"109\":1,\"112\":4,\"116\":1,\"117\":1,\"120\":2}}],[\"tooltip\",{\"1\":{\"107\":2,\"108\":1,\"109\":1,\"112\":4,\"116\":1,\"117\":1,\"120\":2}}],[\"toolbar\",{\"1\":{\"28\":1}}],[\"total\",{\"1\":{\"106\":1,\"108\":1,\"112\":2,\"196\":2}}],[\"to\",{\"1\":{\"72\":1,\"75\":1,\"80\":1,\"90\":1,\"91\":1,\"97\":2,\"98\":2,\"183\":1,\"286\":2}}],[\"tle\",{\"1\":{\"62\":1}}],[\"traversalstring\",{\"1\":{\"300\":1}}],[\"transaction\",{\"1\":{\"215\":1}}],[\"trimspace\",{\"1\":{\"270\":1,\"272\":1}}],[\"try\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"224\":4}}],[\"tree\",{\"1\":{\"53\":1}}],[\"true或false\",{\"1\":{\"258\":1}}],[\"true\",{\"1\":{\"1\":2,\"17\":1,\"31\":1,\"230\":2,\"231\":2,\"258\":2,\"269\":2,\"274\":4,\"305\":1,\"317\":1,\"320\":6,\"321\":6}}],[\"terminal\",{\"1\":{\"144\":2}}],[\"tensor\",{\"1\":{\"137\":1}}],[\"text=\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"textstyleopts\",{\"1\":{\"107\":2,\"112\":2,\"116\":2,\"120\":2,\"124\":1,\"126\":1}}],[\"textstyle\",{\"1\":{\"107\":2,\"112\":2,\"116\":2,\"120\":2,\"124\":1,\"126\":1}}],[\"text2\",{\"1\":{\"81\":2,\"82\":2}}],[\"text1\",{\"1\":{\"81\":3,\"82\":3}}],[\"text\",{\"1\":{\"81\":11,\"82\":11,\"101\":2,\"181\":1,\"219\":1,\"270\":4,\"272\":4}}],[\"testarray\",{\"1\":{\"240\":2,\"241\":2}}],[\"test\",{\"1\":{\"54\":1,\"144\":6,\"156\":4,\"231\":4}}],[\"testlib\",{\"1\":{\"54\":3}}],[\"testswitch3\",{\"1\":{\"317\":1}}],[\"tests\",{\"1\":{\"52\":1,\"54\":2,\"56\":2,\"58\":1,\"62\":2}}],[\"template<typename\",{\"1\":{\"332\":1}}],[\"template<class\",{\"1\":{\"224\":1,\"226\":2,\"229\":1,\"230\":1,\"231\":4,\"234\":1}}],[\"template\",{\"1\":{\"28\":1,\"231\":1}}],[\"tsinghua\",{\"1\":{\"136\":3}}],[\"ts\",{\"1\":{\"28\":1}}],[\"twodimensionalvector\",{\"1\":{\"17\":4}}],[\"rgba\",{\"1\":{\"117\":1,\"120\":1}}],[\"raii\",{\"1\":{\"225\":1,\"226\":2,\"229\":1,\"230\":1}}],[\"radius=\",{\"1\":{\"117\":1,\"120\":1}}],[\"raw=true\",{\"1\":{\"97\":1}}],[\"range遍历的返回值有以下规律\",{\"1\":{\"317\":1}}],[\"range遍历数组\",{\"1\":{\"317\":1}}],[\"range遍历\",{\"1\":{\"243\":1,\"284\":1}}],[\"range=\",{\"1\":{\"124\":1,\"126\":1}}],[\"range\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1,\"107\":2,\"112\":2,\"116\":2,\"120\":2,\"243\":1,\"246\":2,\"277\":1,\"284\":1,\"300\":1,\"305\":1,\"317\":3}}],[\"right=\",{\"1\":{\"110\":2,\"111\":1,\"112\":3,\"119\":1,\"120\":1}}],[\"right\",{\"1\":{\"90\":1,\"109\":1,\"112\":1,\"206\":1}}],[\"r\",{\"1\":{\"76\":1,\"81\":2,\"82\":2,\"89\":2,\"91\":2,\"96\":2,\"98\":2,\"131\":1,\"151\":1,\"231\":4,\"271\":3,\"297\":1,\"300\":3}}],[\"rj\",{\"1\":{\"60\":1}}],[\"rollback\",{\"1\":{\"215\":1}}],[\"row\",{\"1\":{\"82\":6,\"106\":5,\"112\":5,\"120\":5,\"123\":2,\"126\":2}}],[\"rows\",{\"1\":{\"17\":6,\"196\":1}}],[\"roaming\",{\"1\":{\"39\":1}}],[\"runoob\",{\"1\":{\"325\":1}}],[\"runes2\",{\"1\":{\"301\":3}}],[\"rune或\",{\"1\":{\"301\":1}}],[\"rune\",{\"1\":{\"300\":2,\"301\":1,\"305\":1}}],[\"rune类型用来表示utf8字符\",{\"1\":{\"300\":1}}],[\"rune类型实际是一个int32\",{\"1\":{\"300\":1}}],[\"rune类型\",{\"1\":{\"300\":1}}],[\"runtime\",{\"1\":{\"286\":1},\"2\":{\"42\":1}}],[\"run\",{\"1\":{\"28\":1,\"31\":1,\"54\":1,\"80\":2,\"90\":1,\"91\":2,\"97\":1,\"98\":2}}],[\"rc\",{\"1\":{\"28\":11}}],[\"rebind\",{\"1\":{\"331\":1}}],[\"reboot\",{\"1\":{\"75\":1}}],[\"recover\",{\"1\":{\"305\":1}}],[\"realloc\",{\"1\":{\"328\":1}}],[\"real\",{\"1\":{\"305\":1}}],[\"readstring\",{\"1\":{\"270\":1,\"272\":1}}],[\"reader中读取数据\",{\"1\":{\"271\":1}}],[\"reader\",{\"1\":{\"270\":2,\"271\":3,\"272\":2}}],[\"readonly\",{\"1\":{\"151\":2}}],[\"read\",{\"1\":{\"80\":2,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"123\":1,\"126\":1}}],[\"requested\",{\"1\":{\"286\":1}}],[\"releaseref\",{\"1\":{\"230\":3,\"231\":1}}],[\"references\",{\"1\":{\"198\":2}}],[\"rename\",{\"1\":{\"183\":1}}],[\"render\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"renormalize\",{\"1\":{\"31\":1}}],[\"re\",{\"1\":{\"60\":1,\"81\":2,\"82\":3,\"89\":2,\"91\":3,\"96\":2,\"98\":3},\"2\":{\"83\":1}}],[\"reversal\",{\"1\":{\"109\":1,\"112\":1}}],[\"revealjs\",{\"1\":{\"28\":1}}],[\"review\",{\"1\":{\"52\":1}}],[\"remote\",{\"1\":{\"31\":1}}],[\"redirect\",{\"1\":{\"28\":1}}],[\"replace\",{\"1\":{\"80\":6,\"82\":3,\"91\":6,\"98\":6,\"123\":3,\"126\":3}}],[\"repl\",{\"1\":{\"28\":1}}],[\"return\",{\"1\":{\"17\":6,\"81\":7,\"82\":7,\"89\":3,\"91\":3,\"96\":4,\"98\":4,\"107\":1,\"112\":2,\"116\":1,\"117\":1,\"118\":1,\"120\":3,\"224\":8,\"225\":1,\"226\":7,\"228\":1,\"229\":4,\"230\":5,\"231\":3,\"233\":2,\"234\":4,\"253\":1,\"305\":1,\"311\":1,\"317\":2}}],[\"response\",{\"1\":{\"90\":3,\"91\":3,\"97\":3,\"98\":3}}],[\"resource\",{\"1\":{\"52\":1,\"53\":1,\"225\":1}}],[\"reserve\",{\"1\":{\"17\":4,\"332\":1}}],[\"resize\",{\"1\":{\"17\":3,\"332\":1}}],[\"多用于定义程序运行期间不会改变的那些值\",{\"1\":{\"311\":1}}],[\"多用于占位\",{\"1\":{\"311\":1}}],[\"多行字符串\",{\"0\":{\"298\":1}}],[\"多行注释\",{\"0\":{\"147\":1},\"1\":{\"169\":1}}],[\"多维数组只有第一层可以使用\",{\"1\":{\"246\":1}}],[\"多维数组\",{\"0\":{\"244\":1}}],[\"多维vector的使用\",{\"1\":{\"17\":1}}],[\"多路平衡搜索树\",{\"1\":{\"219\":1}}],[\"多个case值中间使用英文逗号分隔\",{\"1\":{\"317\":1}}],[\"多个iota定义在一行\",{\"1\":{\"313\":1}}],[\"多个常量也可以一起声明\",{\"1\":{\"311\":1}}],[\"多个并发的事务之间要相互隔离\",{\"1\":{\"216\":1}}],[\"多个用户并发的访问数据库时\",{\"1\":{\"216\":1}}],[\"多个条件任意一个成立\",{\"1\":{\"192\":1}}],[\"多个条件同时成立\",{\"1\":{\"192\":1}}],[\"多表查询时给表起别名\",{\"1\":{\"205\":1}}],[\"多表查询可以分为\",{\"1\":{\"204\":1}}],[\"多表查询\",{\"0\":{\"201\":1},\"1\":{\"203\":2}}],[\"多表设计\",{\"0\":{\"197\":1}}],[\"多对多的关系在开发中属于也比较常见的\",{\"1\":{\"200\":1}}],[\"多对多\",{\"0\":{\"200\":1},\"1\":{\"197\":1}}],[\"多对一\",{\"1\":{\"197\":1}}],[\"多选一\",{\"1\":{\"192\":1,\"210\":1}}],[\"多人合作时不会乱成一团\",{\"1\":{\"49\":1}}],[\"多余的元素用\",{\"1\":{\"17\":1}}],[\"多余的元素被默认值填充\",{\"1\":{\"17\":1}}],[\"若\",{\"1\":{\"332\":3}}],[\"若存在\",{\"1\":{\"332\":1}}],[\"若无可用块\",{\"1\":{\"331\":1}}],[\"若需要知道具体数据作用\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"124\":1,\"125\":1}}],[\"若网络一栏无文件\",{\"1\":{\"86\":1}}],[\"若想通过element去改变容器内的值\",{\"1\":{\"17\":1}}],[\"若使用using\",{\"1\":{\"17\":1}}],[\"此外\",{\"1\":{\"224\":1}}],[\"此时该切片指向的底层数组就会更换\",{\"1\":{\"285\":1}}],[\"此时当node1和node2生命周期结束时两个资源对应的引用计数就都会被减为0\",{\"1\":{\"234\":1}}],[\"此时这个资源就会被释放\",{\"1\":{\"233\":1}}],[\"此时这两个资源对应的引用计数都被加到了2\",{\"1\":{\"233\":1}}],[\"此时在数据量大的情况下\",{\"1\":{\"219\":1}}],[\"此时就会形成一个单向链表\",{\"1\":{\"219\":1}}],[\"此时只能够使用别名来指定字段\",{\"1\":{\"205\":1}}],[\"此时出于提高查询效率的考虑\",{\"1\":{\"199\":1}}],[\"此时不能通过element去改变容器内的值\",{\"1\":{\"17\":1}}],[\"此网址也可能需要科学上网\",{\"1\":{\"139\":1}}],[\"此处声明局部变量m\",{\"1\":{\"310\":1}}],[\"此处是我们要在网络中获取的数据文件\",{\"1\":{\"90\":1}}],[\"此处存放自己写和一些优秀的开源项目\",{\"1\":{\"12\":1}}],[\"此处存放自己写的一些学习笔记\",{\"1\":{\"11\":1}}],[\"此处存放一些计算机大类的笔记\",{\"1\":{\"3\":1}}],[\"此处存放刷题时的思路和笔记\",{\"1\":{\"2\":1}}],[\"此教程将指引你使用polygon平台创建\",{\"1\":{\"43\":1}}],[\"此教程将指引你创建一个\",{\"1\":{\"20\":1,\"26\":1,\"66\":1}}],[\"6946802425218990p\",{\"1\":{\"260\":1}}],[\"64位操作系统上就是int64\",{\"1\":{\"291\":1}}],[\"64位操作系统上就是uint64\",{\"1\":{\"291\":1}}],[\"64位整型\",{\"1\":{\"290\":2}}],[\"64\",{\"1\":{\"133\":1}}],[\"60\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"317\":1}}],[\"60000\",{\"1\":{\"106\":1,\"112\":1}}],[\"65535\",{\"1\":{\"181\":2,\"290\":1}}],[\"65\",{\"1\":{\"110\":1,\"112\":1,\"181\":2,\"259\":2,\"315\":1,\"316\":1}}],[\"6\",{\"0\":{\"154\":1,\"195\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1},\"1\":{\"17\":1,\"219\":1,\"280\":2,\"285\":7,\"317\":1}}],[\"75\",{\"1\":{\"315\":1,\"316\":1}}],[\"754\",{\"1\":{\"293\":1}}],[\"7182\",{\"1\":{\"311\":2}}],[\"77\",{\"1\":{\"292\":1}}],[\"777\",{\"1\":{\"181\":2}}],[\"7s\",{\"1\":{\"265\":2}}],[\"78\",{\"1\":{\"260\":1}}],[\"72\",{\"1\":{\"108\":1,\"112\":1}}],[\"7976931348623157\",{\"1\":{\"181\":3}}],[\"79\",{\"1\":{\"28\":1}}],[\"7\",{\"0\":{\"196\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1},\"1\":{\"17\":1,\"28\":2,\"280\":1,\"285\":6,\"317\":2}}],[\"末尾插入元素\",{\"1\":{\"17\":1}}],[\"末尾的元素\",{\"1\":{\"17\":1}}],[\"mb\",{\"1\":{\"313\":1}}],[\"mutex\",{\"1\":{\"230\":2,\"231\":2}}],[\"mm\",{\"1\":{\"181\":6}}],[\"memory\",{\"1\":{\"331\":1,\"332\":3}}],[\"mediumtext\",{\"1\":{\"181\":1}}],[\"mediumblob\",{\"1\":{\"181\":1}}],[\"mediumint\",{\"1\":{\"181\":1}}],[\"menpo\",{\"1\":{\"136\":1}}],[\"merge\",{\"1\":{\"80\":2}}],[\"mermaid\",{\"1\":{\"28\":1}}],[\"msys2\",{\"1\":{\"136\":1}}],[\"modifyarray2\",{\"1\":{\"247\":2}}],[\"modifyarray\",{\"1\":{\"247\":2}}],[\"modify\",{\"1\":{\"183\":1}}],[\"mode=\",{\"1\":{\"82\":1,\"91\":1,\"98\":1}}],[\"module\",{\"1\":{\"28\":1}}],[\"mirrors\",{\"1\":{\"136\":11}}],[\"mingw\",{\"1\":{\"135\":1}}],[\"min\",{\"1\":{\"107\":2,\"112\":2,\"116\":1,\"120\":1,\"193\":2}}],[\"minnum\",{\"1\":{\"106\":1,\"107\":1,\"112\":2}}],[\"minsalary\",{\"1\":{\"82\":4}}],[\"mikemirzayanov\",{\"1\":{\"54\":1}}],[\"mit\",{\"1\":{\"27\":1,\"28\":1}}],[\"m\",{\"1\":{\"31\":1,\"310\":3,\"332\":4}}],[\"md\",{\"1\":{\"28\":1}}],[\"malloc\",{\"1\":{\"331\":1}}],[\"math\",{\"1\":{\"293\":5,\"302\":2}}],[\"match\",{\"1\":{\"81\":2,\"82\":2}}],[\"make\",{\"1\":{\"279\":2,\"282\":1,\"283\":1,\"285\":1,\"287\":1,\"305\":1}}],[\"marridl\",{\"1\":{\"267\":2}}],[\"married\",{\"1\":{\"267\":3,\"268\":5,\"269\":5}}],[\"markpointitem\",{\"1\":{\"108\":1,\"112\":1}}],[\"markpointopts\",{\"1\":{\"108\":1,\"112\":1}}],[\"markpoint\",{\"1\":{\"108\":1,\"112\":1}}],[\"markdown\",{\"1\":{\"52\":1}}],[\"markmap\",{\"1\":{\"28\":3}}],[\"manipulation\",{\"1\":{\"170\":1,\"185\":1}}],[\"manually\",{\"1\":{\"75\":1}}],[\"macos\",{\"1\":{\"132\":1}}],[\"map返回键和值\",{\"1\":{\"317\":1}}],[\"map\",{\"1\":{\"107\":5,\"109\":2,\"110\":1,\"112\":9,\"116\":6,\"118\":1,\"120\":8,\"289\":1,\"291\":1,\"305\":1,\"317\":1}}],[\"maxfloat64\",{\"1\":{\"293\":1}}],[\"maxfloat32\",{\"1\":{\"293\":1}}],[\"max\",{\"1\":{\"107\":2,\"108\":1,\"109\":1,\"112\":4,\"116\":1,\"120\":1,\"193\":2,\"278\":2}}],[\"maxnum\",{\"1\":{\"106\":1,\"107\":1,\"112\":2}}],[\"maxsalary\",{\"1\":{\"82\":4}}],[\"main\",{\"1\":{\"17\":6,\"91\":1,\"97\":1,\"98\":1,\"112\":1,\"120\":1,\"136\":2,\"224\":3,\"225\":1,\"226\":2,\"228\":1,\"230\":1,\"231\":3,\"233\":2,\"234\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"245\":1,\"246\":1,\"247\":1,\"250\":2,\"251\":2,\"252\":2,\"253\":2,\"254\":2,\"255\":4,\"257\":2,\"267\":2,\"268\":2,\"269\":2,\"270\":2,\"272\":2,\"274\":1,\"277\":2,\"278\":1,\"279\":1,\"283\":1,\"284\":1,\"285\":2,\"287\":2,\"288\":1,\"292\":2,\"293\":2,\"297\":2,\"310\":2,\"311\":1}}],[\"mysql中有两种方式进行事务的操作\",{\"1\":{\"215\":1}}],[\"mysql中的数据类型主要分为三类\",{\"1\":{\"181\":1}}],[\"mysql数据库为解决id问题\",{\"1\":{\"180\":1}}],[\"mysql特有\",{\"1\":{\"169\":1}}],[\"mysql服务器启动完毕后\",{\"1\":{\"167\":1}}],[\"mysql\",{\"0\":{\"165\":1},\"1\":{\"167\":3,\"169\":1,\"196\":1,\"215\":1,\"219\":3},\"2\":{\"221\":1}}],[\"my\",{\"0\":{\"341\":1},\"1\":{\"27\":3,\"174\":1}}],[\"myclass\",{\"1\":{\"17\":2}}],[\"myvector\",{\"1\":{\"17\":44}}],[\"<dfn>\",{\"1\":{\"325\":1}}],[\"<del>\",{\"1\":{\"325\":1}}],[\"<q>\",{\"1\":{\"325\":1}}],[\"<pre>\",{\"1\":{\"325\":1}}],[\"<p><p\",{\"1\":{\"325\":1}}],[\"<p>\",{\"1\":{\"325\":1}}],[\"<var>\",{\"1\":{\"325\":1}}],[\"<vector>\",{\"1\":{\"17\":7}}],[\"<kbd>\",{\"1\":{\"325\":1}}],[\"<cite>\",{\"1\":{\"325\":1}}],[\"<code>\",{\"1\":{\"325\":1}}],[\"<class\",{\"1\":{\"231\":1}}],[\"<samp>\",{\"1\":{\"325\":1}}],[\"<sup>\",{\"1\":{\"325\":1}}],[\"<sub>\",{\"1\":{\"325\":1}}],[\"<strong>\",{\"1\":{\"325\":1}}],[\"<small>\",{\"1\":{\"325\":1}}],[\"<u>\",{\"1\":{\"325\":1}}],[\"<username>\",{\"1\":{\"31\":2,\"32\":1}}],[\"<em>\",{\"1\":{\"325\":1}}],[\"<blockquote>\",{\"1\":{\"325\":1}}],[\"<bdo>\",{\"1\":{\"325\":1}}],[\"<b>\",{\"1\":{\"325\":1}}],[\"<br>\",{\"1\":{\"325\":2}}],[\"<ins>\",{\"1\":{\"325\":1}}],[\"<i>\",{\"1\":{\"325\":1}}],[\"<img\",{\"1\":{\"325\":1}}],[\"<img>\",{\"1\":{\"325\":1}}],[\"<iostream>\",{\"1\":{\"17\":6}}],[\"<address>\",{\"1\":{\"325\":1}}],[\"<abbr>\",{\"1\":{\"325\":1}}],[\"<a\",{\"1\":{\"325\":1}}],[\"<a>\",{\"1\":{\"325\":1}}],[\"<hr>\",{\"1\":{\"325\":2}}],[\"<h1><h1\",{\"1\":{\"325\":1}}],[\"<h>\",{\"1\":{\"325\":1}}],[\"<>\",{\"1\":{\"192\":1,\"211\":1}}],[\"<=\",{\"1\":{\"192\":1,\"277\":4,\"278\":4,\"286\":1,\"320\":1}}],[\"<=kw=\",{\"1\":{\"96\":1,\"98\":1}}],[\"<=jl=\",{\"1\":{\"96\":1,\"98\":1}}],[\"<=city=\",{\"1\":{\"89\":1,\"91\":1}}],[\"<=query=\",{\"1\":{\"89\":1,\"91\":1}}],[\"<repo>\",{\"1\":{\"31\":2,\"32\":1}}],[\"<\",{\"1\":{\"17\":5,\"192\":1,\"230\":1,\"243\":1,\"284\":1,\"285\":1,\"286\":4,\"300\":1,\"316\":3,\"317\":10,\"320\":1,\"325\":2}}],[\"<<abc\",{\"1\":{\"147\":1}}],[\"<<eof\",{\"1\":{\"147\":1}}],[\"<<\",{\"1\":{\"17\":10,\"147\":1,\"224\":15,\"226\":6,\"228\":4,\"229\":6,\"230\":5,\"231\":20,\"233\":4,\"234\":10,\"313\":5}}],[\"则使用\",{\"1\":{\"332\":1}}],[\"则调用\",{\"1\":{\"332\":1}}],[\"则从\",{\"1\":{\"332\":2}}],[\"则顺序分配新块\",{\"1\":{\"331\":1}}],[\"则为\",{\"1\":{\"321\":3}}],[\"则执行分支3\",{\"1\":{\"315\":1}}],[\"则最终容量\",{\"1\":{\"286\":3}}],[\"则索引合法\",{\"1\":{\"277\":1}}],[\"则表示值除了必须之外不作填充\",{\"1\":{\"263\":1}}],[\"则触发访问越界\",{\"1\":{\"238\":1}}],[\"则默认以delete的方式释放资源\",{\"1\":{\"231\":1}}],[\"则会删除整张表的所有数据\",{\"1\":{\"188\":1}}],[\"则会修改整张表的所有数据\",{\"1\":{\"187\":1}}],[\"则不执行删除操作\",{\"1\":{\"184\":1}}],[\"则采用默认值\",{\"1\":{\"180\":1}}],[\"则创建该数据库\",{\"1\":{\"174\":1}}],[\"则需要用到rune类型\",{\"1\":{\"300\":1}}],[\"则需要刷新网页\",{\"1\":{\"86\":1}}],[\"则需要将auto\",{\"1\":{\"17\":1}}],[\"则返回该切片的容量\",{\"1\":{\"279\":1}}],[\"则返回\",{\"1\":{\"17\":2}}],[\"则用于在指定位置插入新元素\",{\"1\":{\"17\":1}}],[\"则可以省略\",{\"1\":{\"17\":1}}],[\"imag\",{\"1\":{\"305\":1}}],[\"images\",{\"1\":{\"270\":1,\"325\":1}}],[\"image\",{\"1\":{\"270\":2}}],[\"import\",{\"1\":{\"82\":4,\"91\":3,\"98\":4,\"101\":3,\"112\":6,\"120\":5,\"126\":3,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":2,\"257\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"272\":1,\"292\":1,\"293\":1,\"297\":1,\"305\":1,\"310\":1}}],[\"i++\",{\"1\":{\"230\":1,\"243\":1,\"284\":1,\"285\":1,\"300\":1,\"316\":3,\"317\":4}}],[\"id=1\",{\"1\":{\"187\":1}}],[\"id\",{\"1\":{\"180\":1,\"187\":1,\"203\":2}}],[\"ide\",{\"1\":{\"73\":2}}],[\"icon\",{\"1\":{\"90\":1}}],[\"iota声明中间插队\",{\"1\":{\"313\":1}}],[\"iota可理解为const语句块中的行索引\",{\"1\":{\"312\":1}}],[\"iota在const关键字出现时将被重置为0\",{\"1\":{\"312\":1}}],[\"iota是go语言的常量计数器\",{\"1\":{\"312\":1}}],[\"iota\",{\"0\":{\"312\":1},\"1\":{\"305\":1,\"312\":1,\"313\":12}}],[\"io结束后输出内容\",{\"1\":{\"253\":1}}],[\"ios\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"io\",{\"1\":{\"32\":1,\"53\":1,\"55\":1,\"218\":1,\"219\":3,\"248\":1,\"253\":3,\"271\":4}}],[\"isok\",{\"1\":{\"306\":1}}],[\"isolation\",{\"1\":{\"216\":2}}],[\"issue\",{\"1\":{\"49\":1,\"61\":1}}],[\"is\",{\"1\":{\"28\":1,\"107\":4,\"108\":2,\"109\":4,\"111\":3,\"112\":13,\"116\":3,\"117\":2,\"119\":3,\"120\":8,\"125\":1,\"126\":1,\"192\":1,\"225\":1,\"272\":4}}],[\"ifdemo2\",{\"1\":{\"316\":1}}],[\"ifdemo1\",{\"1\":{\"315\":1}}],[\"if条件判断还有一种特殊的写法\",{\"1\":{\"316\":1}}],[\"if条件判断特殊写法\",{\"0\":{\"316\":1}}],[\"if条件判断基本写法\",{\"0\":{\"315\":1}}],[\"if右边的大括号在同一行\",{\"1\":{\"315\":1}}],[\"if和else都是可选的\",{\"1\":{\"315\":1}}],[\"if判断中的else\",{\"1\":{\"315\":1}}],[\"if\",{\"1\":{\"17\":2,\"81\":6,\"82\":9,\"89\":1,\"90\":2,\"91\":6,\"96\":2,\"97\":2,\"98\":7,\"106\":1,\"107\":2,\"112\":4,\"116\":1,\"117\":1,\"120\":4,\"123\":1,\"126\":1,\"174\":3,\"176\":3,\"184\":2,\"224\":3,\"226\":3,\"229\":4,\"230\":4,\"231\":3,\"253\":1,\"286\":3,\"305\":1,\"315\":4,\"316\":3,\"317\":5}}],[\"i\",{\"1\":{\"17\":9,\"96\":1,\"98\":1,\"101\":2,\"134\":1,\"230\":2,\"243\":3,\"284\":4,\"285\":3,\"300\":4,\"316\":9,\"317\":15}}],[\"itcast数据库存在时删除\",{\"1\":{\"176\":1}}],[\"itcast\",{\"1\":{\"176\":2}}],[\"itemstyleopts\",{\"1\":{\"117\":1,\"120\":1}}],[\"itemstyle\",{\"1\":{\"117\":1,\"120\":1}}],[\"item\",{\"1\":{\"101\":3}}],[\"item中\",{\"1\":{\"101\":1}}],[\"iterrows\",{\"1\":{\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"123\":1,\"126\":1}}],[\"iterator\",{\"1\":{\"17\":2,\"332\":2}}],[\"it\",{\"1\":{\"17\":15}}],[\"infinite\",{\"1\":{\"286\":1}}],[\"info\",{\"0\":{\"51\":1},\"1\":{\"55\":1,\"82\":16,\"101\":2}}],[\"invalid\",{\"1\":{\"224\":3}}],[\"inverse=true\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"innodb\",{\"1\":{\"219\":1}}],[\"inner\",{\"1\":{\"205\":1}}],[\"increment\",{\"1\":{\"180\":3}}],[\"includegraphics\",{\"1\":{\"52\":1}}],[\"include\",{\"1\":{\"17\":13,\"53\":1}}],[\"industryname\",{\"1\":{\"97\":1,\"98\":1}}],[\"index+1\",{\"1\":{\"288\":1}}],[\"index=false\",{\"1\":{\"80\":1}}],[\"index\",{\"1\":{\"49\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"123\":1,\"126\":1,\"140\":1,\"160\":1,\"218\":1,\"220\":3,\"243\":2,\"284\":2,\"288\":1,\"299\":1,\"328\":2,\"332\":4}}],[\"input\",{\"1\":{\"91\":2,\"98\":2}}],[\"in\",{\"1\":{\"52\":2,\"57\":1,\"80\":1,\"81\":12,\"82\":17,\"89\":2,\"90\":3,\"91\":5,\"96\":2,\"97\":4,\"98\":6,\"100\":1,\"101\":2,\"106\":2,\"107\":4,\"109\":2,\"111\":1,\"112\":9,\"116\":3,\"117\":3,\"119\":1,\"120\":9,\"123\":4,\"126\":5,\"192\":1,\"210\":2,\"211\":2}}],[\"installation\",{\"1\":{\"72\":1}}],[\"installed\",{\"1\":{\"28\":1}}],[\"install\",{\"1\":{\"28\":1,\"72\":1,\"104\":2,\"134\":1,\"140\":2}}],[\"insert\",{\"0\":{\"186\":1},\"1\":{\"17\":2,\"185\":1,\"186\":6,\"208\":1,\"218\":1,\"332\":1}}],[\"initlist\",{\"1\":{\"332\":1}}],[\"initializer\",{\"1\":{\"332\":1}}],[\"initialization\",{\"1\":{\"225\":1}}],[\"initopts\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"126\":1}}],[\"init\",{\"1\":{\"27\":1,\"31\":1,\"91\":1,\"98\":1,\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"126\":1}}],[\"int64对应c语言中的long型\",{\"1\":{\"290\":1}}],[\"int64\",{\"1\":{\"290\":2,\"305\":1}}],[\"int32\",{\"1\":{\"290\":2,\"305\":1}}],[\"int16对应c语言中的short型\",{\"1\":{\"290\":1}}],[\"int16\",{\"1\":{\"290\":2,\"305\":1}}],[\"int8\",{\"1\":{\"290\":2,\"305\":1}}],[\"int是不同的类型\",{\"1\":{\"238\":1}}],[\"int和\",{\"1\":{\"238\":1}}],[\"into\",{\"1\":{\"186\":4}}],[\"interface\",{\"1\":{\"253\":3,\"254\":3,\"255\":1,\"267\":1,\"268\":1,\"269\":1,\"271\":3,\"305\":1}}],[\"interval=5000\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"interactive\",{\"1\":{\"55\":1}}],[\"interactor\",{\"1\":{\"53\":1,\"54\":1,\"55\":1,\"60\":1}}],[\"integer\",{\"1\":{\"17\":2,\"181\":1}}],[\"int\",{\"1\":{\"17\":23,\"81\":2,\"82\":5,\"181\":1,\"224\":14,\"225\":4,\"226\":6,\"228\":4,\"229\":3,\"230\":5,\"231\":6,\"233\":4,\"234\":2,\"237\":1,\"238\":3,\"240\":2,\"241\":3,\"242\":2,\"247\":4,\"253\":3,\"267\":2,\"268\":2,\"269\":2,\"271\":3,\"272\":1,\"274\":1,\"277\":2,\"278\":1,\"279\":1,\"280\":1,\"282\":3,\"283\":1,\"284\":1,\"285\":6,\"287\":3,\"288\":1,\"291\":1,\"292\":3,\"296\":1,\"302\":2,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"311\":1,\"332\":4}}],[\"可嵌套\",{\"1\":{\"157\":1}}],[\"可选的\",{\"1\":{\"263\":1}}],[\"可选\",{\"1\":{\"136\":1}}],[\"可克达拉市\",{\"1\":{\"81\":1,\"82\":1}}],[\"可能导致频繁内存重新分配\",{\"1\":{\"17\":1}}],[\"可能会重新分配内存来容纳新元素\",{\"1\":{\"17\":1}}],[\"可用于遍历容器\",{\"1\":{\"17\":1}}],[\"可以用于标准库算法\",{\"1\":{\"332\":1}}],[\"可以根据实际需要进行选择\",{\"1\":{\"315\":1}}],[\"可以通过遍历或者单个获取字符串元素获得字符\",{\"1\":{\"300\":1}}],[\"可以通过查看$goroot\",{\"1\":{\"286\":1}}],[\"可以通过最上方的\",{\"1\":{\"52\":1}}],[\"可以添加多个元素\",{\"1\":{\"285\":1}}],[\"可以一次添加一个元素\",{\"1\":{\"285\":1}}],[\"可以省略\",{\"1\":{\"278\":1}}],[\"可以省略切片表达式中的任何索引\",{\"1\":{\"277\":1}}],[\"可以像指针一样使用\",{\"1\":{\"226\":2,\"229\":1,\"230\":1,\"234\":1}}],[\"可以控制在小于等于\",{\"1\":{\"219\":1}}],[\"可以存储多个\",{\"1\":{\"219\":1}}],[\"可以引入另外一种数据结构\",{\"1\":{\"219\":1}}],[\"可以选择平衡二叉树或者是红黑树来解决上述问题\",{\"1\":{\"219\":1}}],[\"可以是多列\",{\"1\":{\"211\":1}}],[\"可以是多行\",{\"1\":{\"210\":1}}],[\"可以是正解也可以是错解\",{\"1\":{\"59\":1}}],[\"可以不指定排序方式asc\",{\"1\":{\"195\":1}}],[\"可以\",{\"1\":{\"194\":1}}],[\"可以查看指定表的字段\",{\"1\":{\"182\":1}}],[\"可以加上参数\",{\"1\":{\"176\":1}}],[\"可以有两种形式\",{\"1\":{\"167\":1}}],[\"可以向脚本传递参数\",{\"1\":{\"156\":1}}],[\"可以取变量\",{\"1\":{\"154\":1}}],[\"可以删除变量\",{\"1\":{\"152\":1}}],[\"可以将拷贝构造函数和拷贝赋值函数中引用计数的自增操作提取出来\",{\"1\":{\"230\":1}}],[\"可以将这张大表拆分成两张小表\",{\"1\":{\"199\":1}}],[\"可以将变量变为只读\",{\"1\":{\"151\":1}}],[\"可以将测试点设置为样例\",{\"1\":{\"57\":1}}],[\"可以换成其它任意字符串\",{\"1\":{\"147\":1}}],[\"可以在go语言的源码中直接添加非ascii码字符\",{\"1\":{\"296\":1}}],[\"可以在程序运行过程中从标准输入获取用户的输入\",{\"1\":{\"266\":1}}],[\"可以在创建表\",{\"1\":{\"180\":1}}],[\"可以在\",{\"1\":{\"144\":1,\"316\":1}}],[\"可以看到\",{\"1\":{\"252\":1,\"267\":1}}],[\"可以看到上一页和下一页的按钮标签名称都为\",{\"1\":{\"97\":1}}],[\"可以看到下一页的按钮标签名称为\",{\"1\":{\"90\":1}}],[\"可以发现有两个参数\",{\"1\":{\"86\":1}}],[\"可以都勾选上\",{\"1\":{\"75\":1}}],[\"可以自己选择安装的路径\",{\"1\":{\"72\":1}}],[\"可以参考\",{\"1\":{\"57\":1}}],[\"可以方便地对拍\",{\"1\":{\"49\":1}}],[\"可以为切片动态添加元素\",{\"1\":{\"285\":1}}],[\"可以为\",{\"1\":{\"49\":1}}],[\"可以管理\",{\"1\":{\"46\":1}}],[\"可以直接修改package\",{\"1\":{\"28\":1}}],[\"可以指定新大小并指定新元素的默认值\",{\"1\":{\"17\":1}}],[\"可以指定容器的大小和初始值\",{\"1\":{\"17\":1}}],[\"可以指定容器的大小\",{\"1\":{\"17\":1}}],[\"可以使用匿名变量\",{\"1\":{\"311\":1}}],[\"可以使用更简略的\",{\"1\":{\"310\":1}}],[\"可以使用fmt包配合动词\",{\"1\":{\"293\":1}}],[\"可以使用一个常量定义\",{\"1\":{\"293\":1}}],[\"可以使用常量定义\",{\"1\":{\"293\":1}}],[\"可以使用\",{\"1\":{\"174\":1,\"188\":1}}],[\"可以使用下标运算符\",{\"1\":{\"17\":1}}],[\"可以使用初始化列表来初始化vector\",{\"1\":{\"17\":1}}],[\"可以这样声明\",{\"1\":{\"17\":1}}],[\"e698a5e7949f\",{\"1\":{\"261\":2}}],[\"e或\",{\"1\":{\"260\":2}}],[\"err\",{\"1\":{\"253\":7,\"255\":2,\"267\":1,\"268\":1,\"269\":1,\"271\":3}}],[\"errors\",{\"1\":{\"255\":2}}],[\"errorf函数新加了一个\",{\"1\":{\"255\":1}}],[\"errorf\",{\"0\":{\"255\":1},\"1\":{\"255\":4}}],[\"error\",{\"1\":{\"226\":2,\"231\":2,\"253\":3,\"255\":2,\"267\":1,\"268\":1,\"269\":1,\"271\":3,\"305\":1}}],[\"erase\",{\"1\":{\"17\":4,\"332\":1}}],[\"e+308\",{\"1\":{\"181\":3}}],[\"e+38\",{\"1\":{\"181\":3}}],[\"eof\",{\"1\":{\"147\":2}}],[\"echo\",{\"1\":{\"144\":1,\"146\":1,\"150\":3,\"152\":1,\"154\":4,\"156\":5,\"160\":4,\"161\":2,\"162\":2}}],[\"echarts\",{\"1\":{\"28\":1}}],[\"edu\",{\"1\":{\"136\":9}}],[\"education\",{\"1\":{\"97\":1,\"98\":1}}],[\"exit\",{\"1\":{\"254\":1,\"257\":1,\"258\":1,\"262\":1,\"264\":1,\"267\":1,\"268\":1,\"269\":1}}],[\"exists\",{\"1\":{\"174\":2,\"176\":3,\"184\":2}}],[\"extists\",{\"1\":{\"174\":1}}],[\"extra\",{\"1\":{\"140\":1}}],[\"export\",{\"1\":{\"153\":2}}],[\"exception\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"224\":3}}],[\"except\",{\"1\":{\"90\":1,\"91\":2,\"97\":1,\"98\":2}}],[\"execute\",{\"1\":{\"188\":1}}],[\"exe\",{\"1\":{\"72\":1,\"133\":1,\"297\":1}}],[\"example\",{\"1\":{\"57\":2}}],[\"envs\",{\"1\":{\"136\":2}}],[\"environment\",{\"1\":{\"39\":1}}],[\"encoding=\",{\"1\":{\"82\":1,\"91\":1,\"98\":1}}],[\"engine的\",{\"1\":{\"35\":1}}],[\"enhance\",{\"1\":{\"28\":1}}],[\"end=\",{\"1\":{\"82\":1}}],[\"endl\",{\"1\":{\"17\":2,\"224\":7,\"226\":2,\"228\":2,\"229\":2,\"230\":2,\"231\":7,\"233\":2,\"234\":5}}],[\"end\",{\"1\":{\"17\":5,\"332\":2}}],[\"embedded\",{\"1\":{\"28\":1}}],[\"emp\",{\"1\":{\"183\":3,\"187\":2,\"203\":3}}],[\"empty\",{\"1\":{\"17\":1,\"328\":1}}],[\"emplace\",{\"1\":{\"17\":8}}],[\"e\",{\"1\":{\"27\":3,\"90\":2,\"91\":4,\"97\":2,\"98\":4,\"181\":2,\"224\":6,\"255\":2,\"260\":4,\"300\":2,\"311\":2,\"313\":1}}],[\"eles\",{\"1\":{\"101\":2}}],[\"ele\",{\"1\":{\"90\":1,\"91\":1,\"97\":2,\"98\":2,\"101\":3}}],[\"element改为auto\",{\"1\":{\"17\":1}}],[\"element\",{\"1\":{\"17\":4}}],[\"elif\",{\"1\":{\"81\":2,\"82\":2}}],[\"else也必须与上一个if或else\",{\"1\":{\"315\":1}}],[\"else\",{\"1\":{\"17\":1,\"81\":1,\"82\":3,\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"123\":1,\"126\":1,\"286\":2,\"305\":1,\"315\":4,\"316\":2}}],[\"在while后添加一个条件表达式\",{\"1\":{\"316\":1}}],[\"在windows菜单栏搜索\",{\"1\":{\"135\":1}}],[\"在定义枚举时很有用\",{\"1\":{\"312\":1}}],[\"在整个程序运行期间它们的值都不能再发生变化了\",{\"1\":{\"311\":1}}],[\"在lua等编程语言里\",{\"1\":{\"311\":1}}],[\"在函数内部\",{\"1\":{\"310\":1}}],[\"在涉及到二进制传输\",{\"1\":{\"291\":1}}],[\"在完整切片表达式中只有第一个索引值\",{\"1\":{\"278\":1}}],[\"在输出右边填充空白而不是默认的左边\",{\"1\":{\"265\":1}}],[\"在这里我们按照占位符将被替换的变量类型划分\",{\"1\":{\"256\":1}}],[\"在这个过程中两个线程会不断对引用计数进行自增和自减操作\",{\"1\":{\"230\":1}}],[\"在这个页面中可以设置题目的时间限制\",{\"1\":{\"51\":1}}],[\"在modify中修改的是b的副本x\",{\"1\":{\"247\":1}}],[\"在modify中修改的是a的副本x\",{\"1\":{\"247\":1}}],[\"在mysql数据库当中\",{\"1\":{\"180\":1}}],[\"在go语言中是单独的语句\",{\"1\":{\"319\":1}}],[\"在go语言中\",{\"1\":{\"237\":1}}],[\"在结点连接前后这两个资源对应的引用计数就是1\",{\"1\":{\"234\":1}}],[\"在程序的最后以delete的方式释放这两个结点\",{\"1\":{\"233\":1}}],[\"在需要释放资源的时候调用该删除器进行释放即可\",{\"1\":{\"231\":1}}],[\"在releaseref函数中\",{\"1\":{\"230\":1}}],[\"在调用拷贝构造函数和拷贝赋值函数时\",{\"1\":{\"230\":1}}],[\"在析构函数中\",{\"1\":{\"229\":1}}],[\"在析构函数中释放资源\",{\"1\":{\"226\":2}}],[\"在拷贝赋值函数中\",{\"1\":{\"226\":1,\"229\":1}}],[\"在拷贝构造函数中\",{\"1\":{\"226\":1,\"229\":1}}],[\"在构造对象时将删除器保存下来\",{\"1\":{\"231\":1}}],[\"在构造shared\",{\"1\":{\"231\":1}}],[\"在构造smartptr对象时\",{\"1\":{\"224\":1}}],[\"在构造函数中获取资源\",{\"1\":{\"226\":2,\"229\":1}}],[\"在对象析构的时候释放资源\",{\"1\":{\"225\":1}}],[\"在对象构造时获取资源\",{\"1\":{\"225\":1}}],[\"在shared\",{\"1\":{\"229\":1,\"230\":1}}],[\"在smartptr对象析构时\",{\"1\":{\"224\":1}}],[\"在sql语句当中构造条件的运算符分为两类\",{\"1\":{\"192\":1}}],[\"在建表时\",{\"1\":{\"220\":1}}],[\"在实际的业务开发中\",{\"1\":{\"214\":1}}],[\"在指定的集合范围之内\",{\"1\":{\"210\":1}}],[\"在指定位置插入元素\",{\"1\":{\"17\":1,\"332\":1}}],[\"在查询时给多表查询加上连接查询的条件\",{\"1\":{\"203\":1}}],[\"在多表查询时\",{\"1\":{\"203\":1}}],[\"在比如\",{\"1\":{\"200\":1}}],[\"在任意一方加入外键\",{\"1\":{\"199\":1}}],[\"在现在的企业开发中\",{\"1\":{\"198\":1}}],[\"在业务层逻辑中\",{\"1\":{\"198\":1}}],[\"在数据库表中多的一方\",{\"1\":{\"198\":1}}],[\"在进行数据库表结构设计时\",{\"1\":{\"197\":1}}],[\"在根据指定的列统计的时候\",{\"1\":{\"193\":1}}],[\"在in之后的列表中的值\",{\"1\":{\"192\":1}}],[\"在某个范围之内\",{\"1\":{\"192\":1}}],[\"在基本查询的\",{\"1\":{\"191\":1}}],[\"在修改数据时\",{\"1\":{\"187\":1}}],[\"在同一个数据库服务器中\",{\"1\":{\"174\":1}}],[\"在命令行中输入密码\",{\"1\":{\"167\":1}}],[\"在命令行中输入nvcc\",{\"1\":{\"138\":1}}],[\"在执行\",{\"1\":{\"156\":1}}],[\"在新建环境之前建议更改默认的pip源和conda源可加速下载速度\",{\"1\":{\"140\":1}}],[\"在架构和训练方法上进行了重大改进\",{\"1\":{\"130\":1}}],[\"在之前\",{\"1\":{\"130\":1}}],[\"在行中间执行时\",{\"1\":{\"76\":1}}],[\"在选择框中有简要介绍\",{\"1\":{\"54\":1}}],[\"在其它地方出题\",{\"1\":{\"49\":1}}],[\"在本教程中\",{\"1\":{\"27\":1}}],[\"在使用多重赋值时\",{\"1\":{\"311\":1}}],[\"在使用int和\",{\"1\":{\"291\":1}}],[\"在使用迭代器或循环遍历\",{\"1\":{\"17\":1}}],[\"在使用vector之前\",{\"1\":{\"17\":1}}],[\"在循环中修改容器\",{\"1\":{\"17\":1}}],[\"在\",{\"1\":{\"17\":1,\"49\":1,\"55\":1,\"317\":1}}],[\"在第三个位置插入元素\",{\"1\":{\"17\":1}}],[\"+或fmt\",{\"1\":{\"299\":1}}],[\"+q\",{\"1\":{\"265\":1}}],[\"+v\",{\"1\":{\"257\":2}}],[\"+x\",{\"1\":{\"144\":1,\"153\":1,\"156\":1}}],[\"+city\",{\"1\":{\"82\":2}}],[\"+=\",{\"1\":{\"82\":5,\"123\":1,\"126\":1,\"286\":2,\"323\":1}}],[\"++引用计数\",{\"1\":{\"230\":1}}],[\"++\",{\"1\":{\"229\":2,\"230\":1,\"319\":1}}],[\"++j\",{\"1\":{\"17\":2}}],[\"++i\",{\"1\":{\"17\":3}}],[\"++it\",{\"1\":{\"17\":4}}],[\"+\",{\"1\":{\"17\":3,\"76\":7,\"81\":1,\"82\":1,\"89\":2,\"91\":2,\"96\":2,\"98\":2,\"107\":4,\"109\":2,\"112\":6,\"116\":2,\"120\":2,\"136\":1,\"219\":4,\"265\":1,\"286\":1,\"294\":2,\"302\":1,\"313\":2,\"319\":1}}],[\"b表示二进制\",{\"1\":{\"292\":1}}],[\"b+tree\",{\"1\":{\"219\":8}}],[\"between\",{\"1\":{\"192\":1}}],[\"begin\",{\"1\":{\"17\":8,\"215\":1,\"332\":2}}],[\"big\",{\"1\":{\"301\":1}}],[\"bigint\",{\"1\":{\"181\":1}}],[\"bioconda\",{\"1\":{\"136\":1}}],[\"bin\",{\"1\":{\"135\":2,\"144\":7,\"156\":1}}],[\"b2bd99163d8d5d91f9d80dbe5e761275\",{\"1\":{\"97\":1}}],[\"blogimage\",{\"1\":{\"97\":1}}],[\"blob\",{\"1\":{\"97\":1,\"181\":1}}],[\"bash\",{\"1\":{\"144\":7,\"156\":1}}],[\"base环境的版本与下载的anaconda3版本有关\",{\"1\":{\"140\":1}}],[\"base\",{\"1\":{\"96\":1,\"98\":1}}],[\"bar\",{\"1\":{\"109\":4,\"110\":1,\"112\":6,\"120\":1}}],[\"back\",{\"1\":{\"17\":9,\"332\":2}}],[\"breakdemo1\",{\"1\":{\"317\":3}}],[\"break语句还可以在语句后面添加标签\",{\"1\":{\"317\":1}}],[\"break语句可以结束for\",{\"1\":{\"317\":1}}],[\"breaktag\",{\"1\":{\"317\":2}}],[\"breakflag\",{\"1\":{\"317\":3}}],[\"break\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1,\"305\":1,\"317\":4}}],[\"brandindustry\",{\"1\":{\"90\":1,\"91\":1}}],[\"brandname\",{\"1\":{\"90\":1,\"91\":1}}],[\"btn\",{\"1\":{\"90\":3,\"91\":3,\"97\":8,\"98\":5}}],[\"bool\",{\"1\":{\"230\":1,\"231\":1,\"267\":1,\"268\":1,\"269\":1,\"272\":1,\"274\":2,\"296\":1,\"305\":1,\"306\":1,\"307\":1,\"317\":1,\"328\":6}}],[\"bourne\",{\"1\":{\"144\":2}}],[\"border\",{\"1\":{\"117\":2,\"120\":2}}],[\"body\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"bottom=\",{\"1\":{\"110\":2,\"111\":1,\"112\":3,\"119\":1,\"120\":1}}],[\"bottom\",{\"1\":{\"90\":1,\"91\":1,\"97\":2,\"98\":2}}],[\"boss直聘\",{\"0\":{\"85\":1},\"1\":{\"80\":1,\"91\":1,\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"boss\",{\"1\":{\"80\":4,\"91\":4},\"2\":{\"103\":1}}],[\"byte类型相互转换\",{\"1\":{\"300\":1}}],[\"byte和rune类型\",{\"0\":{\"300\":1}}],[\"byte\",{\"0\":{\"261\":1},\"1\":{\"261\":1,\"300\":3,\"301\":2,\"305\":1}}],[\"bytes1\",{\"1\":{\"301\":3}}],[\"bytes\",{\"1\":{\"181\":10}}],[\"by\",{\"1\":{\"73\":1,\"190\":4,\"194\":1,\"195\":2}}],[\"bufio\",{\"0\":{\"270\":1},\"1\":{\"270\":2,\"272\":1}}],[\"bundler\",{\"1\":{\"28\":2}}],[\"build\",{\"1\":{\"28\":2,\"31\":1}}],[\"b\",{\"1\":{\"17\":2,\"107\":1,\"109\":1,\"112\":2,\"116\":1,\"117\":1,\"120\":2,\"203\":1,\"204\":1,\"224\":12,\"238\":2,\"246\":1,\"247\":3,\"259\":2,\"260\":2,\"274\":3,\"287\":4,\"292\":3,\"300\":1,\"302\":3,\"307\":1,\"313\":1,\"315\":1,\"316\":1,\"317\":3,\"322\":2}}],[\"插入的数据大小\",{\"1\":{\"186\":1}}],[\"插入数据时\",{\"1\":{\"186\":1}}],[\"插入和删除指定位置的元素\",{\"1\":{\"17\":1}}],[\"插入元素\",{\"1\":{\"17\":1,\"332\":1}}],[\"个指针\",{\"1\":{\"219\":1}}],[\"个\",{\"1\":{\"219\":1,\"332\":1}}],[\"个元素\",{\"1\":{\"17\":1,\"219\":5}}],[\"个人介绍\",{\"0\":{\"0\":1}}],[\"它包含了三个信息\",{\"1\":{\"280\":1}}],[\"它包含了大量的科学计算库和工具\",{\"1\":{\"131\":1}}],[\"它默认为0\",{\"1\":{\"278\":1}}],[\"它会将得到的结果切片的容量设置为max\",{\"1\":{\"278\":1}}],[\"它会分配新的内存\",{\"1\":{\"16\":1}}],[\"它会分配一块更大的内存\",{\"1\":{\"16\":1}}],[\"它们必须满足low\",{\"1\":{\"277\":1}}],[\"它有两种变体\",{\"1\":{\"276\":1}}],[\"它的内部结构包含地址\",{\"1\":{\"273\":1}}],[\"它非常灵活\",{\"1\":{\"273\":1}}],[\"它在遇到换行时才停止扫描\",{\"1\":{\"269\":1}}],[\"它主要是用来解决shared\",{\"1\":{\"234\":1}}],[\"它对数据库中的数据的改变就是永久的\",{\"1\":{\"216\":1}}],[\"它对数据库的改变将是永久性的\",{\"1\":{\"216\":1}}],[\"它是基于数组类型做的一层封装\",{\"1\":{\"273\":1}}],[\"它是一个不可分割的工作单位\",{\"1\":{\"214\":1}}],[\"它是一个可交互性的网页\",{\"1\":{\"90\":1}}],[\"它是对一列的值进行计算\",{\"1\":{\"193\":1}}],[\"它由\",{\"1\":{\"137\":1}}],[\"它以尖端的准确性\",{\"1\":{\"130\":1}}],[\"它可能会频繁地重新分配内存\",{\"1\":{\"17\":1}}],[\"它不会更改\",{\"1\":{\"17\":1}}],[\"填充\",{\"1\":{\"17\":1}}],[\"将一个表达式的值赋给一个左值\",{\"1\":{\"323\":1}}],[\"将一列数据作为一个整体\",{\"1\":{\"193\":1}}],[\"将s1直接赋值给s2\",{\"1\":{\"283\":1}}],[\"将空白符分割的数据分别存在指定的参数\",{\"1\":{\"267\":1}}],[\"将listnode中的next和prev成员的类型换成weak\",{\"1\":{\"234\":1}}],[\"将这两个结点连接起来后\",{\"1\":{\"233\":1}}],[\"将拷贝赋值函数和析构函数中引用计数的自减操作提取出来\",{\"1\":{\"230\":1}}],[\"将管理的资源对应的引用计数\",{\"1\":{\"229\":1,\"230\":2,\"231\":1}}],[\"将管理资源对应的引用计数\",{\"1\":{\"229\":1}}],[\"将其他的字段放在另外一张表当中\",{\"1\":{\"199\":1}}],[\"将其修改为当前操作时间\",{\"1\":{\"187\":1}}],[\"将大表中的一些基础字段放在一张表当中\",{\"1\":{\"199\":1}}],[\"将该字段值置为\",{\"1\":{\"188\":1}}],[\"将\",{\"1\":{\"187\":1}}],[\"将会报错\",{\"1\":{\"176\":1}}],[\"将上图这三个文件复制粘贴到cuda的文件夹地址下\",{\"1\":{\"139\":1}}],[\"将具体数据固定在表格的右边\",{\"1\":{\"109\":1}}],[\"将错解传上来可以便捷地卡掉它们\",{\"1\":{\"59\":1}}],[\"将项目\",{\"1\":{\"54\":1}}],[\"将本地\",{\"1\":{\"31\":1}}],[\"将当前暂存区中的更改提交到本地\",{\"1\":{\"31\":1}}],[\"将当前目录下的所有更改\",{\"1\":{\"31\":1}}],[\"将就地构造的元素插入到向量中\",{\"1\":{\"17\":1}}],[\"将向量的大小调整为\",{\"1\":{\"17\":2}}],[\"将现有元素从旧内存复制到新内存中\",{\"1\":{\"16\":1}}],[\"的构造函数\",{\"1\":{\"332\":2}}],[\"的动态数组实现\",{\"1\":{\"332\":1}}],[\"的文本处理更为方便\",{\"1\":{\"300\":1}}],[\"的浮点数的最大范围约为\",{\"1\":{\"293\":2}}],[\"的元素数量等都可以用int来表示\",{\"1\":{\"291\":1}}],[\"的元素个数\",{\"1\":{\"219\":1}}],[\"的两倍\",{\"1\":{\"286\":1}}],[\"的特殊\",{\"1\":{\"257\":1}}],[\"的方式进行释放\",{\"1\":{\"231\":1}}],[\"的方式申请到的内存空间必须以delete\",{\"1\":{\"231\":1}}],[\"的方式申请到的空间\",{\"1\":{\"231\":1}}],[\"的简单技术\",{\"1\":{\"225\":1}}],[\"的高度\",{\"1\":{\"219\":1}}],[\"的时候就会找到数据大概是\",{\"1\":{\"219\":1}}],[\"的顺序保存的\",{\"1\":{\"219\":1}}],[\"的效率\",{\"1\":{\"218\":1}}],[\"的事务是自动提交\",{\"1\":{\"215\":1}}],[\"的任何一个\",{\"1\":{\"208\":1}}],[\"的所有数据\",{\"1\":{\"206\":2}}],[\"的所有组合情况\",{\"1\":{\"203\":1}}],[\"的行\",{\"1\":{\"193\":1}}],[\"的员工\",{\"1\":{\"187\":1}}],[\"的性能会更高些\",{\"1\":{\"181\":1}}],[\"的值等于\",{\"1\":{\"292\":1}}],[\"的值\",{\"1\":{\"181\":2}}],[\"的数据列是一个正数序列开始增长\",{\"1\":{\"180\":1}}],[\"的人工智能研究小组开发\",{\"1\":{\"137\":1}}],[\"的安装\",{\"0\":{\"138\":1,\"139\":1}}],[\"的安装位置\",{\"1\":{\"134\":1}}],[\"的安装教程\",{\"1\":{\"75\":1}}],[\"的环境\",{\"1\":{\"130\":1}}],[\"的最后一个\",{\"1\":{\"90\":1,\"97\":1}}],[\"的地方\",{\"1\":{\"61\":1}}],[\"的\",{\"1\":{\"60\":1,\"167\":1}}],[\"的其它代码的\",{\"1\":{\"53\":1}}],[\"的语法\",{\"1\":{\"52\":1}}],[\"的大部分功能都不需要学\",{\"1\":{\"50\":1}}],[\"的大小\",{\"1\":{\"17\":2}}],[\"的使命是为创建编程竞赛题目提供平台\",{\"1\":{\"49\":1}}],[\"的运行环境\",{\"1\":{\"34\":1,\"69\":1}}],[\"的源\",{\"1\":{\"32\":1}}],[\"的格式\",{\"1\":{\"31\":1}}],[\"的仓库\",{\"1\":{\"31\":1}}],[\"的报错是正常的\",{\"1\":{\"28\":1}}],[\"的工作流\",{\"1\":{\"27\":1}}],[\"的过程中可能会使迭代器失效\",{\"1\":{\"17\":1}}],[\"的自动类型推导\",{\"1\":{\"17\":1}}],[\"的内容\",{\"1\":{\"17\":1}}],[\"的末尾插入新元素\",{\"1\":{\"17\":1}}],[\"的末尾添加一个元素\",{\"1\":{\"17\":1}}],[\"的起始和结束迭代器\",{\"1\":{\"17\":1}}],[\"获取迭代器的结束位置\",{\"1\":{\"332\":1}}],[\"获取迭代器的起始位置\",{\"1\":{\"332\":1}}],[\"获取元素\",{\"1\":{\"332\":1}}],[\"获取元素数量\",{\"1\":{\"17\":1}}],[\"获取子串\",{\"1\":{\"328\":1}}],[\"获取字符串当前容量\",{\"1\":{\"328\":1}}],[\"获取字符串长度\",{\"1\":{\"154\":1,\"328\":1}}],[\"获取对象的长度的内建len\",{\"1\":{\"291\":1}}],[\"获取对应职业文件姓名\",{\"1\":{\"123\":1}}],[\"获取sp对象管理的资源对应的互斥锁\",{\"1\":{\"230\":1}}],[\"获取sp对象管理的资源对应的引用计数\",{\"1\":{\"229\":1,\"230\":1}}],[\"获取引用计数\",{\"1\":{\"229\":1,\"230\":1}}],[\"获取\",{\"1\":{\"123\":1,\"328\":1}}],[\"获取的数据与地图一样\",{\"1\":{\"117\":1}}],[\"获取的是工作岗位的数量\",{\"1\":{\"116\":1}}],[\"获取数据与上图一样\",{\"1\":{\"115\":1}}],[\"获取所有职位信息所在的div标签\",{\"1\":{\"101\":1}}],[\"获取到\",{\"1\":{\"94\":1}}],[\"获取城市编码\",{\"1\":{\"89\":1,\"91\":1,\"96\":1,\"98\":1}}],[\"获取城市对应省份全称\",{\"1\":{\"81\":1}}],[\"获取单位\",{\"1\":{\"81\":1}}],[\"获取首尾迭代器\",{\"1\":{\"17\":1}}],[\"获取容器大小\",{\"1\":{\"332\":1}}],[\"获取容器大小和容量\",{\"1\":{\"17\":1}}],[\"获取容器容量\",{\"1\":{\"17\":1,\"332\":1}}],[\"而变量a和b都是int类型的\",{\"1\":{\"302\":1}}],[\"而且还允许我们用\",{\"1\":{\"292\":1}}],[\"而输入的内容可能包含空格\",{\"1\":{\"270\":1}}],[\"而如果连接结点时只进行一个连接操作\",{\"1\":{\"233\":1}}],[\"而如果将shared\",{\"1\":{\"229\":1}}],[\"而node1当中的next成员的释放又取决于node1\",{\"1\":{\"233\":1}}],[\"而node2的释放取决于node1当中的\",{\"1\":{\"233\":1}}],[\"而在定义这个成员变量时就需要指定删除器的类型\",{\"1\":{\"231\":1}}],[\"而文件指针必须通过调用fclose函数进行释放\",{\"1\":{\"231\":1}}],[\"而这块空间的线程安全问题应该由这块空间的操作者来保证\",{\"1\":{\"230\":1}}],[\"而自增和自减操作都不是原子操作\",{\"1\":{\"230\":1}}],[\"而管理不同资源的对象访问到的就是不同的引用计数了\",{\"1\":{\"229\":1}}],[\"而当多个对象要管理同一个资源时\",{\"1\":{\"229\":1}}],[\"而每个节点一共能存储\",{\"1\":{\"219\":1}}],[\"而一个节点总共容量是\",{\"1\":{\"219\":1}}],[\"而一个身份证也只能关联一个用户\",{\"1\":{\"199\":1}}],[\"而我们在日常开发使用时\",{\"1\":{\"206\":1}}],[\"而第二张表存放的就是用户的身份信息\",{\"1\":{\"199\":1}}],[\"而是加入\",{\"1\":{\"331\":1,\"332\":1}}],[\"而是考虑int和uint可能在不同平台上的差异\",{\"1\":{\"291\":1}}],[\"而是需要在releaseref函数中进行调用\",{\"1\":{\"231\":1}}],[\"而是exit\",{\"1\":{\"157\":1}}],[\"而是直接交换指向元素的内部指针\",{\"1\":{\"17\":1}}],[\"而不应该使用s\",{\"1\":{\"281\":1}}],[\"而不是len\",{\"1\":{\"277\":1}}],[\"而不是长度\",{\"1\":{\"277\":1}}],[\"而不是通过拷贝构造或移动构造\",{\"1\":{\"17\":1}}],[\"而不需要保证管理的资源的线程安全问题\",{\"1\":{\"230\":1}}],[\"而不会被消息刷屏却一直没有\",{\"1\":{\"49\":1}}],[\"而\",{\"1\":{\"17\":2,\"181\":1,\"194\":2,\"219\":1}}],[\"c2\",{\"1\":{\"294\":3}}],[\"c1\",{\"1\":{\"294\":3}}],[\"cpp\",{\"1\":{\"231\":4}}],[\"cpu\",{\"1\":{\"218\":1}}],[\"cin\",{\"1\":{\"224\":3}}],[\"cityslice\",{\"1\":{\"285\":8}}],[\"cityarray\",{\"1\":{\"240\":2,\"241\":5}}],[\"cityname\",{\"1\":{\"90\":1,\"91\":1}}],[\"citylist\",{\"1\":{\"89\":2,\"91\":1}}],[\"city=101200100\",{\"1\":{\"91\":1}}],[\"city=100010000\",{\"1\":{\"87\":2}}],[\"city=city\",{\"1\":{\"80\":2,\"91\":1,\"98\":1}}],[\"city可以知道是职业的地区参数\",{\"1\":{\"86\":1}}],[\"city\",{\"1\":{\"80\":5,\"81\":1,\"82\":32,\"86\":1,\"89\":7,\"91\":14,\"96\":7,\"98\":14,\"100\":1}}],[\"create|os\",{\"1\":{\"253\":1}}],[\"create\",{\"1\":{\"140\":1,\"174\":2,\"176\":1,\"179\":1,\"182\":1,\"198\":1,\"220\":1}}],[\"crashed\",{\"1\":{\"58\":1}}],[\"cn\",{\"1\":{\"136\":9}}],[\"cname\",{\"1\":{\"101\":1}}],[\"current\",{\"1\":{\"332\":1}}],[\"cursive\",{\"1\":{\"124\":1,\"126\":1}}],[\"cu118\",{\"1\":{\"140\":1}}],[\"cudnn就是一个压缩包\",{\"1\":{\"139\":1}}],[\"cudnn网址需要注册账号并登录\",{\"1\":{\"139\":1}}],[\"cudnn\",{\"1\":{\"139\":1}}],[\"cudnn的版本号下载时要注意与cuda版本号对应\",{\"1\":{\"139\":1}}],[\"cuda版本向下兼容\",{\"1\":{\"138\":1}}],[\"cuda\",{\"1\":{\"138\":4,\"139\":3}}],[\"customize\",{\"1\":{\"72\":1}}],[\"center\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"center=\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"117\":1,\"120\":2}}],[\"csh\",{\"1\":{\"144\":1}}],[\"css\",{\"1\":{\"90\":2,\"91\":1,\"97\":3,\"98\":2,\"101\":5}}],[\"csv\",{\"1\":{\"80\":9,\"82\":8,\"90\":1,\"91\":6,\"97\":1,\"98\":6,\"106\":2,\"112\":2,\"120\":2,\"123\":2,\"126\":2},\"2\":{\"83\":1}}],[\"ctrl+alt+enter\",{\"1\":{\"76\":1}}],[\"ctrl\",{\"1\":{\"76\":9}}],[\"check\",{\"1\":{\"286\":1}}],[\"checker\",{\"1\":{\"49\":1,\"52\":1,\"53\":1,\"54\":6,\"56\":1,\"60\":1,\"62\":2}}],[\"chunsheng\",{\"1\":{\"269\":2,\"270\":1}}],[\"chmod\",{\"1\":{\"144\":1,\"156\":1}}],[\"char\",{\"1\":{\"181\":5,\"328\":5}}],[\"charts\",{\"1\":{\"112\":1,\"120\":1,\"126\":1}}],[\"chart\",{\"0\":{\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"116\":1,\"117\":1,\"118\":1},\"1\":{\"107\":1,\"108\":1,\"110\":3,\"111\":1,\"112\":8,\"116\":3,\"117\":3,\"118\":5,\"119\":1,\"120\":12}}],[\"chan\",{\"1\":{\"305\":1}}],[\"change\",{\"1\":{\"183\":2}}],[\"changestring\",{\"1\":{\"301\":1}}],[\"changes\",{\"1\":{\"62\":1}}],[\"channel\",{\"1\":{\"136\":1,\"289\":1,\"317\":2}}],[\"channels\",{\"1\":{\"136\":12}}],[\"chromiumpage区别于sessionpage\",{\"1\":{\"90\":1}}],[\"chromiumpage\",{\"1\":{\"82\":1,\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"101\":2}}],[\"chrome\",{\"1\":{\"35\":1}}],[\"cf\",{\"1\":{\"49\":2}}],[\"c\",{\"0\":{\"343\":1},\"1\":{\"39\":1,\"80\":2,\"82\":2,\"96\":1,\"98\":1,\"101\":2,\"106\":2,\"107\":1,\"108\":1,\"109\":1,\"112\":5,\"116\":1,\"117\":1,\"120\":4,\"124\":1,\"126\":4,\"136\":1,\"144\":1,\"259\":2,\"274\":4,\"287\":5,\"292\":3,\"297\":1,\"300\":2,\"302\":3,\"304\":1,\"307\":1,\"313\":1,\"315\":1,\"316\":1,\"317\":2,\"328\":3}}],[\"case\",{\"1\":{\"305\":1,\"317\":13}}],[\"calculation\",{\"1\":{\"286\":1}}],[\"calculable=true\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"cap\",{\"1\":{\"277\":9,\"278\":4,\"279\":4,\"280\":1,\"282\":3,\"285\":12,\"286\":17,\"305\":1}}],[\"capacity\",{\"1\":{\"17\":3,\"328\":2,\"332\":4}}],[\"catch\",{\"1\":{\"224\":4}}],[\"cache\",{\"1\":{\"28\":1,\"39\":1,\"40\":2}}],[\"cd\",{\"1\":{\"27\":1}}],[\"cmd\",{\"1\":{\"27\":1,\"40\":1}}],[\"c++一样\",{\"1\":{\"304\":1}}],[\"c++标准库中实现shared\",{\"1\":{\"231\":1}}],[\"c++标准库中的shared\",{\"1\":{\"231\":1}}],[\"c++\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1},\"2\":{\"18\":1,\"235\":1,\"329\":1,\"333\":1}}],[\"c++11\",{\"1\":{\"17\":1}}],[\"c++11之后\",{\"1\":{\"17\":1}}],[\"copy\",{\"1\":{\"230\":1,\"287\":4,\"305\":1}}],[\"count获取这两个资源对应的引用计数就会发现\",{\"1\":{\"234\":1}}],[\"count成员函数\",{\"1\":{\"228\":1}}],[\"count\",{\"1\":{\"123\":6,\"126\":6,\"193\":2,\"228\":2,\"229\":1,\"230\":2,\"234\":4}}],[\"cout\",{\"1\":{\"17\":6,\"224\":7,\"226\":2,\"228\":2,\"229\":2,\"230\":2,\"231\":7,\"233\":2,\"234\":5}}],[\"column1\",{\"1\":{\"208\":2}}],[\"color=\",{\"1\":{\"107\":2,\"111\":1,\"112\":3,\"116\":2,\"117\":1,\"119\":1,\"120\":4}}],[\"cols\",{\"1\":{\"17\":6}}],[\"code\",{\"1\":{\"89\":3,\"91\":3,\"96\":4,\"98\":4,\"157\":1,\"254\":1,\"257\":1,\"258\":1,\"262\":1,\"264\":1,\"267\":1,\"268\":1,\"269\":1,\"297\":1}}],[\"codeforces\",{\"1\":{\"49\":1}}],[\"const中每新增一行常量声明将使iota计数一次\",{\"1\":{\"312\":1}}],[\"const同时声明多个常量时\",{\"1\":{\"311\":1}}],[\"constants\",{\"1\":{\"305\":1}}],[\"const\",{\"1\":{\"230\":1,\"231\":3,\"234\":2,\"305\":1,\"311\":5,\"312\":1,\"313\":5,\"328\":25,\"332\":4}}],[\"constraint\",{\"1\":{\"198\":2}}],[\"consistency\",{\"1\":{\"216\":2}}],[\"contains\",{\"1\":{\"299\":1}}],[\"control\",{\"1\":{\"170\":1}}],[\"continuedemo\",{\"1\":{\"317\":1}}],[\"continue语句后添加标签时\",{\"1\":{\"317\":1}}],[\"continue语句可以结束当前循环\",{\"1\":{\"317\":1}}],[\"continue\",{\"1\":{\"82\":2,\"305\":1,\"317\":1}}],[\"conda镜像源的配置\",{\"1\":{\"136\":1}}],[\"condarc\",{\"1\":{\"136\":1}}],[\"conda\",{\"1\":{\"135\":1,\"136\":14,\"140\":2}}],[\"concat\",{\"1\":{\"80\":1}}],[\"config\",{\"1\":{\"31\":1,\"40\":2,\"136\":12},\"2\":{\"25\":1}}],[\"complex\",{\"1\":{\"305\":1}}],[\"complex128的实部和虚部为64位\",{\"1\":{\"294\":1}}],[\"complex128\",{\"1\":{\"294\":1,\"305\":1}}],[\"complex64的实部和虚部为32位\",{\"1\":{\"294\":1}}],[\"complex64\",{\"1\":{\"294\":1,\"305\":1}}],[\"complex64和complex128\",{\"1\":{\"294\":1}}],[\"computing\",{\"1\":{\"139\":2}}],[\"companyname\",{\"1\":{\"97\":1,\"98\":1}}],[\"components\",{\"1\":{\"28\":1}}],[\"combined\",{\"1\":{\"80\":2}}],[\"comment\",{\"1\":{\"179\":4,\"183\":4}}],[\"command这条命令的stdout\",{\"1\":{\"157\":1}}],[\"command\",{\"1\":{\"157\":3}}],[\"commons\",{\"1\":{\"112\":1}}],[\"community\",{\"1\":{\"73\":1}}],[\"commit\",{\"1\":{\"31\":1,\"62\":1,\"215\":1}}],[\"com\",{\"1\":{\"31\":2,\"54\":1,\"87\":1,\"89\":1,\"91\":2,\"93\":1,\"96\":1,\"97\":1,\"98\":2,\"100\":2,\"101\":1,\"136\":2,\"325\":1}}],[\"core\",{\"1\":{\"28\":1,\"31\":1}}],[\"cl\",{\"1\":{\"226\":2,\"228\":4,\"229\":1,\"230\":4,\"231\":4,\"234\":1}}],[\"cloud\",{\"1\":{\"136\":6}}],[\"close\",{\"1\":{\"91\":1,\"98\":1,\"305\":1}}],[\"clone\",{\"1\":{\"54\":1}}],[\"click\",{\"1\":{\"90\":1,\"91\":1,\"97\":2,\"98\":2}}],[\"client\",{\"1\":{\"28\":1}}],[\"cleaned\",{\"1\":{\"80\":2}}],[\"clean\",{\"1\":{\"28\":2}}],[\"clear\",{\"1\":{\"17\":2,\"328\":1,\"332\":1}}],[\"class=joblist\",{\"1\":{\"101\":1}}],[\"class\",{\"1\":{\"17\":1,\"90\":2,\"91\":2,\"97\":2,\"98\":2,\"196\":1,\"224\":1,\"226\":2,\"229\":1,\"230\":1,\"231\":3,\"234\":1}}],[\"a>\",{\"1\":{\"325\":1}}],[\"aaa\",{\"1\":{\"308\":2,\"309\":1}}],[\"avg\",{\"1\":{\"193\":2}}],[\"aversal\",{\"1\":{\"82\":2}}],[\"aversal=0\",{\"1\":{\"82\":1}}],[\"aversalary\",{\"1\":{\"82\":2,\"106\":3,\"112\":3,\"120\":3}}],[\"abc\",{\"1\":{\"147\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1}}],[\"age\",{\"1\":{\"267\":5,\"268\":5,\"269\":5,\"272\":4,\"306\":1,\"308\":2,\"309\":1,\"317\":5}}],[\"again\",{\"1\":{\"144\":1}}],[\"agree\",{\"1\":{\"134\":1}}],[\"anonymous\",{\"1\":{\"311\":1}}],[\"an\",{\"1\":{\"286\":1}}],[\"anaconda3\",{\"1\":{\"133\":1,\"135\":4},\"2\":{\"142\":1}}],[\"anaconda清华镜像源下载\",{\"1\":{\"133\":1}}],[\"anaconda可以在windows\",{\"1\":{\"132\":1}}],[\"anaconda官网\",{\"1\":{\"132\":1}}],[\"anaconda\",{\"0\":{\"131\":1},\"1\":{\"131\":1,\"134\":2,\"135\":1,\"136\":13,\"140\":1}}],[\"android\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"and\",{\"1\":{\"80\":2,\"91\":1,\"98\":1,\"192\":2,\"286\":1,\"321\":1}}],[\"axislabel\",{\"1\":{\"109\":2,\"112\":2}}],[\"axisopts\",{\"1\":{\"109\":2,\"112\":2}}],[\"axis\",{\"1\":{\"109\":1,\"112\":1}}],[\"axis=bar\",{\"1\":{\"109\":1,\"112\":1}}],[\"alter\",{\"1\":{\"183\":6,\"198\":1}}],[\"aliyun\",{\"1\":{\"136\":2}}],[\"allocator\",{\"1\":{\"332\":3}}],[\"allocator<t>\",{\"1\":{\"332\":2}}],[\"allocate\",{\"1\":{\"332\":1}}],[\"allargsconstructor\",{\"1\":{\"196\":1}}],[\"all\",{\"1\":{\"134\":1}}],[\"allcity\",{\"1\":{\"96\":1,\"98\":1}}],[\"al智能助手\",{\"1\":{\"46\":1}}],[\"ap\",{\"1\":{\"226\":7}}],[\"ap4\",{\"1\":{\"226\":2}}],[\"ap3\",{\"1\":{\"226\":2}}],[\"ap2\",{\"1\":{\"226\":2}}],[\"ap1\",{\"1\":{\"226\":3}}],[\"application\",{\"1\":{\"270\":1}}],[\"append\",{\"0\":{\"285\":1},\"1\":{\"106\":1,\"112\":1,\"120\":1,\"123\":1,\"126\":1,\"253\":1,\"285\":13,\"288\":2,\"305\":1,\"328\":1}}],[\"appdate\",{\"1\":{\"39\":1}}],[\"api\",{\"1\":{\"96\":1,\"98\":1}}],[\"args\",{\"1\":{\"332\":2}}],[\"args>\",{\"1\":{\"332\":1}}],[\"argument\",{\"1\":{\"224\":3}}],[\"array\",{\"0\":{\"237\":1},\"1\":{\"159\":4,\"160\":5,\"161\":4,\"162\":4}}],[\"array=\",{\"1\":{\"159\":1,\"160\":1,\"161\":1,\"162\":1}}],[\"arrow\",{\"1\":{\"90\":1}}],[\"archive\",{\"1\":{\"138\":1,\"139\":1}}],[\"artplayer\",{\"1\":{\"28\":1}}],[\"asc\",{\"1\":{\"195\":1}}],[\"as\",{\"1\":{\"82\":1,\"90\":1,\"91\":2,\"97\":1,\"98\":2,\"112\":2,\"120\":2,\"126\":2,\"191\":2,\"205\":2}}],[\"acquisition\",{\"1\":{\"225\":1}}],[\"acid\",{\"1\":{\"216\":1}}],[\"acwing\",{\"1\":{\"150\":1}}],[\"acs\",{\"1\":{\"144\":6,\"153\":5,\"156\":2}}],[\"activate\",{\"1\":{\"140\":1}}],[\"ac\",{\"1\":{\"49\":2,\"62\":1,\"144\":2}}],[\"addref\",{\"1\":{\"230\":3}}],[\"add\",{\"1\":{\"31\":3,\"54\":1,\"58\":1,\"107\":1,\"108\":2,\"109\":2,\"110\":3,\"111\":2,\"112\":10,\"116\":1,\"117\":1,\"118\":2,\"119\":2,\"120\":6,\"124\":1,\"125\":1,\"126\":3,\"136\":11,\"183\":2,\"198\":1}}],[\"autocrlf\",{\"1\":{\"31\":1}}],[\"auto\",{\"0\":{\"226\":1},\"1\":{\"17\":3,\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1,\"180\":3,\"226\":13,\"231\":1},\"2\":{\"235\":1}}],[\"a\",{\"1\":{\"17\":5,\"28\":1,\"90\":2,\"91\":1,\"97\":2,\"98\":1,\"203\":1,\"204\":1,\"224\":9,\"237\":1,\"238\":3,\"242\":5,\"243\":4,\"245\":3,\"246\":3,\"247\":3,\"253\":3,\"254\":3,\"255\":1,\"259\":1,\"267\":1,\"268\":1,\"269\":1,\"271\":3,\"274\":3,\"277\":16,\"278\":4,\"279\":6,\"280\":2,\"285\":2,\"287\":8,\"288\":7,\"292\":3,\"299\":1,\"300\":1,\"302\":3,\"307\":1,\"313\":1,\"315\":1,\"316\":1,\"317\":4,\"322\":2}}],[\"atomicity\",{\"1\":{\"216\":2}}],[\"attr\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1,\"101\":2}}],[\"at\",{\"1\":{\"17\":3,\"328\":2,\"332\":1}}],[\"时间戳\",{\"1\":{\"181\":1}}],[\"时间值或持续时间\",{\"1\":{\"181\":1}}],[\"时间轴\",{\"2\":{\"129\":1}}],[\"时间轴的宽度\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"时间线\",{\"0\":{\"111\":1,\"119\":1,\"125\":1}}],[\"时间复杂度\",{\"1\":{\"13\":1}}],[\"时\",{\"1\":{\"17\":2,\"81\":2,\"82\":1}}],[\"switch和\",{\"1\":{\"317\":1}}],[\"switch和select的代码块\",{\"1\":{\"317\":1}}],[\"switchdemo5\",{\"1\":{\"317\":1}}],[\"switchdemo4\",{\"1\":{\"317\":1}}],[\"switchdemo1\",{\"1\":{\"317\":1}}],[\"switch\",{\"1\":{\"305\":1,\"317\":4}}],[\"swap\",{\"1\":{\"17\":5}}],[\"sqrt\",{\"1\":{\"302\":2}}],[\"sqrtdemo\",{\"1\":{\"302\":1}}],[\"sql语句\",{\"1\":{\"215\":1}}],[\"sql优化\",{\"1\":{\"171\":1}}],[\"sql\",{\"0\":{\"168\":1,\"169\":1,\"341\":1},\"1\":{\"168\":1,\"169\":3,\"170\":1,\"203\":1,\"206\":1,\"208\":1,\"214\":4,\"215\":2,\"216\":1}}],[\"syntax\",{\"0\":{\"292\":1}}],[\"symbol\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"slice\",{\"1\":{\"273\":1,\"286\":1}}],[\"sleep\",{\"1\":{\"98\":1}}],[\"s3\",{\"1\":{\"254\":2,\"282\":4}}],[\"s2\",{\"1\":{\"254\":2,\"277\":10,\"282\":4,\"283\":3,\"285\":2,\"296\":1,\"301\":2}}],[\"s1和s2共用一个底层数组\",{\"1\":{\"283\":1}}],[\"s1==nil\",{\"1\":{\"282\":1}}],[\"s1\",{\"1\":{\"254\":3,\"282\":3,\"283\":3,\"296\":1,\"298\":2,\"301\":2}}],[\"support\",{\"1\":{\"270\":1}}],[\"sum\",{\"1\":{\"193\":2}}],[\"substr\",{\"1\":{\"328\":1}}],[\"subset=\",{\"1\":{\"80\":1}}],[\"subtitle=\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"sublist\",{\"1\":{\"96\":1,\"98\":1}}],[\"sublevelmodellist\",{\"1\":{\"89\":2,\"91\":1}}],[\"sub\",{\"1\":{\"89\":2,\"91\":2,\"96\":2,\"98\":2}}],[\"sscan系列\",{\"0\":{\"272\":1}}],[\"ss\",{\"1\":{\"181\":3}}],[\"smartptr的析构函数中会自动将管理的内存空间进行释放\",{\"1\":{\"224\":1}}],[\"smartptr将传入的需要被管理的内存空间保存起来\",{\"1\":{\"224\":1}}],[\"smartptr<int>\",{\"1\":{\"224\":1,\"225\":4}}],[\"smartptr\",{\"1\":{\"224\":2}}],[\"smallint\",{\"1\":{\"181\":1}}],[\"smi\",{\"1\":{\"138\":1}}],[\"signed\",{\"1\":{\"181\":1}}],[\"size=25\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"size\",{\"1\":{\"17\":3,\"124\":1,\"126\":1,\"219\":1,\"230\":3,\"279\":2,\"328\":10,\"332\":9}}],[\"score\",{\"1\":{\"315\":3,\"316\":3}}],[\"scanln遇到回车就结束扫描了\",{\"1\":{\"269\":1}}],[\"scanln类似scan\",{\"1\":{\"269\":1}}],[\"scanln\",{\"0\":{\"269\":1},\"1\":{\"269\":2,\"272\":1}}],[\"scanln三个函数\",{\"1\":{\"266\":1,\"271\":1,\"272\":1}}],[\"scan简单的以空格作为输入数据的分割符\",{\"1\":{\"268\":1}}],[\"scan从标准输入中扫描用户输入的数据\",{\"1\":{\"267\":1}}],[\"scan从标准输入扫描文本\",{\"1\":{\"267\":1}}],[\"scanf不同于fmt\",{\"1\":{\"268\":1}}],[\"scanf从标准输入扫描文本\",{\"1\":{\"268\":1}}],[\"scanf\",{\"0\":{\"268\":1},\"1\":{\"266\":1,\"268\":3,\"271\":1,\"272\":1}}],[\"scan\",{\"0\":{\"267\":1},\"1\":{\"266\":1,\"267\":2,\"271\":1,\"272\":2}}],[\"schemas\",{\"1\":{\"176\":1}}],[\"schema\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1,\"176\":2}}],[\"scroll\",{\"1\":{\"90\":1,\"91\":1,\"97\":2,\"98\":2}}],[\"script\",{\"1\":{\"58\":1}}],[\"scripts\",{\"1\":{\"28\":1,\"135\":1}}],[\"skill\",{\"1\":{\"97\":2,\"98\":2}}],[\"skills\",{\"1\":{\"90\":1,\"91\":1,\"123\":2,\"126\":2}}],[\"sprintln\",{\"1\":{\"254\":2}}],[\"sprintf\",{\"1\":{\"254\":3,\"299\":1}}],[\"sprint系列函数会把传入的数据生成并返回一个字符串\",{\"1\":{\"254\":1}}],[\"sprint\",{\"0\":{\"254\":1},\"1\":{\"254\":2}}],[\"sp4\",{\"1\":{\"225\":2,\"228\":2}}],[\"sp3\",{\"1\":{\"225\":2,\"228\":3,\"231\":1}}],[\"sp2\",{\"1\":{\"225\":1,\"228\":2,\"231\":3}}],[\"sp1\",{\"1\":{\"225\":2,\"228\":4,\"231\":3}}],[\"sp\",{\"1\":{\"224\":1,\"229\":7,\"230\":11,\"234\":4}}],[\"split\",{\"1\":{\"81\":1,\"82\":1,\"123\":1,\"126\":1,\"299\":1}}],[\"spider\",{\"1\":{\"80\":4,\"91\":2,\"98\":2}}],[\"sh\",{\"1\":{\"144\":8,\"156\":4}}],[\"shell脚本在逐行执行\",{\"1\":{\"144\":1}}],[\"shell\",{\"0\":{\"143\":1},\"1\":{\"144\":7,\"156\":1}}],[\"show\",{\"1\":{\"136\":1,\"173\":1,\"176\":1,\"182\":2,\"219\":1,\"220\":1}}],[\"show=true\",{\"1\":{\"107\":2,\"108\":1,\"109\":1,\"111\":1,\"112\":5,\"116\":1,\"117\":1,\"119\":1,\"120\":3}}],[\"show=false\",{\"1\":{\"107\":1,\"108\":1,\"109\":3,\"112\":5,\"116\":1,\"117\":1,\"120\":2}}],[\"shift+enter\",{\"1\":{\"76\":1}}],[\"shift\",{\"1\":{\"76\":3}}],[\"shared\",{\"0\":{\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"231\":1,\"233\":1},\"1\":{\"28\":1,\"228\":6,\"229\":8,\"230\":11,\"231\":10,\"233\":5,\"234\":5},\"2\":{\"235\":1}}],[\"soupager\",{\"1\":{\"97\":7,\"98\":3}}],[\"sou\",{\"1\":{\"93\":1,\"98\":1}}],[\"source\",{\"1\":{\"53\":1,\"54\":1}}],[\"solution\",{\"1\":{\"62\":1}}],[\"solutions\",{\"1\":{\"49\":2,\"53\":1,\"60\":1}}],[\"s\",{\"1\":{\"35\":1,\"136\":1,\"246\":1,\"251\":1,\"253\":1,\"254\":1,\"255\":1,\"261\":7,\"262\":2,\"265\":9,\"268\":1,\"277\":25,\"281\":1,\"282\":1,\"284\":4,\"285\":16,\"300\":5,\"317\":4}}],[\"sep\",{\"1\":{\"299\":1}}],[\"select的代码块上\",{\"1\":{\"317\":1}}],[\"select\",{\"1\":{\"173\":2,\"190\":1,\"191\":4,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"203\":4,\"205\":2,\"206\":2,\"208\":6,\"305\":1}}],[\"self\",{\"1\":{\"89\":11,\"90\":3,\"91\":30,\"96\":12,\"97\":3,\"98\":31}}],[\"series\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"112\":3,\"116\":1,\"117\":1,\"120\":2}}],[\"sensorsdata\",{\"1\":{\"101\":1}}],[\"sessionpage\",{\"1\":{\"82\":1,\"89\":1,\"91\":2,\"96\":1,\"98\":2,\"101\":1}}],[\"set\",{\"1\":{\"40\":2,\"107\":1,\"108\":2,\"109\":1,\"112\":4,\"116\":1,\"117\":1,\"120\":2,\"124\":1,\"126\":1,\"136\":1,\"187\":2,\"286\":1}}],[\"searchtype\",{\"1\":{\"100\":1}}],[\"searchtype=2\",{\"1\":{\"100\":1,\"101\":1}}],[\"search\",{\"1\":{\"28\":1,\"90\":1,\"91\":1,\"94\":1,\"96\":1,\"97\":1,\"98\":2,\"100\":2,\"101\":1}}],[\"secondelement\",{\"1\":{\"17\":1}}],[\"salary60\",{\"1\":{\"97\":1,\"98\":1}}],[\"salarydesc\",{\"1\":{\"90\":1,\"91\":1}}],[\"salary\",{\"1\":{\"81\":2,\"82\":8}}],[\"safe\",{\"1\":{\"80\":7,\"82\":2,\"91\":4,\"98\":4,\"123\":2,\"126\":2}}],[\"save\",{\"1\":{\"52\":1}}],[\"sass\",{\"1\":{\"28\":2}}],[\"sandpack\",{\"1\":{\"28\":1}}],[\"src=\",{\"1\":{\"325\":1}}],[\"srcslice\",{\"1\":{\"287\":2}}],[\"src\",{\"1\":{\"28\":3,\"286\":1}}],[\"step6\",{\"1\":{\"134\":1,\"140\":1}}],[\"step5\",{\"1\":{\"134\":1,\"140\":1}}],[\"step4\",{\"1\":{\"134\":1,\"135\":1,\"140\":1}}],[\"step3\",{\"1\":{\"134\":1,\"135\":1,\"140\":1}}],[\"step2\",{\"1\":{\"134\":1,\"135\":1,\"140\":1}}],[\"step1\",{\"1\":{\"134\":1,\"135\":1,\"140\":1}}],[\"strings\",{\"1\":{\"270\":3,\"272\":2,\"299\":7}}],[\"string\",{\"1\":{\"240\":1,\"241\":2,\"243\":1,\"245\":1,\"246\":3,\"253\":1,\"254\":4,\"255\":1,\"257\":3,\"267\":1,\"268\":2,\"269\":1,\"271\":1,\"272\":1,\"274\":1,\"285\":2,\"299\":2,\"301\":2,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"311\":1},\"2\":{\"329\":1,\"333\":1}}],[\"struct\",{\"1\":{\"231\":4,\"233\":2,\"234\":1,\"257\":3,\"305\":1}}],[\"strl\",{\"1\":{\"136\":1}}],[\"str\",{\"1\":{\"81\":1,\"82\":1,\"89\":1,\"91\":1,\"96\":2,\"98\":2,\"107\":1,\"109\":1,\"112\":3,\"116\":2,\"117\":1,\"118\":1,\"120\":4,\"123\":1,\"126\":1,\"297\":1,\"299\":1,\"328\":4}}],[\"stress\",{\"1\":{\"58\":1}}],[\"status\",{\"1\":{\"219\":1}}],[\"statements\",{\"1\":{\"57\":1}}],[\"statement\",{\"1\":{\"52\":1}}],[\"standard\",{\"1\":{\"62\":1}}],[\"start\",{\"1\":{\"50\":1,\"90\":1,\"91\":1,\"97\":1,\"98\":1,\"215\":1}}],[\"started\",{\"2\":{\"24\":1}}],[\"stl\",{\"0\":{\"337\":1,\"347\":1},\"1\":{\"331\":1,\"332\":2},\"2\":{\"19\":1,\"330\":1,\"334\":1}}],[\"stl库会自动决定初始内存大小\",{\"1\":{\"15\":1}}],[\"stdin\",{\"1\":{\"270\":1,\"272\":1}}],[\"stdout\",{\"1\":{\"253\":3}}],[\"std\",{\"0\":{\"226\":1,\"227\":1,\"228\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1},\"1\":{\"17\":36,\"226\":7,\"231\":4,\"233\":4,\"234\":4,\"328\":2,\"332\":4}}],[\"访问越界\",{\"1\":{\"238\":1}}],[\"访问的是\",{\"1\":{\"89\":2}}],[\"访问在线网页\",{\"1\":{\"89\":1}}],[\"访问网址\",{\"1\":{\"86\":1}}],[\"访问\",{\"1\":{\"17\":1,\"332\":1}}],[\"访问第二个元素\",{\"1\":{\"17\":1}}],[\"访问第一个元素\",{\"1\":{\"17\":1}}],[\"访问元素\",{\"1\":{\"17\":1}}],[\"0xff\",{\"1\":{\"292\":1}}],[\"0x1p\",{\"1\":{\"292\":1}}],[\"0xc0000b8000\",{\"1\":{\"285\":2}}],[\"0xc0000b6000\",{\"1\":{\"285\":4}}],[\"0xc0000b2020\",{\"1\":{\"285\":2}}],[\"0xc0000a8040\",{\"1\":{\"285\":1}}],[\"0xc0000a8000\",{\"1\":{\"285\":1}}],[\"0xc000010200\",{\"1\":{\"262\":1}}],[\"0o377\",{\"1\":{\"292\":1}}],[\"0b00101101\",{\"1\":{\"292\":1}}],[\"0来判断\",{\"1\":{\"281\":1,\"282\":1}}],[\"05s\",{\"1\":{\"265\":1}}],[\"04x\",{\"1\":{\"259\":1}}],[\"0644\",{\"1\":{\"253\":1}}],[\"077\",{\"1\":{\"292\":1}}],[\"07\",{\"1\":{\"181\":1}}],[\"03\",{\"1\":{\"181\":1}}],[\"00小王子\",{\"1\":{\"265\":1}}],[\"00\",{\"1\":{\"181\":5}}],[\"01\",{\"1\":{\"181\":8}}],[\"0表示正常退出\",{\"1\":{\"157\":1}}],[\"0+cu118\",{\"1\":{\"140\":1}}],[\"0\",{\"1\":{\"17\":18,\"28\":37,\"82\":2,\"107\":4,\"109\":4,\"112\":8,\"116\":2,\"117\":6,\"120\":8,\"140\":1,\"154\":1,\"159\":1,\"160\":1,\"167\":2,\"181\":17,\"196\":1,\"224\":6,\"225\":1,\"226\":3,\"228\":1,\"229\":2,\"230\":4,\"231\":4,\"233\":2,\"234\":1,\"240\":4,\"241\":3,\"242\":2,\"243\":1,\"247\":2,\"254\":1,\"257\":1,\"258\":1,\"262\":1,\"264\":1,\"265\":1,\"267\":1,\"268\":1,\"269\":1,\"277\":2,\"279\":2,\"280\":1,\"282\":1,\"283\":8,\"284\":1,\"285\":11,\"286\":3,\"287\":2,\"290\":4,\"292\":1,\"300\":1,\"301\":2,\"312\":1,\"313\":3,\"316\":3,\"317\":9}}],[\"ff\",{\"1\":{\"292\":2}}],[\"fff\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"fscanf\",{\"1\":{\"271\":1}}],[\"fscanln\",{\"1\":{\"271\":1}}],[\"fscan\",{\"1\":{\"271\":2}}],[\"fscan系列\",{\"0\":{\"271\":1}}],[\"f格式\",{\"1\":{\"260\":2}}],[\"fprintln\",{\"1\":{\"253\":2}}],[\"fprintf\",{\"1\":{\"253\":2}}],[\"fprint\",{\"1\":{\"253\":1}}],[\"fprint系列函数会将内容输出到一个io\",{\"1\":{\"253\":1}}],[\"fptiny\",{\"0\":{\"253\":1}}],[\"fmt\",{\"0\":{\"268\":1,\"269\":1},\"1\":{\"240\":3,\"241\":5,\"242\":2,\"243\":2,\"245\":2,\"246\":2,\"247\":2,\"248\":2,\"250\":4,\"251\":3,\"252\":4,\"253\":4,\"254\":8,\"255\":6,\"257\":8,\"258\":2,\"259\":6,\"260\":6,\"261\":4,\"262\":1,\"264\":5,\"265\":7,\"266\":2,\"267\":4,\"268\":5,\"269\":4,\"270\":3,\"271\":3,\"272\":8,\"274\":7,\"277\":3,\"278\":1,\"279\":3,\"283\":2,\"284\":2,\"285\":2,\"287\":8,\"288\":1,\"292\":6,\"293\":3,\"294\":2,\"297\":2,\"298\":1,\"300\":4,\"301\":2,\"302\":1,\"310\":2,\"311\":2,\"315\":3,\"316\":6,\"317\":25}}],[\"fclose\",{\"1\":{\"231\":6}}],[\"func等\",{\"1\":{\"311\":1}}],[\"func\",{\"1\":{\"224\":6,\"230\":3,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"245\":1,\"246\":1,\"247\":3,\"250\":1,\"251\":1,\"252\":1,\"253\":4,\"254\":4,\"255\":3,\"257\":1,\"267\":2,\"268\":2,\"269\":2,\"270\":1,\"271\":3,\"272\":1,\"274\":1,\"277\":2,\"278\":1,\"279\":1,\"283\":1,\"284\":1,\"285\":2,\"287\":2,\"288\":1,\"292\":1,\"293\":1,\"297\":1,\"300\":1,\"301\":1,\"302\":1,\"305\":1,\"310\":1,\"311\":2,\"315\":1,\"316\":4,\"317\":8}}],[\"functions\",{\"1\":{\"305\":1}}],[\"function<void\",{\"1\":{\"231\":1}}],[\"function\",{\"1\":{\"107\":1,\"112\":1}}],[\"full\",{\"1\":{\"219\":1}}],[\"fallthrough语法可以执行满足条件的case的下一个case\",{\"1\":{\"317\":1}}],[\"fallthrough\",{\"1\":{\"305\":1,\"317\":1}}],[\"false\",{\"1\":{\"17\":1,\"81\":1,\"82\":2,\"230\":1,\"231\":1,\"258\":2,\"267\":2,\"268\":2,\"274\":5,\"305\":1,\"320\":6,\"321\":3}}],[\"fat\",{\"0\":{\"267\":1}}],[\"facebook\",{\"1\":{\"137\":1}}],[\"family=\",{\"1\":{\"124\":1,\"126\":1}}],[\"found\",{\"1\":{\"335\":1}}],[\"foo\",{\"1\":{\"311\":3}}],[\"fopen\",{\"1\":{\"231\":4}}],[\"font\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1,\"124\":1,\"126\":1}}],[\"forloop2\",{\"1\":{\"317\":1}}],[\"forloop1\",{\"1\":{\"317\":2}}],[\"fordemo3\",{\"1\":{\"316\":1}}],[\"fordemo2\",{\"1\":{\"316\":1}}],[\"fordemo\",{\"1\":{\"316\":1}}],[\"for循环可以通过break\",{\"1\":{\"317\":1}}],[\"for循环的初始语句和结束语句都可以省略\",{\"1\":{\"316\":1}}],[\"for循环的初始语句可以被忽略\",{\"1\":{\"316\":1}}],[\"for循环的基本格式如下\",{\"1\":{\"316\":1}}],[\"for循环遍历\",{\"1\":{\"243\":1}}],[\"format\",{\"1\":{\"253\":1,\"254\":1,\"255\":1,\"268\":1,\"271\":1}}],[\"formatter=jscode\",{\"1\":{\"107\":1,\"112\":1}}],[\"formatter=\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"112\":3,\"116\":1,\"117\":1,\"120\":2}}],[\"foreign\",{\"1\":{\"180\":1,\"198\":5}}],[\"forge\",{\"1\":{\"136\":2}}],[\"for\",{\"1\":{\"17\":10,\"73\":1,\"80\":1,\"81\":1,\"82\":4,\"89\":2,\"90\":2,\"91\":4,\"96\":2,\"97\":3,\"98\":5,\"101\":2,\"106\":1,\"107\":3,\"109\":2,\"111\":1,\"112\":7,\"116\":3,\"117\":3,\"119\":1,\"120\":8,\"123\":3,\"126\":4,\"230\":1,\"243\":3,\"246\":2,\"284\":2,\"285\":1,\"286\":2,\"300\":2,\"305\":1,\"316\":4,\"317\":12}}],[\"fe\",{\"1\":{\"96\":1,\"98\":1}}],[\"feed\",{\"1\":{\"28\":1}}],[\"f\",{\"1\":{\"80\":4,\"82\":4,\"90\":1,\"91\":11,\"97\":1,\"98\":11,\"106\":1,\"112\":1,\"120\":1,\"123\":1,\"126\":1,\"231\":3,\"259\":2,\"260\":11,\"261\":2,\"263\":2,\"264\":2,\"293\":2,\"313\":1}}],[\"flag\",{\"1\":{\"230\":3,\"231\":3}}],[\"fl\",{\"1\":{\"60\":2}}],[\"float32\",{\"1\":{\"293\":1,\"296\":1,\"305\":1,\"307\":1}}],[\"float32和float64\",{\"1\":{\"293\":1}}],[\"float64\",{\"1\":{\"257\":2,\"293\":1,\"296\":1,\"302\":1,\"305\":1}}],[\"float\",{\"1\":{\"81\":2,\"82\":2,\"181\":1}}],[\"floating\",{\"1\":{\"17\":2}}],[\"flowchart\",{\"1\":{\"28\":1}}],[\"friend\",{\"1\":{\"328\":1}}],[\"free\",{\"1\":{\"136\":3,\"331\":4,\"332\":6}}],[\"freemarker\",{\"1\":{\"57\":1}}],[\"from\",{\"1\":{\"82\":1,\"91\":1,\"98\":1,\"101\":2,\"112\":4,\"120\":3,\"126\":2,\"188\":1,\"190\":1,\"191\":4,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"203\":4,\"205\":2,\"206\":2,\"208\":3,\"220\":1}}],[\"frontmatter\",{\"1\":{\"1\":1}}],[\"find\",{\"1\":{\"328\":1}}],[\"finger\",{\"1\":{\"317\":2}}],[\"finished\",{\"1\":{\"254\":1,\"257\":1,\"258\":1,\"262\":1,\"264\":1,\"267\":1,\"268\":1,\"269\":1}}],[\"finally\",{\"1\":{\"90\":1,\"91\":1,\"97\":1,\"98\":1}}],[\"fieldnames=\",{\"1\":{\"82\":1,\"91\":1,\"98\":1}}],[\"fileobj\",{\"1\":{\"253\":2}}],[\"file\",{\"1\":{\"80\":5,\"82\":4,\"91\":2,\"98\":2,\"106\":2,\"112\":2,\"120\":2,\"123\":2,\"126\":2,\"231\":4}}],[\"file2\",{\"1\":{\"80\":4}}],[\"file1\",{\"1\":{\"80\":4}}],[\"filename\",{\"1\":{\"52\":1}}],[\"files\",{\"0\":{\"59\":1},\"1\":{\"52\":1,\"53\":2,\"139\":2}}],[\"fix\",{\"1\":{\"49\":1}}],[\"firstelement\",{\"1\":{\"17\":1}}],[\"中指\",{\"1\":{\"317\":1}}],[\"中间表至少包含两个外键\",{\"1\":{\"200\":1}}],[\"中是\",{\"1\":{\"196\":1}}],[\"中等长度文本数据\",{\"1\":{\"181\":1}}],[\"中数据库的常见操作\",{\"1\":{\"172\":1}}],[\"中常见的\",{\"1\":{\"144\":1}}],[\"中山\",{\"1\":{\"81\":1,\"82\":1}}],[\"中卫\",{\"1\":{\"81\":1,\"82\":1}}],[\"中\",{\"1\":{\"53\":1,\"58\":1,\"300\":1}}],[\"中生成\",{\"1\":{\"52\":1}}],[\"中上传图片\",{\"1\":{\"52\":1}}],[\"中的内容\",{\"1\":{\"296\":1}}],[\"中的内容为可选参数\",{\"1\":{\"179\":1}}],[\"中的语法\",{\"1\":{\"144\":1}}],[\"中的命令行可以看成是一个\",{\"1\":{\"144\":1}}],[\"中的求职信息\",{\"1\":{\"84\":1}}],[\"中的所有元素\",{\"1\":{\"17\":1}}],[\"中的元素时要小心\",{\"1\":{\"17\":1}}],[\"中的元素\",{\"1\":{\"17\":1}}],[\"中设置\",{\"1\":{\"1\":1}}],[\"函数外的每个语句都必须以关键字开始\",{\"1\":{\"311\":1}}],[\"函数返回的长度可以根据不同平台的字节长度进行变化\",{\"1\":{\"291\":1}}],[\"函数将切片a中的元素复制到切片c\",{\"1\":{\"287\":1}}],[\"函数将元素追加到切片的最后并返回该切片\",{\"1\":{\"285\":1}}],[\"函数的使用格式如下\",{\"1\":{\"287\":1}}],[\"函数可以迅速地将一个切片的数据复制到另外一个切片空间中\",{\"1\":{\"287\":1}}],[\"函数可以用来预分配内存\",{\"1\":{\"17\":1}}],[\"函数可以用来改变\",{\"1\":{\"17\":1}}],[\"函数可以用来清空\",{\"1\":{\"17\":1}}],[\"函数复制切片\",{\"0\":{\"287\":1}}],[\"函数还支持一次性追加多个元素\",{\"1\":{\"285\":1}}],[\"函数调用时\",{\"1\":{\"285\":1}}],[\"函数使用\",{\"1\":{\"285\":1}}],[\"函数直接使用\",{\"1\":{\"285\":1}}],[\"函数直接输入内容到终端\",{\"1\":{\"250\":1}}],[\"函数构造切片\",{\"0\":{\"279\":1}}],[\"函数求切片的容量\",{\"1\":{\"275\":1}}],[\"函数求长度\",{\"1\":{\"275\":1}}],[\"函数签名如下\",{\"1\":{\"269\":1}}],[\"函数签名\",{\"1\":{\"268\":1}}],[\"函数定签名如下\",{\"1\":{\"267\":1}}],[\"函数根据format参数生成格式化字符并返回一个包含该字符串的错误\",{\"1\":{\"255\":1}}],[\"函数\",{\"1\":{\"193\":1,\"252\":1,\"279\":1,\"289\":1,\"302\":1,\"308\":1,\"328\":1}}],[\"函数来提前分配足够的内存\",{\"1\":{\"17\":1}}],[\"函数来访问\",{\"1\":{\"17\":1}}],[\"函数用于获取\",{\"1\":{\"17\":1}}],[\"函数用于获取容器的容量\",{\"1\":{\"17\":1}}],[\"函数用于获取容器中元素的数量\",{\"1\":{\"17\":1}}],[\"函数用于删除指定位置的元素\",{\"1\":{\"17\":1}}],[\"函数用于删除\",{\"1\":{\"17\":1}}],[\"函数用于在指定位置插入元素\",{\"1\":{\"17\":1}}],[\"函数用于在\",{\"1\":{\"17\":1}}],[\"或切片a\",{\"1\":{\"278\":1}}],[\"或0x\",{\"1\":{\"265\":1}}],[\"或管理的是一个文件指针\",{\"1\":{\"231\":1}}],[\"或是将一个smartptr对象赋值给另一个smartptr对象\",{\"1\":{\"225\":1}}],[\"或是因为抛异常返回了\",{\"1\":{\"224\":1}}],[\"或从小到大\",{\"1\":{\"219\":1}}],[\"或者一次初始化多个变量\",{\"1\":{\"308\":1}}],[\"或者叫\",{\"1\":{\"300\":1}}],[\"或者用c++11的方式在这两个函数后面加上=delete\",{\"1\":{\"226\":1}}],[\"或者\",{\"1\":{\"60\":1,\"150\":1,\"151\":1,\"192\":1}}],[\"或\",{\"1\":{\"17\":1,\"144\":1,\"192\":4}}],[\"pb\",{\"1\":{\"313\":1}}],[\"pmutex\",{\"1\":{\"230\":11,\"231\":5}}],[\"ptr还会提供一个get函数\",{\"1\":{\"234\":1}}],[\"ptr还存在线程安全的问题\",{\"1\":{\"230\":1}}],[\"ptr不会增加管理的资源对应的引用计数\",{\"1\":{\"234\":1}}],[\"ptr不是用来管理资源的释放的\",{\"1\":{\"234\":1}}],[\"ptr就不会导致循环引用问题了\",{\"1\":{\"234\":1}}],[\"ptr就支持定制删除器了\",{\"1\":{\"231\":1}}],[\"ptr支持用shared\",{\"1\":{\"234\":1}}],[\"ptr解决循环引用问题\",{\"0\":{\"234\":1}}],[\"ptr类型\",{\"1\":{\"233\":1}}],[\"ptr类再增加一个模板参数\",{\"1\":{\"231\":1}}],[\"ptr类中新增互斥锁成员变量\",{\"1\":{\"230\":1}}],[\"ptr类中增加一个成员变量count\",{\"1\":{\"229\":1}}],[\"ptr时是分成了很多个类的\",{\"1\":{\"231\":1}}],[\"ptr管理的资源作为参数进行传入\",{\"1\":{\"231\":1}}],[\"ptr管理一个整型变量\",{\"1\":{\"230\":1}}],[\"ptr提供了如下构造函数\",{\"1\":{\"231\":1}}],[\"ptr只需要保证引用计数的线程安全问题\",{\"1\":{\"230\":1}}],[\"ptr中的引用计数count定义成一个指针\",{\"1\":{\"229\":1}}],[\"ptr中的引用计数count也不能定义成一个静态的成员变量\",{\"1\":{\"229\":1}}],[\"ptr中的引用计数count不能单纯的定义成一个int类型的成员变量\",{\"1\":{\"229\":1}}],[\"ptr对象拷贝赋值给weak\",{\"1\":{\"234\":1}}],[\"ptr对象拷贝构造weak\",{\"1\":{\"234\":1}}],[\"ptr对象管理的资源\",{\"1\":{\"234\":2}}],[\"ptr对象管理同一个资源\",{\"1\":{\"234\":1}}],[\"ptr对象与shared\",{\"1\":{\"234\":1}}],[\"ptr对象\",{\"1\":{\"234\":3}}],[\"ptr对象来构造weak\",{\"1\":{\"234\":1}}],[\"ptr对象进行管理\",{\"1\":{\"233\":1}}],[\"ptr对象进行1000次拷贝操作\",{\"1\":{\"230\":1}}],[\"ptr对象时指明仿函数的类型\",{\"1\":{\"231\":1}}],[\"ptr对象时不传入删除器\",{\"1\":{\"231\":1}}],[\"ptr对象时就需要指定删除器的类型\",{\"1\":{\"231\":1}}],[\"ptr对象的生命周期结束时就会调用传入的删除器完成资源的释放\",{\"1\":{\"231\":1}}],[\"ptr对象还在管理这个整型变量\",{\"1\":{\"230\":1}}],[\"ptr对象都有一个自己的count成员变量\",{\"1\":{\"229\":1}}],[\"ptr对象具有指针一样的行为\",{\"1\":{\"226\":2,\"229\":1,\"234\":1}}],[\"ptr通过引用计数的方式解决智能指针的拷贝问题\",{\"1\":{\"228\":1}}],[\"ptr通过防拷贝的方式解决智能指针的拷贝问题\",{\"1\":{\"226\":1}}],[\"ptr通过管理权转移的方式解决智能指针的拷贝问题\",{\"1\":{\"226\":1}}],[\"ptr是c++11中引入的智能指针\",{\"1\":{\"226\":1,\"228\":1,\"234\":1}}],[\"ptr是c++98中引入的智能指针\",{\"1\":{\"226\":1}}],[\"ptr<file\",{\"1\":{\"231\":2}}],[\"ptr<file>\",{\"1\":{\"231\":2}}],[\"ptr<listnode\",{\"1\":{\"231\":1}}],[\"ptr<listnode>\",{\"1\":{\"231\":2,\"233\":4,\"234\":4}}],[\"ptr<t>\",{\"1\":{\"226\":4,\"229\":2,\"230\":2,\"234\":2}}],[\"ptr<int>\",{\"1\":{\"226\":6,\"228\":4,\"230\":3}}],[\"ptr的无参的构造函数\",{\"1\":{\"234\":1}}],[\"ptr的循环引用问题的\",{\"1\":{\"234\":1}}],[\"ptr的循环引用问题在一些特定的场景下才会产生\",{\"1\":{\"233\":1}}],[\"ptr的循环引用问题\",{\"0\":{\"233\":1}}],[\"ptr的基础上支持定制删除器\",{\"1\":{\"231\":1}}],[\"ptr的基本设计\",{\"0\":{\"228\":1}}],[\"ptr的\",{\"1\":{\"231\":1}}],[\"ptr的定制删除器\",{\"0\":{\"231\":1}}],[\"ptr的线程安全问题\",{\"0\":{\"230\":1},\"1\":{\"230\":1}}],[\"ptr的实现步骤如下\",{\"1\":{\"226\":2,\"229\":1,\"234\":1}}],[\"ptr的模拟实现\",{\"0\":{\"229\":1},\"1\":{\"226\":2,\"234\":1}}],[\"ptr之前必须先了解它的机制\",{\"1\":{\"226\":1}}],[\"ptr\",{\"0\":{\"226\":1,\"227\":1,\"232\":1},\"1\":{\"224\":13,\"226\":39,\"229\":23,\"230\":21,\"231\":28,\"234\":10,\"285\":11},\"2\":{\"235\":4}}],[\"phone\",{\"1\":{\"181\":2}}],[\"php\",{\"1\":{\"80\":1,\"82\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"p\",{\"1\":{\"167\":3,\"230\":4,\"231\":2,\"262\":2,\"265\":1,\"285\":1,\"301\":1}}],[\"p端口号\",{\"1\":{\"167\":1}}],[\"p密码\",{\"1\":{\"167\":1}}],[\"pkgs\",{\"1\":{\"136\":7}}],[\"pi\",{\"1\":{\"257\":3,\"293\":2,\"311\":2}}],[\"pie\",{\"1\":{\"112\":1,\"117\":5,\"118\":1,\"120\":7}}],[\"pip\",{\"1\":{\"104\":2,\"140\":2}}],[\"pprint\",{\"1\":{\"101\":2,\"112\":2,\"120\":2}}],[\"pcount\",{\"1\":{\"229\":14,\"230\":11,\"231\":5}}],[\"pc\",{\"1\":{\"100\":2,\"101\":1}}],[\"p=页面\",{\"1\":{\"93\":1}}],[\"p=2\",{\"1\":{\"93\":1,\"98\":1}}],[\"p2\",{\"1\":{\"81\":3,\"82\":3}}],[\"p1\",{\"1\":{\"81\":3,\"82\":3}}],[\"pd\",{\"1\":{\"80\":3,\"82\":2,\"106\":1,\"112\":2,\"120\":2,\"123\":1,\"126\":2}}],[\"pytorch\",{\"0\":{\"137\":1},\"1\":{\"136\":1,\"137\":1,\"140\":1},\"2\":{\"141\":1}}],[\"python=3\",{\"1\":{\"140\":1}}],[\"python版本为3\",{\"1\":{\"140\":1}}],[\"python安装非常简单\",{\"1\":{\"72\":1}}],[\"python作为众多编程语言之一\",{\"1\":{\"70\":1}}],[\"python\",{\"1\":{\"72\":1,\"73\":1,\"80\":1,\"82\":1,\"86\":1,\"106\":1,\"112\":1,\"120\":1,\"126\":1,\"131\":2,\"137\":1},\"2\":{\"68\":1,\"77\":1,\"83\":1,\"102\":1,\"128\":1}}],[\"pyecharts\",{\"1\":{\"104\":2,\"112\":4,\"120\":3,\"126\":2},\"2\":{\"77\":1,\"128\":1}}],[\"pycharm的安装通用非常简单\",{\"1\":{\"75\":1}}],[\"pycharm针对每个平台都有professional和community两个版本\",{\"1\":{\"73\":1}}],[\"pycharm\",{\"1\":{\"73\":1,\"75\":1}}],[\"pycharm是一款非常好用的python\",{\"1\":{\"73\":1}}],[\"png\",{\"1\":{\"52\":1,\"97\":1,\"270\":1,\"325\":1}}],[\"play\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"play=true\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"125\":1,\"126\":1}}],[\"playground\",{\"1\":{\"28\":1}}],[\"plugin\",{\"1\":{\"28\":6}}],[\"panic语句强制退出循环\",{\"1\":{\"317\":1}}],[\"panic\",{\"1\":{\"305\":1}}],[\"pandas\",{\"1\":{\"82\":1,\"112\":1,\"120\":1,\"126\":1},\"2\":{\"83\":1}}],[\"params\",{\"1\":{\"107\":4,\"112\":4}}],[\"part\",{\"1\":{\"123\":7,\"126\":7}}],[\"part2\",{\"1\":{\"81\":3,\"82\":3}}],[\"part1\",{\"1\":{\"81\":3,\"82\":3}}],[\"parts\",{\"1\":{\"81\":3,\"82\":3,\"123\":2,\"126\":2}}],[\"pair=pie\",{\"1\":{\"117\":1,\"120\":1}}],[\"pair=map\",{\"1\":{\"116\":1,\"120\":1}}],[\"pair=\",{\"1\":{\"107\":1,\"112\":1}}],[\"path\",{\"1\":{\"94\":1}}],[\"path一栏\",{\"1\":{\"87\":1}}],[\"path打上勾\",{\"1\":{\"72\":1}}],[\"pattern\",{\"1\":{\"58\":1}}],[\"pagebean\",{\"1\":{\"196\":2}}],[\"page\",{\"1\":{\"49\":1,\"89\":4,\"90\":13,\"91\":16,\"96\":3,\"97\":15,\"98\":18,\"101\":3,\"120\":1,\"196\":1,\"219\":1}}],[\"pagesize\",{\"1\":{\"196\":1}}],[\"pages\",{\"0\":{\"32\":1},\"1\":{\"27\":1,\"32\":3,\"90\":3,\"91\":1}}],[\"package\",{\"1\":{\"28\":1,\"62\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":2,\"257\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"272\":1,\"292\":1,\"293\":1,\"297\":1,\"305\":1,\"310\":1}}],[\"prevent\",{\"1\":{\"286\":1}}],[\"prev成员的释放又取决于node2\",{\"1\":{\"233\":1}}],[\"prev成员\",{\"1\":{\"233\":1}}],[\"prev\",{\"1\":{\"231\":1,\"233\":4,\"234\":2}}],[\"prefix\",{\"1\":{\"40\":1}}],[\"primary\",{\"1\":{\"180\":1}}],[\"printf系列函数都支持format格式化参数\",{\"1\":{\"256\":1}}],[\"printf函数支持格式化输出字符串\",{\"1\":{\"251\":1}}],[\"printf\",{\"0\":{\"251\":1},\"1\":{\"241\":2,\"242\":1,\"246\":1,\"251\":2,\"257\":7,\"258\":2,\"259\":6,\"260\":6,\"261\":4,\"262\":1,\"264\":5,\"265\":7,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"272\":1,\"277\":3,\"278\":1,\"285\":1,\"292\":5,\"293\":2,\"300\":2,\"317\":4}}],[\"println\",{\"0\":{\"252\":1},\"1\":{\"240\":3,\"241\":3,\"242\":1,\"243\":2,\"245\":2,\"246\":1,\"247\":2,\"252\":4,\"253\":1,\"254\":4,\"255\":2,\"272\":1,\"274\":7,\"279\":3,\"283\":2,\"284\":2,\"285\":1,\"287\":8,\"288\":1,\"294\":2,\"297\":1,\"298\":1,\"300\":2,\"301\":2,\"302\":1,\"310\":1,\"311\":2,\"315\":3,\"316\":6,\"317\":21}}],[\"print\",{\"0\":{\"250\":1},\"1\":{\"80\":1,\"82\":3,\"89\":1,\"90\":1,\"91\":4,\"96\":1,\"97\":1,\"98\":4,\"101\":1,\"250\":4,\"270\":1,\"272\":1}}],[\"private\",{\"1\":{\"17\":1,\"196\":2,\"224\":1,\"226\":2,\"229\":1,\"230\":2,\"231\":2,\"234\":1,\"328\":1,\"332\":1}}],[\"process\",{\"1\":{\"254\":1,\"257\":1,\"258\":1,\"262\":1,\"264\":1,\"267\":1,\"268\":1,\"269\":1}}],[\"program\",{\"1\":{\"139\":2}}],[\"prompt\",{\"1\":{\"135\":1,\"136\":1,\"140\":1}}],[\"province\",{\"1\":{\"81\":3,\"82\":3,\"106\":4,\"107\":1,\"112\":5,\"116\":1,\"117\":1,\"120\":6}}],[\"professional\",{\"1\":{\"73\":2}}],[\"problem\",{\"1\":{\"50\":1}}],[\"pro\",{\"1\":{\"28\":1,\"81\":3,\"82\":3}}],[\"project\",{\"1\":{\"27\":1,\"28\":1},\"2\":{\"25\":1}}],[\"public\",{\"1\":{\"17\":1,\"196\":1,\"224\":1,\"226\":2,\"229\":1,\"230\":1,\"231\":1,\"234\":1}}],[\"push\",{\"1\":{\"17\":3,\"31\":1,\"332\":1}}],[\"pool\",{\"1\":{\"331\":1,\"332\":3}}],[\"position=\",{\"1\":{\"109\":1,\"111\":1,\"112\":2,\"119\":1,\"120\":1}}],[\"positions\",{\"1\":{\"94\":1,\"97\":1,\"98\":1}}],[\"pos\",{\"1\":{\"107\":4,\"108\":2,\"109\":2,\"110\":8,\"111\":4,\"112\":20,\"116\":4,\"119\":4,\"120\":8,\"125\":1,\"126\":1,\"328\":1}}],[\"polygon\",{\"0\":{\"48\":1},\"1\":{\"44\":1,\"48\":1,\"49\":5,\"50\":1,\"57\":1},\"2\":{\"45\":1,\"63\":1}}],[\"point=str\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"126\":1}}],[\"point\",{\"1\":{\"17\":2}}],[\"pop\",{\"1\":{\"17\":2,\"332\":1}}],[\"portfolio\",{\"1\":{\"1\":1}}],[\"值\",{\"1\":{\"257\":1}}],[\"值的go语法表示\",{\"1\":{\"257\":1}}],[\"值的默认格式表示\",{\"1\":{\"257\":1}}],[\"值2\",{\"1\":{\"186\":6,\"187\":1}}],[\"值1\",{\"1\":{\"186\":6,\"187\":1}}],[\"值分别为1\",{\"1\":{\"17\":1}}],[\"值为42\",{\"1\":{\"17\":1}}],[\"值为0\",{\"1\":{\"17\":1}}],[\"404\",{\"1\":{\"335\":1}}],[\"402823466351\",{\"1\":{\"181\":1}}],[\"402823466\",{\"1\":{\"181\":2}}],[\"4e38\",{\"1\":{\"293\":1}}],[\"49\",{\"1\":{\"260\":1}}],[\"41\",{\"1\":{\"259\":1}}],[\"4bytes\",{\"1\":{\"181\":2}}],[\"456\",{\"1\":{\"260\":1,\"292\":1}}],[\"456e+78\",{\"1\":{\"260\":2}}],[\"45\",{\"1\":{\"109\":1,\"110\":1,\"112\":2,\"292\":1}}],[\"489\",{\"1\":{\"96\":1,\"98\":1}}],[\"48\",{\"1\":{\"28\":1}}],[\"47\",{\"1\":{\"28\":2}}],[\"4\",{\"0\":{\"39\":1,\"152\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":2,\"176\":1,\"184\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":2,\"194\":1,\"195\":1,\"196\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":2,\"212\":1},\"1\":{\"17\":8,\"28\":2,\"81\":1,\"82\":1,\"156\":2,\"169\":1,\"181\":3,\"238\":1,\"242\":1,\"277\":5,\"278\":2,\"280\":1,\"285\":13,\"286\":3,\"287\":10,\"302\":1,\"313\":1,\"317\":3}}],[\"4294967295\",{\"1\":{\"181\":1,\"290\":1}}],[\"42\",{\"1\":{\"17\":3}}],[\"39\",{\"1\":{\"325\":1}}],[\"3i\",{\"1\":{\"294\":1}}],[\"37个保留字\",{\"1\":{\"305\":1}}],[\"377\",{\"1\":{\"292\":1}}],[\"37\",{\"1\":{\"288\":2}}],[\"36\",{\"1\":{\"288\":2}}],[\"33\",{\"1\":{\"288\":2}}],[\"3306\",{\"1\":{\"167\":1}}],[\"32位操作系统上就是int32\",{\"1\":{\"291\":1}}],[\"32位操作系统上就是uint32\",{\"1\":{\"291\":1}}],[\"32位整型\",{\"1\":{\"290\":2}}],[\"32\",{\"1\":{\"288\":1}}],[\"32767\",{\"1\":{\"181\":1,\"290\":1}}],[\"32768\",{\"1\":{\"181\":1,\"290\":1}}],[\"340000\",{\"1\":{\"260\":1,\"264\":2}}],[\"34\",{\"1\":{\"260\":3,\"264\":3,\"288\":2}}],[\"31\",{\"1\":{\"181\":2,\"288\":2}}],[\"38\",{\"1\":{\"181\":1}}],[\"3bytes\",{\"1\":{\"181\":1}}],[\"3目录下即可\",{\"1\":{\"139\":1}}],[\"3版本以下的\",{\"1\":{\"138\":1}}],[\"35\",{\"1\":{\"117\":1,\"120\":1,\"288\":2,\"317\":1}}],[\"35025\",{\"1\":{\"39\":1}}],[\"308\",{\"1\":{\"181\":1}}],[\"30\",{\"1\":{\"28\":1,\"81\":2,\"82\":2,\"107\":1,\"112\":1,\"116\":1,\"120\":1,\"247\":2,\"288\":2,\"317\":1}}],[\"3\",{\"0\":{\"38\":1,\"76\":1,\"99\":1,\"122\":1,\"151\":1,\"155\":1,\"156\":1,\"157\":1,\"161\":1,\"175\":1,\"181\":1,\"183\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":2,\"192\":1,\"200\":1,\"205\":1,\"206\":1,\"210\":1,\"216\":1,\"220\":1},\"1\":{\"17\":11,\"28\":5,\"117\":1,\"120\":1,\"138\":1,\"139\":2,\"156\":2,\"159\":1,\"160\":1,\"169\":1,\"181\":5,\"219\":1,\"237\":1,\"238\":1,\"240\":3,\"241\":2,\"242\":1,\"245\":1,\"246\":2,\"247\":4,\"257\":2,\"268\":2,\"277\":9,\"278\":3,\"280\":2,\"283\":1,\"284\":1,\"285\":14,\"287\":10,\"288\":1,\"293\":1,\"302\":1,\"311\":2,\"312\":1,\"313\":4,\"317\":4}}],[\"22版本开始支持\",{\"1\":{\"317\":1}}],[\"2250738585072014\",{\"1\":{\"181\":1}}],[\"27827\",{\"1\":{\"300\":1}}],[\"27801\",{\"1\":{\"300\":1}}],[\"2i\",{\"1\":{\"294\":1}}],[\"2²\",{\"1\":{\"292\":1}}],[\"28\",{\"1\":{\"268\":2}}],[\"2s\",{\"1\":{\"265\":1}}],[\"2f\",{\"1\":{\"263\":2,\"264\":2,\"293\":1}}],[\"295\",{\"1\":{\"181\":2}}],[\"294\",{\"1\":{\"181\":2}}],[\"2155\",{\"1\":{\"181\":1}}],[\"215\",{\"1\":{\"181\":2}}],[\"2147483647\",{\"1\":{\"181\":1,\"290\":1}}],[\"2147483648\",{\"1\":{\"181\":1,\"290\":1}}],[\"2^64\",{\"1\":{\"181\":1}}],[\"263\",{\"1\":{\"181\":2}}],[\"2bytes\",{\"1\":{\"181\":1}}],[\"258\",{\"1\":{\"325\":1}}],[\"25个关键字\",{\"1\":{\"305\":1}}],[\"255\",{\"1\":{\"181\":4,\"290\":1,\"292\":1}}],[\"25\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1,\"292\":1,\"317\":2}}],[\"230\",{\"1\":{\"300\":2}}],[\"234000e+01\",{\"1\":{\"260\":2}}],[\"23\",{\"1\":{\"17\":1,\"181\":1,\"219\":2}}],[\"200\",{\"1\":{\"310\":1}}],[\"2000w+\",{\"1\":{\"219\":1}}],[\"2038\",{\"1\":{\"181\":1}}],[\"20210126100955083\",{\"1\":{\"270\":2}}],[\"2024\",{\"1\":{\"133\":1}}],[\"2023\",{\"1\":{\"100\":1}}],[\"20\",{\"1\":{\"17\":2,\"111\":4,\"112\":4,\"119\":4,\"120\":4,\"124\":1,\"126\":1,\"226\":1,\"228\":1,\"247\":2,\"308\":1}}],[\"2\",{\"0\":{\"28\":1,\"37\":1,\"72\":1,\"75\":1,\"81\":1,\"92\":1,\"114\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":2,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"157\":1,\"160\":1,\"168\":1,\"169\":1,\"170\":2,\"171\":1,\"172\":1,\"173\":1,\"174\":2,\"175\":1,\"176\":1,\"177\":2,\"178\":2,\"179\":2,\"180\":3,\"181\":2,\"182\":3,\"183\":2,\"184\":2,\"187\":1,\"191\":1,\"199\":1,\"204\":1,\"209\":1,\"215\":1,\"219\":1},\"1\":{\"17\":11,\"28\":16,\"82\":2,\"98\":1,\"100\":1,\"107\":1,\"112\":1,\"156\":2,\"159\":1,\"160\":1,\"169\":1,\"181\":1,\"226\":1,\"228\":3,\"240\":2,\"241\":3,\"245\":2,\"246\":2,\"247\":3,\"268\":2,\"277\":8,\"278\":3,\"279\":2,\"280\":1,\"285\":17,\"287\":10,\"288\":1,\"292\":1,\"294\":1,\"311\":2,\"312\":1,\"313\":4,\"317\":9}}],[\"=不能使用在函数外\",{\"1\":{\"311\":1}}],[\"=nil\",{\"1\":{\"282\":2}}],[\"=>\",{\"1\":{\"215\":6}}],[\"=<>>>=<<=\",{\"1\":{\"209\":1}}],[\"=yxc\",{\"1\":{\"159\":1}}],[\"=abc\",{\"1\":{\"159\":1}}],[\"=400\",{\"1\":{\"116\":1,\"120\":1}}],[\"=0\",{\"1\":{\"116\":1,\"120\":1,\"282\":6}}],[\"=60000\",{\"1\":{\"109\":1,\"112\":1}}],[\"=max\",{\"1\":{\"107\":1,\"112\":1}}],[\"=min\",{\"1\":{\"107\":1,\"112\":1}}],[\"==2\",{\"1\":{\"81\":1,\"82\":1}}],[\"==\",{\"1\":{\"17\":2,\"82\":1,\"89\":1,\"91\":2,\"96\":2,\"98\":3,\"107\":1,\"112\":2,\"116\":1,\"117\":1,\"120\":3,\"224\":3,\"229\":2,\"230\":2,\"231\":2,\"247\":1,\"274\":4,\"281\":2,\"282\":2,\"317\":8,\"320\":1}}],[\"=1\",{\"1\":{\"17\":2,\"159\":1}}],[\"=\",{\"1\":{\"17\":32,\"80\":13,\"81\":16,\"82\":29,\"87\":1,\"89\":4,\"90\":8,\"91\":23,\"96\":4,\"97\":8,\"98\":23,\"101\":8,\"106\":14,\"107\":3,\"108\":2,\"109\":3,\"110\":1,\"111\":2,\"112\":25,\"116\":2,\"117\":2,\"118\":1,\"119\":1,\"120\":17,\"123\":7,\"124\":1,\"126\":10,\"159\":1,\"187\":2,\"192\":2,\"196\":1,\"203\":1,\"208\":1,\"211\":1,\"219\":1,\"224\":2,\"225\":1,\"226\":15,\"228\":3,\"229\":7,\"230\":12,\"231\":7,\"233\":6,\"234\":3,\"238\":1,\"240\":2,\"241\":2,\"242\":1,\"243\":3,\"245\":1,\"246\":5,\"247\":5,\"253\":3,\"254\":3,\"255\":3,\"257\":2,\"259\":1,\"260\":1,\"261\":1,\"262\":1,\"264\":1,\"265\":1,\"270\":3,\"272\":3,\"274\":3,\"277\":7,\"278\":2,\"279\":1,\"280\":3,\"282\":2,\"283\":3,\"284\":3,\"285\":15,\"286\":5,\"287\":6,\"288\":3,\"292\":7,\"294\":2,\"296\":2,\"297\":1,\"298\":1,\"300\":5,\"301\":6,\"302\":2,\"308\":4,\"309\":2,\"310\":4,\"311\":7,\"312\":1,\"313\":12,\"315\":1,\"316\":4,\"317\":14,\"320\":1,\"323\":8,\"332\":2}}],[\"使\",{\"1\":{\"331\":1}}],[\"使weak\",{\"1\":{\"234\":1}}],[\"使shared\",{\"1\":{\"229\":1}}],[\"使unique\",{\"1\":{\"226\":1}}],[\"使auto\",{\"1\":{\"226\":1}}],[\"使得该对象具有像指针一样的行为\",{\"1\":{\"225\":1}}],[\"使得用户可以轻松地创建\",{\"1\":{\"131\":1}}],[\"使脚本具有可执行权限\",{\"1\":{\"144\":1}}],[\"使其像指针一样使用\",{\"1\":{\"332\":1}}],[\"使其始终指向最新释放的块\",{\"1\":{\"332\":1}}],[\"使其成为各种计算机视觉任务中的通用选择\",{\"1\":{\"130\":1}}],[\"使其能够动态地存储元素\",{\"1\":{\"13\":1}}],[\"使用goto语句能简化代码\",{\"1\":{\"317\":1}}],[\"使用switch语句可方便地对大量的值进行条件判断\",{\"1\":{\"317\":1}}],[\"使用iota能简化定义\",{\"1\":{\"312\":1}}],[\"使用了特殊的\",{\"1\":{\"300\":1}}],[\"使用字符串就像使用其他原生数据类型\",{\"1\":{\"296\":1}}],[\"使用copy\",{\"0\":{\"287\":1},\"1\":{\"287\":1}}],[\"使用make\",{\"0\":{\"279\":1}}],[\"使用内置的cap\",{\"1\":{\"275\":1}}],[\"使用0而不是空格填充\",{\"1\":{\"265\":1}}],[\"使用a\",{\"1\":{\"259\":2,\"261\":2}}],[\"使用指定的初始值完成初始化\",{\"1\":{\"240\":2}}],[\"使用时可以修改数组成员\",{\"1\":{\"237\":1}}],[\"使用定制删除器释放资源\",{\"1\":{\"231\":1}}],[\"使用聚合函数查询是纵向查询\",{\"1\":{\"193\":1}}],[\"使用数据库\",{\"0\":{\"175\":1}}],[\"使用变量\",{\"0\":{\"150\":1},\"1\":{\"150\":1}}],[\"使用清华镜像源下载\",{\"0\":{\"133\":1}}],[\"使用文档\",{\"1\":{\"88\":1,\"95\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"124\":1,\"125\":1}}],[\"使用win+r键输入cmd进入dos界面\",{\"1\":{\"72\":1}}],[\"使用下标访问元素时\",{\"1\":{\"17\":1}}],[\"使用默认值初始化\",{\"1\":{\"17\":1}}],[\"使用迭代器\",{\"1\":{\"17\":1}}],[\"使用迭代器访问元素\",{\"1\":{\"17\":1}}],[\"使用\",{\"0\":{\"32\":1},\"1\":{\"17\":7,\"27\":1,\"49\":1,\"57\":1,\"151\":1,\"172\":1,\"198\":1,\"253\":1,\"313\":1,\"332\":1}}],[\"使用初始化列表初始化\",{\"1\":{\"17\":1}}],[\"5s\",{\"1\":{\"265\":2}}],[\"59\",{\"1\":{\"181\":6}}],[\"535\",{\"1\":{\"181\":2}}],[\"58\",{\"1\":{\"110\":1,\"112\":1}}],[\"50\",{\"1\":{\"110\":2,\"112\":2,\"181\":1}}],[\"5000\",{\"1\":{\"106\":1,\"112\":1}}],[\"51jobcdn\",{\"1\":{\"100\":1}}],[\"51job\",{\"1\":{\"100\":1,\"101\":1}}],[\"56\",{\"1\":{\"28\":1}}],[\"54\",{\"1\":{\"28\":4}}],[\"5\",{\"0\":{\"40\":1,\"153\":1,\"194\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"212\":1},\"1\":{\"17\":9,\"28\":2,\"108\":1,\"110\":1,\"111\":2,\"112\":4,\"119\":2,\"120\":2,\"154\":1,\"238\":2,\"242\":2,\"265\":3,\"277\":5,\"278\":3,\"280\":2,\"284\":1,\"285\":8,\"287\":12,\"317\":5}}],[\"要修改字符串\",{\"1\":{\"301\":1}}],[\"要从切片a中删除索引为index的元素\",{\"1\":{\"288\":1}}],[\"要删除索引为2的元素\",{\"1\":{\"288\":1}}],[\"要是用len\",{\"1\":{\"282\":1}}],[\"要检查切片是否为空\",{\"1\":{\"281\":1}}],[\"要在当前模拟实现的shared\",{\"1\":{\"231\":1}}],[\"要解决引用计数的线程安全问题\",{\"1\":{\"230\":1}}],[\"要么全部成功\",{\"1\":{\"216\":1}}],[\"要么全部失败\",{\"1\":{\"216\":2}}],[\"要么全都失败\",{\"1\":{\"214\":1}}],[\"要么全都成功\",{\"1\":{\"214\":1}}],[\"要么同时失败\",{\"1\":{\"214\":1}}],[\"要么所有的\",{\"1\":{\"214\":1}}],[\"要求非空且唯一\",{\"1\":{\"180\":1}}],[\"要不然下载的包和创建的环境都在c盘\",{\"1\":{\"134\":1}}],[\"要创建一个存储整数的vector\",{\"1\":{\"17\":1}}],[\"要使用此布局\",{\"1\":{\"1\":1}}],[\"包裹起来\",{\"1\":{\"300\":1}}],[\"包提供了打印函数将数据以字符串形式输出到控制台\",{\"1\":{\"248\":1}}],[\"包头\",{\"1\":{\"81\":1,\"82\":1}}],[\"包含路径\",{\"1\":{\"156\":1}}],[\"包含小数\",{\"1\":{\"81\":1}}],[\"包含了一道题的全部信息\",{\"1\":{\"62\":1}}],[\"包含5个整数的向量\",{\"1\":{\"17\":2}}],[\"包含头文件\",{\"1\":{\"17\":1}}],[\"包括两张表交集部分数据\",{\"1\":{\"204\":2}}],[\"包括新增\",{\"1\":{\"31\":1}}],[\"包括编程语言\",{\"1\":{\"3\":1}}],[\"包括算法题\",{\"1\":{\"2\":1}}],[\"以支持遍历\",{\"1\":{\"332\":1}}],[\"以便后续复用\",{\"1\":{\"332\":1}}],[\"以0x开头\",{\"1\":{\"292\":1}}],[\"以0开头\",{\"1\":{\"292\":1}}],[\"以获得更简洁\",{\"1\":{\"260\":2}}],[\"以go的语法输出\",{\"1\":{\"257\":1}}],[\"以此来提高数据的操作效率\",{\"1\":{\"199\":1}}],[\"以此类推\",{\"1\":{\"156\":1}}],[\"以分号结尾\",{\"1\":{\"169\":1}}],[\"以免占c盘系统盘内存\",{\"1\":{\"136\":1}}],[\"以\",{\"1\":{\"123\":1}}],[\"以及一些表格的例子pyecharts\",{\"1\":{\"104\":1}}],[\"以上就完成了环境的搭建\",{\"1\":{\"140\":1}}],[\"以上就是\",{\"1\":{\"101\":1}}],[\"以上就是python+pycharm的详细安装过程\",{\"1\":{\"76\":1}}],[\"以上\",{\"1\":{\"87\":1}}],[\"以qurey=python\",{\"1\":{\"87\":1}}],[\"以避免频繁的重新分配\",{\"1\":{\"17\":1}}],[\"以二维vector为例\",{\"1\":{\"17\":1}}],[\"以提高性能\",{\"1\":{\"17\":1}}],[\"以下代码块中std\",{\"1\":{\"17\":1}}],[\"以容纳未来添加的元素\",{\"1\":{\"15\":1}}],[\"因为utf8编码下一个中文汉字由3~4个字节组成\",{\"1\":{\"300\":1}}],[\"因为内存总是被初始化过的\",{\"1\":{\"247\":1}}],[\"因为此时a和b是不同的类型\",{\"1\":{\"238\":1}}],[\"因为此时name只读\",{\"1\":{\"151\":1}}],[\"因为lambda表达式的类型不太容易获取\",{\"1\":{\"231\":1}}],[\"因为删除器不是在构造函数中调用的\",{\"1\":{\"231\":1}}],[\"因为以new\",{\"1\":{\"231\":1}}],[\"因为智能指针并不是只管理以new方式申请到的内存空间\",{\"1\":{\"231\":1}}],[\"因为后面还需要进行解锁操作\",{\"1\":{\"230\":1}}],[\"因为拷贝出来的对象都被销毁了\",{\"1\":{\"230\":1}}],[\"因为静态成员变量是所有类型对象共享的\",{\"1\":{\"229\":1}}],[\"因为这就意味着每个shared\",{\"1\":{\"229\":1}}],[\"因为总有一些场景需要进行拷贝\",{\"1\":{\"226\":1}}],[\"因为不管是二叉搜索数还是红黑数\",{\"1\":{\"219\":1}}],[\"因为conda很多下载的东西在国外\",{\"1\":{\"136\":1}}],[\"因为还涉及到环境和包的下载\",{\"1\":{\"136\":1}}],[\"因为在修改\",{\"1\":{\"17\":1}}],[\"因为它们可能会导致性能开销\",{\"1\":{\"16\":1}}],[\"因此改变副本的值\",{\"1\":{\"247\":1}}],[\"因此node1的释放取决于node2当中的\",{\"1\":{\"233\":1}}],[\"因此这两个资源对应的引用计数最终都减到了1\",{\"1\":{\"233\":1}}],[\"因此这里模拟实现的时候不能将删除器的类型设置为构造函数的模板参数\",{\"1\":{\"231\":1}}],[\"因此势必需要用一个成员变量将删除器保存下来\",{\"1\":{\"231\":1}}],[\"因此不能将删除器的类型设置为构造函数的模板参数\",{\"1\":{\"231\":1}}],[\"因此不建议直接使用\",{\"1\":{\"140\":1}}],[\"因此c++标准库中可以将删除器的类型设置为构造函数的模板参数\",{\"1\":{\"231\":1}}],[\"因此当智能指针管理的资源不是以new的方式申请到的内存空间时\",{\"1\":{\"231\":1}}],[\"因此当一个资源对应的引用计数减为0时\",{\"1\":{\"229\":1}}],[\"因此代码中借助了一个flag变量\",{\"1\":{\"230\":1}}],[\"因此还需要将对应的互斥锁进行释放\",{\"1\":{\"230\":1}}],[\"因此互斥锁也需要在堆区创建\",{\"1\":{\"230\":1}}],[\"因此可以对引用计数的操作进行加锁保护\",{\"1\":{\"230\":1}}],[\"因此需要通过加锁来对引用计数进行保护\",{\"1\":{\"230\":1}}],[\"因此多个线程可能会同时对同一个引用计数进行自增或自减操作\",{\"1\":{\"230\":1}}],[\"因此保证了同一个资源不会被释放多次\",{\"1\":{\"228\":1}}],[\"因此使用auto\",{\"1\":{\"226\":1}}],[\"因此根据解决智能指针拷贝问题方式的不同\",{\"1\":{\"225\":1}}],[\"因此将sp4赋值给sp3后\",{\"1\":{\"225\":1}}],[\"因此用sp1拷贝构造sp2后\",{\"1\":{\"225\":1}}],[\"因此它的执行速度非常快\",{\"1\":{\"17\":1}}],[\"因此要谨慎处理大型vector的插入操作\",{\"1\":{\"16\":1}}],[\"当两对应的二进位相异时\",{\"1\":{\"322\":1}}],[\"当表达式1的结果为true时\",{\"1\":{\"315\":1}}],[\"当需要处理中文\",{\"1\":{\"300\":1}}],[\"当底层数组不能容纳新增的元素时\",{\"1\":{\"285\":1}}],[\"当资源对应的引用计数减为0时对应的资源才会被释放\",{\"1\":{\"233\":1}}],[\"当出了main函数的作用域后\",{\"1\":{\"233\":1}}],[\"当以new的方式申请到两个listnode结点并交给两个智能指针管理后\",{\"1\":{\"233\":1}}],[\"当shared\",{\"1\":{\"231\":1}}],[\"当sp3和sp4析构时就会导致这块空间被释放两次\",{\"1\":{\"225\":1}}],[\"当sp1和sp2析构时就会导致这块空间被释放两次\",{\"1\":{\"225\":1}}],[\"当智能指针对象的生命周期结束时\",{\"1\":{\"231\":1}}],[\"当引用计数被减为0时需要释放互斥锁资源\",{\"1\":{\"230\":1}}],[\"当一个资源对应的引用计数减为0时\",{\"1\":{\"230\":1}}],[\"当一个资源第一次被管理时就在堆区开辟一块空间用于存储其对应的引用计数\",{\"1\":{\"229\":1}}],[\"当一个资源的引用计数减为0时说明已经没有对象在管理这块资源了\",{\"1\":{\"228\":1}}],[\"当一个对象不再管理这块资源或该对象被析构时则将该资源对应的引用计数进行\",{\"1\":{\"228\":1}}],[\"当新增一个对象管理这块资源时则将该资源对应的引用计数进行++\",{\"1\":{\"228\":1}}],[\"当我们将一个指针赋值给另一个指针时\",{\"1\":{\"225\":1}}],[\"当我们向二叉查找树保存数据时\",{\"1\":{\"219\":1}}],[\"当根节点中可以存储\",{\"1\":{\"219\":1}}],[\"当然也包含表1和表2交集部分的数据\",{\"1\":{\"206\":2}}],[\"当数据量较大时\",{\"1\":{\"196\":1}}],[\"当进行删除全部数据操作时\",{\"1\":{\"188\":1}}],[\"当前元素个数\",{\"1\":{\"332\":1}}],[\"当前模拟实现的shared\",{\"1\":{\"230\":1}}],[\"当前页数据列表\",{\"1\":{\"196\":1}}],[\"当前页码\",{\"1\":{\"196\":1}}],[\"当前路径下执行\",{\"1\":{\"144\":1}}],[\"当前源\",{\"1\":{\"27\":1}}],[\"当\",{\"1\":{\"17\":1}}],[\"当vector的内存不足以容纳新元素时\",{\"1\":{\"16\":1}}],[\"当vector的容量不足以存储新元素时\",{\"1\":{\"16\":1}}],[\"当你创建一个空的vector或通过指定初始大小时\",{\"1\":{\"15\":1}}],[\"这两种浮点型数据格式遵循ieee\",{\"1\":{\"293\":1}}],[\"这两个资源对应的引用计数都被加到了1\",{\"1\":{\"233\":1}}],[\"这点需要特别注意\",{\"1\":{\"283\":1}}],[\"这几个函数功能分别类似于fmt\",{\"1\":{\"272\":1}}],[\"这几个函数分别类似于\",{\"1\":{\"271\":1}}],[\"这几个对象应该用到的是同一个引用计数\",{\"1\":{\"229\":1}}],[\"这就是为什么只进行一个连接操作时这两个结点就都能够正确释放的原因\",{\"1\":{\"233\":1}}],[\"这些对象被拷贝出来后又会立即被销毁\",{\"1\":{\"230\":1}}],[\"这会导致管理相同资源的对象和管理不同资源的对象用到的都是同一个引用计数\",{\"1\":{\"229\":1}}],[\"这会导致旧的迭代器失效\",{\"1\":{\"17\":1}}],[\"这时候switch语句后面不需要再跟判断变量\",{\"1\":{\"317\":1}}],[\"这时程序运行结束后两个结点都没有被释放\",{\"1\":{\"233\":1}}],[\"这时程序的执行流会直接跳转到主函数中的catch块中执行\",{\"1\":{\"224\":1}}],[\"这时为了让连接节点时的赋值操作能够执行\",{\"1\":{\"233\":1}}],[\"这时我们模拟实现的shared\",{\"1\":{\"231\":1}}],[\"这时就需要用到定制删除器来控制释放资源的方式\",{\"1\":{\"231\":1}}],[\"这时就可以将该资源进行释放了\",{\"1\":{\"228\":1}}],[\"这时当智能指针对象的生命周期结束时\",{\"1\":{\"231\":1}}],[\"这时管理同一个资源的多个对象访问到的就是同一个引用计数\",{\"1\":{\"229\":1}}],[\"这时同一个资源就不会被多次释放了\",{\"1\":{\"226\":1}}],[\"这样便于开发者以二进制\",{\"1\":{\"292\":1}}],[\"这样就只需要对addref和releaseref函数进行加锁保护即可\",{\"1\":{\"230\":1}}],[\"这样也能保证资源不会被多次释放\",{\"1\":{\"226\":1}}],[\"这样一来\",{\"1\":{\"224\":1}}],[\"这样宽度就会增加从而降低树的高度\",{\"1\":{\"219\":1}}],[\"这样确实比之前的方式快了很多\",{\"1\":{\"219\":1}}],[\"这种写法类似于其他编程语言中的while\",{\"1\":{\"316\":1}}],[\"这种情况下可以使用bufio包来实现\",{\"1\":{\"270\":1}}],[\"这种子查询称为表子查询\",{\"1\":{\"212\":1}}],[\"这种子查询称为行子查询\",{\"1\":{\"211\":1}}],[\"这种子查询称为列子查询\",{\"1\":{\"210\":1}}],[\"这种子查询称为标量子查询\",{\"1\":{\"209\":1}}],[\"这种方式不安全\",{\"1\":{\"167\":1}}],[\"这种策略可以减少频繁的内存分配和复制操作\",{\"1\":{\"16\":1}}],[\"这条命令的stdout\",{\"1\":{\"157\":1}}],[\"这也是注释\",{\"1\":{\"146\":1}}],[\"这一步取决于电脑的性能\",{\"1\":{\"134\":1}}],[\"这里可以将lambda表达式的类型指明为一个包装器类型\",{\"1\":{\"231\":1}}],[\"这里以加锁为例\",{\"1\":{\"230\":1}}],[\"这里创建一个名为yolov11\",{\"1\":{\"140\":1}}],[\"这里选个for\",{\"1\":{\"139\":1}}],[\"这里建议修改为清华的镜像源\",{\"1\":{\"136\":1}}],[\"这里建议修改为其他盘\",{\"1\":{\"134\":1}}],[\"这里默认是下载在c盘的\",{\"1\":{\"136\":1}}],[\"这里把三个勾全部打上\",{\"1\":{\"134\":1}}],[\"这里就不过多赘述\",{\"1\":{\"116\":1}}],[\"这里的路径按照默认来就行\",{\"1\":{\"138\":1}}],[\"这里的dit\",{\"1\":{\"89\":1}}],[\"这里的\",{\"1\":{\"27\":1}}],[\"这边x\",{\"1\":{\"116\":1}}],[\"这组数据就会成为样例\",{\"1\":{\"57\":1}}],[\"这可能导致迭代器失效\",{\"1\":{\"17\":1}}],[\"这可能导致未定义行为\",{\"1\":{\"17\":1}}],[\"这是不太合适的\",{\"1\":{\"231\":1}}],[\"这是一个注释>\",{\"1\":{\"325\":1}}],[\"这是一个错误信息\",{\"1\":{\"255\":1}}],[\"这是一个档案主页的案例\",{\"1\":{\"1\":1}}],[\"这是一行注释\",{\"1\":{\"146\":1}}],[\"这是因为\",{\"1\":{\"17\":1}}],[\"这有助于减少内存开销和提高性能\",{\"1\":{\"17\":1}}],[\"这个时候编译器会根据等号右边的值来推导变量的类型完成初始化\",{\"1\":{\"309\":1}}],[\"这个时候就需要将a和b强制类型转换为float64类型\",{\"1\":{\"302\":1}}],[\"这个数组的容量够用就添加新增元素\",{\"1\":{\"285\":1}}],[\"这个比较常用\",{\"1\":{\"269\":1}}],[\"这个释放后另一个资源的引用计数也会被减为0\",{\"1\":{\"233\":1}}],[\"这个删除器是一个可调用对象\",{\"1\":{\"231\":1}}],[\"这个自行注册就行\",{\"1\":{\"139\":1}}],[\"这个页面是用来运行\",{\"1\":{\"60\":1}}],[\"这个页面是用来放解这道题的代码的\",{\"1\":{\"59\":1}}],[\"这个页面是用来对拍的\",{\"1\":{\"58\":1}}],[\"这个页面是用来管理数据的\",{\"1\":{\"57\":1}}],[\"这个页面是用来写题面和题解的\",{\"1\":{\"52\":1}}],[\"这个过程可能导致元素的重新分配\",{\"1\":{\"16\":1}}],[\"这个初始内存通常比容器实际需要的要大\",{\"1\":{\"15\":1}}],[\"始分配内存\",{\"0\":{\"15\":1}}],[\"18446744073709551615\",{\"1\":{\"290\":1}}],[\"18482\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"18\",{\"1\":{\"267\":2,\"308\":1,\"309\":1}}],[\"1kb\",{\"1\":{\"219\":1}}],[\"13版本之后引入了数字字面量语法\",{\"1\":{\"292\":1}}],[\"13版本为fmt\",{\"1\":{\"255\":1}}],[\"135w∗16\",{\"1\":{\"219\":1}}],[\"135w\",{\"1\":{\"219\":2}}],[\"13\",{\"1\":{\"183\":2}}],[\"130\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"19\",{\"1\":{\"181\":1}}],[\"1970\",{\"1\":{\"181\":1}}],[\"1901\",{\"1\":{\"181\":1}}],[\"1byte\",{\"1\":{\"181\":1}}],[\"1+cu118\",{\"1\":{\"140\":1}}],[\"123\",{\"1\":{\"292\":1}}],[\"123456\",{\"1\":{\"292\":1}}],[\"123456p\",{\"1\":{\"260\":1}}],[\"1234\",{\"1\":{\"260\":2}}],[\"12373\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"128\",{\"1\":{\"181\":1,\"290\":1}}],[\"12854\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"127\",{\"1\":{\"167\":1,\"181\":1,\"290\":1}}],[\"12\",{\"1\":{\"139\":1,\"181\":2,\"260\":4,\"264\":6}}],[\"12创建\",{\"1\":{\"134\":1}}],[\"12989\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"179\",{\"1\":{\"300\":1}}],[\"178\",{\"1\":{\"300\":2}}],[\"177\",{\"1\":{\"269\":2}}],[\"175494351\",{\"1\":{\"181\":1}}],[\"17128\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"17\",{\"1\":{\"28\":3}}],[\"111\",{\"1\":{\"300\":2}}],[\"1170∗1170=135w\",{\"1\":{\"219\":1}}],[\"1170\",{\"1\":{\"219\":3}}],[\"11348\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"11876\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"11\",{\"1\":{\"28\":4,\"181\":1,\"183\":2}}],[\"153\",{\"1\":{\"300\":1}}],[\"15096\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"15898\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"15584\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"15\",{\"1\":{\"28\":3,\"117\":1,\"120\":1,\"140\":1}}],[\"16位整型\",{\"1\":{\"290\":2}}],[\"16这样的规则自动进行扩容\",{\"1\":{\"285\":1}}],[\"16384\",{\"1\":{\"219\":1}}],[\"16kb\",{\"1\":{\"219\":2}}],[\"16777215\",{\"1\":{\"181\":1}}],[\"1650px\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1,\"126\":1}}],[\"16\",{\"1\":{\"28\":3,\"181\":2,\"219\":3,\"285\":2}}],[\"1415\",{\"1\":{\"311\":2}}],[\"1415926\",{\"1\":{\"257\":2}}],[\"14158\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"1400\",{\"1\":{\"125\":1,\"126\":1}}],[\"14679\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"14\",{\"1\":{\"17\":1,\"181\":1}}],[\"108\",{\"1\":{\"300\":4}}],[\"104\",{\"1\":{\"300\":2}}],[\"1010\",{\"1\":{\"292\":1}}],[\"101101\",{\"1\":{\"292\":1}}],[\"101\",{\"1\":{\"259\":1,\"300\":2}}],[\"1024\",{\"1\":{\"286\":1}}],[\"1024字节\",{\"1\":{\"219\":1}}],[\"10200\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"10的虚拟环境\",{\"1\":{\"140\":1}}],[\"10988\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"10794\",{\"1\":{\"82\":1,\"106\":1,\"112\":1}}],[\"100010000\",{\"1\":{\"89\":1,\"91\":1}}],[\"100010000对应的是全国参数\",{\"1\":{\"86\":1}}],[\"1000001\",{\"1\":{\"259\":1}}],[\"10000\",{\"1\":{\"81\":1,\"82\":1}}],[\"1000\",{\"1\":{\"17\":2,\"81\":1,\"82\":1,\"90\":1,\"91\":1,\"97\":1,\"98\":1,\"181\":2,\"219\":1,\"230\":1,\"287\":5}}],[\"100\",{\"1\":{\"17\":2,\"58\":1,\"124\":1,\"126\":1,\"219\":1,\"247\":2,\"257\":2,\"283\":3,\"310\":1,\"311\":1,\"313\":2}}],[\"10\",{\"1\":{\"17\":3,\"58\":1,\"110\":2,\"112\":2,\"133\":1,\"140\":1,\"226\":1,\"228\":1,\"231\":3,\"238\":1,\"247\":2,\"279\":2,\"285\":2,\"292\":2,\"310\":1,\"311\":1,\"313\":5,\"316\":3,\"317\":6}}],[\"1\",{\"0\":{\"27\":1,\"74\":1,\"80\":1,\"85\":1,\"105\":1,\"145\":1,\"146\":2,\"147\":1,\"149\":1,\"156\":1,\"159\":1,\"166\":1,\"167\":2,\"168\":1,\"169\":2,\"170\":1,\"172\":1,\"173\":2,\"174\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":2,\"180\":1,\"181\":1,\"186\":1,\"190\":1,\"198\":1,\"202\":1,\"203\":2,\"204\":1,\"208\":1,\"214\":1,\"218\":1},\"1\":{\"13\":1,\"17\":14,\"28\":8,\"81\":4,\"82\":9,\"100\":1,\"107\":1,\"109\":1,\"112\":2,\"116\":4,\"117\":2,\"120\":4,\"123\":2,\"126\":2,\"133\":1,\"156\":2,\"159\":2,\"160\":2,\"161\":1,\"162\":1,\"167\":1,\"169\":1,\"180\":1,\"181\":7,\"187\":1,\"196\":1,\"226\":2,\"228\":2,\"229\":1,\"230\":2,\"231\":1,\"238\":1,\"240\":2,\"241\":2,\"242\":3,\"245\":1,\"247\":12,\"260\":2,\"268\":2,\"277\":6,\"278\":2,\"280\":1,\"284\":1,\"285\":18,\"287\":7,\"292\":1,\"293\":1,\"294\":1,\"312\":1,\"313\":8,\"317\":6}}],[\"other\",{\"1\":{\"328\":11,\"332\":2}}],[\"overflowed\",{\"1\":{\"286\":1}}],[\"overflow\",{\"1\":{\"286\":1}}],[\"old\",{\"1\":{\"286\":5}}],[\"ostream\",{\"1\":{\"328\":2}}],[\"os\",{\"1\":{\"253\":7,\"270\":2,\"272\":1,\"328\":1}}],[\"out\",{\"1\":{\"277\":1}}],[\"outer\",{\"1\":{\"206\":2}}],[\"output\",{\"1\":{\"80\":5,\"82\":2}}],[\"on\",{\"1\":{\"205\":1,\"206\":2,\"220\":2}}],[\"ok\",{\"1\":{\"138\":1}}],[\"obb\",{\"1\":{\"130\":1}}],[\"object\",{\"1\":{\"91\":1,\"98\":1}}],[\"operator>=\",{\"1\":{\"328\":1}}],[\"operator>\",{\"1\":{\"328\":1}}],[\"operator<<\",{\"1\":{\"328\":1}}],[\"operator<=\",{\"1\":{\"328\":1}}],[\"operator<\",{\"1\":{\"328\":1}}],[\"operator++\",{\"1\":{\"332\":1}}],[\"operator+\",{\"1\":{\"328\":1,\"332\":1}}],[\"operator==\",{\"1\":{\"328\":1,\"332\":1}}],[\"operator=\",{\"1\":{\"226\":2,\"229\":1,\"230\":1,\"234\":1,\"328\":2,\"332\":1}}],[\"operator\",{\"1\":{\"224\":2,\"226\":4,\"229\":2,\"230\":2,\"231\":3,\"234\":2,\"328\":1,\"332\":5}}],[\"openfile\",{\"1\":{\"253\":2}}],[\"open\",{\"1\":{\"82\":1,\"91\":1,\"98\":1}}],[\"opts\",{\"1\":{\"107\":1,\"108\":3,\"109\":1,\"112\":6,\"116\":1,\"117\":1,\"120\":3,\"124\":1,\"126\":2}}],[\"opts=opts\",{\"1\":{\"107\":6,\"108\":4,\"109\":7,\"110\":3,\"111\":2,\"112\":22,\"116\":5,\"117\":3,\"118\":2,\"119\":2,\"120\":12,\"124\":2,\"126\":3}}],[\"options\",{\"1\":{\"90\":3,\"91\":1,\"112\":1,\"120\":1,\"126\":1}}],[\"order\",{\"1\":{\"190\":2,\"195\":1}}],[\"org\",{\"1\":{\"140\":1}}],[\"orient=\",{\"1\":{\"111\":1,\"112\":1,\"119\":1,\"120\":1}}],[\"origin\",{\"1\":{\"31\":2}}],[\"orangered\",{\"1\":{\"107\":1,\"112\":1,\"116\":1,\"120\":1}}],[\"or\",{\"1\":{\"81\":5,\"82\":5,\"192\":1,\"321\":1}}],[\"oj\",{\"2\":{\"65\":1}}],[\"of\",{\"1\":{\"28\":1,\"90\":2,\"91\":1,\"97\":2,\"98\":1,\"241\":4,\"242\":2,\"277\":1}}],[\"o\",{\"1\":{\"13\":1,\"253\":3,\"257\":5,\"259\":2,\"265\":1,\"292\":1,\"300\":2}}],[\"帮助学习\",{\"1\":{\"11\":1,\"12\":1}}],[\"笔试题和面试题等\",{\"1\":{\"2\":1}}],[\"档案主页\",{\"1\":{\"1\":1}}],[\"和false\",{\"1\":{\"295\":1}}],[\"和切片的容量\",{\"1\":{\"280\":1}}],[\"和字段值的长度无关\",{\"1\":{\"181\":1}}],[\"和d\",{\"1\":{\"181\":2}}],[\"和city=100010000\",{\"1\":{\"86\":1}}],[\"和田地区\",{\"1\":{\"81\":1,\"82\":1}}],[\"和\",{\"0\":{\"38\":1},\"1\":{\"1\":1,\"17\":3,\"131\":1,\"181\":2,\"206\":1,\"224\":1,\"225\":1,\"226\":2,\"229\":1,\"234\":1,\"257\":1,\"319\":1,\"332\":1}}],[\"介绍\",{\"0\":{\"1\":1,\"203\":1,\"208\":1,\"214\":1,\"218\":1},\"1\":{\"35\":1,\"299\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
