const{entries:V}=Object,{fromEntries:et}=Object,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":91,\"nextId\":91,\"documentIds\":{\"0\":\"1\",\"1\":\"1#介绍\",\"2\":\"7\",\"3\":\"7#教程章节\",\"4\":\"7@0\",\"5\":\"8\",\"6\":\"8@0\",\"7\":\"8@1\",\"8\":\"9\",\"9\":\"9#_1-项目初始化\",\"10\":\"9#_2-安装依赖\",\"11\":\"9@0\",\"12\":\"10\",\"13\":\"10#推送代码到-github\",\"14\":\"10#使用-github-pages-发布站点\",\"15\":\"10@0\",\"16\":\"11\",\"17\":\"11#node-js\",\"18\":\"11#_1-点击-download-page-。\",\"19\":\"11#_2-运行安装包-保持所有的默认设置-一路下一步即可。\",\"20\":\"11#_3-然后再在安装路径的根目录下新建两个文件夹-node-cache和node-global-如图所示\",\"21\":\"11#_4-环境配置\",\"22\":\"11#_5-修改缓存目录和全局目录\",\"23\":\"11@0\",\"24\":\"11@1\",\"25\":\"12\",\"26\":\"12#教程章节\",\"27\":\"12@0\",\"28\":\"13\",\"29\":\"13#⬇️python-安装\",\"30\":\"13#_1-✅️️下载安装包python官网-。\",\"31\":\"13#_2-✅️️运行安装包。\",\"32\":\"13#⬇️pycharm-安装\",\"33\":\"13#_1-✅️️安装包下载\",\"34\":\"13#_2-✅️️pycharm-安装教程\",\"35\":\"13#_3-✅️️pycharm-常用快捷键\",\"36\":\"13@0\",\"37\":\"13@1\",\"38\":\"14\",\"39\":\"14#_1-✅️️数据合并\",\"40\":\"14#_2-✅️️数据处理\",\"41\":\"14#📌完整代码\",\"42\":\"14@0\",\"43\":\"15\",\"44\":\"15#_1-boss直聘\",\"45\":\"15#✅️url获取\",\"46\":\"15#✅️招聘信息获取\",\"47\":\"15#✅️代码编写\",\"48\":\"15#📌️url获取模块\",\"49\":\"15#📌数据抓取\",\"50\":\"15#✅️源代码如下\",\"51\":\"15#_2-智联招聘\",\"52\":\"15#✅️url获取-1\",\"53\":\"15#✅️招聘信息获取-1\",\"54\":\"15#✅️代码编写-1\",\"55\":\"15#📌url获取模块\",\"56\":\"15#📌数据抓取-1\",\"57\":\"15#✅️源代码如下-1\",\"58\":\"15#_3-前程无忧\",\"59\":\"15#✅️url获取-2\",\"60\":\"15#✅️简单demo编写\",\"61\":\"15@0\",\"62\":\"15@1\",\"63\":\"16\",\"64\":\"16#_1-全国招聘工作工资分布可视化表-html\",\"65\":\"16#📌数据获取\",\"66\":\"16#📌map-chart-地图\",\"67\":\"16#📌line-chart-折线图\",\"68\":\"16#📌bar-chart-柱状图\",\"69\":\"16#📌grid-chart-并行多图\",\"70\":\"16#📌timeline-时间线\",\"71\":\"16#📌完整代码\",\"72\":\"16#📌成果展示\",\"73\":\"16#_2-全国招聘工作数量可视化表-html\",\"74\":\"16#📌数据获取-1\",\"75\":\"16#📌map-chart-地图-1\",\"76\":\"16#📌pie-chart-饼图\",\"77\":\"16#📌grid-chart-并行多图-1\",\"78\":\"16#📌timeline-时间线-1\",\"79\":\"16#📌完整代码-1\",\"80\":\"16#📌成果展示-1\",\"81\":\"16#_3-岗位词云统计-html\",\"82\":\"16#📌数据获取-2\",\"83\":\"16#📌wordcloud-词云图\",\"84\":\"16#📌timeline-时间线-2\",\"85\":\"16#📌完整代码-2\",\"86\":\"16#📌成果展示-2\",\"87\":\"16@0\",\"88\":\"16@1\",\"89\":\"17\",\"90\":\"18\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,12],\"2\":[1,6],\"3\":[1,4],\"4\":[null,null,2],\"5\":[1,4],\"6\":[null,null,4],\"7\":[null,null,2],\"8\":[1,6],\"9\":[2,53],\"10\":[2,109],\"11\":[null,null,3],\"12\":[1,4],\"13\":[2,50],\"14\":[4,19],\"15\":[null,null,2],\"16\":[1,4],\"17\":[2,12],\"18\":[1],\"19\":[5,3],\"20\":[5],\"21\":[2,32],\"22\":[2,15],\"23\":[null,null,3],\"24\":[null,null,1],\"25\":[1,4],\"26\":[1,4],\"27\":[null,null,3],\"28\":[1,4],\"29\":[2,8],\"30\":[1],\"31\":[3,37],\"32\":[2,28],\"33\":[2,7],\"34\":[3,25],\"35\":[3,35],\"36\":[null,null,4],\"37\":[null,null,1],\"38\":[1,5],\"39\":[2,83],\"40\":[2,491],\"41\":[1,560],\"42\":[null,null,4],\"43\":[1,4],\"44\":[2],\"45\":[1,28],\"46\":[1,28],\"47\":[1,2],\"48\":[1,52],\"49\":[1,104],\"50\":[1,162],\"51\":[2],\"52\":[1,17],\"53\":[1,9],\"54\":[1,2],\"55\":[1,44],\"56\":[1,97],\"57\":[1,166],\"58\":[2,7],\"59\":[1,41],\"60\":[1,79],\"61\":[null,null,2],\"62\":[null,null,4],\"63\":[1,13],\"64\":[3],\"65\":[1,74],\"66\":[4,95],\"67\":[4,52],\"68\":[4,63],\"69\":[4,26],\"70\":[3,68],\"71\":[1,236],\"72\":[1],\"73\":[3],\"74\":[1,1],\"75\":[4,84],\"76\":[4,57],\"77\":[4,17],\"78\":[3,65],\"79\":[1,190],\"80\":[1],\"81\":[3],\"82\":[1,38],\"83\":[3,27],\"84\":[3,25],\"85\":[1,107],\"86\":[1],\"87\":[null,null,4],\"88\":[null,null,6],\"89\":[1,3],\"90\":[1]},\"averageFieldLength\":[1.813818233724173,50.30017069292894,1.624447073249658],\"storedFields\":{\"0\":{\"h\":\"个人介绍\"},\"1\":{\"h\":\"介绍\",\"t\":[\"这是一个档案主页的案例。\",\"要使用此布局，你应该在页面 Frontmatter 中设置 home: true 和 portfolio: true。\",\"相关配置文档请见 档案主页。\"]},\"2\":{\"h\":\"博客搭建\",\"t\":[\"此教程将指引你创建一个 VuePress Theme Hope 项目。\"]},\"3\":{\"h\":\"教程章节\",\"t\":[\"运行环境搭建\",\"创建项目\",\"配置项目\",\"项目部署\"]},\"4\":{\"c\":[\"学习笔记\",\"VuePress\"]},\"5\":{\"h\":\"项目配置\",\"t\":[\"本教程指引你如何配置 VuePress 项目。\"]},\"6\":{\"c\":[\"VuePress\",\"Tutorial\",\"Get Started\"]},\"7\":{\"c\":[\"Project Config\"]},\"8\":{\"h\":\"创建项目\",\"t\":[\"此教程将指引你创建一个 VuePress Theme Hope 项目。\"]},\"9\":{\"h\":\"1. 项目初始化\",\"t\":[\"使用 vuepress-theme-hope 主题提供的脚手架工具创建项目\",\"用管理员模式打开 cmd 窗口\",\"切换到想要放置项目的路径\",\"例如要切换到 E:\\\\Project ，执行 e: 切换到 E 盘，执行 cd [dir] 进入 [dir] 目录\",\"注意\",\"[dir]指的是你将要放置你的项目所在的文件路径\",\"执行以下命令：\",\"npm init vuepress-theme-hope my-docs\",\"注意\",\"这里的 my-docs 是一个参数，代表 VuePress Theme Hope 项目的文件夹名称，在本教程中，我们将项目生成至当前目录下的 my-docs 文件夹。 如果你有需求，你可以更改此参数来使用一个新文件夹名称。\",\"选择一些默认的配置\",\"选择包管理器 npm\",\"设置协议 MIT\",\"项目需要用到多语言么 NO\",\"你想要创建什么类型的项目 docs\",\"是否需要一个自动部署文档到 GitHub Pages 的工作流 YES\",\"选择你想使用的源 当前源\"]},\"10\":{\"h\":\"2. 安装依赖\",\"t\":[\"由于插件之间版本不同容易出现依赖冲突，可以直接修改package.json文件\",\"{ \\\"name\\\": \\\"vuepress-theme-hope-template\\\", \\\"description\\\": \\\"A project of vuepress-theme-hope\\\", \\\"version\\\": \\\"2.0.0\\\", \\\"license\\\": \\\"MIT\\\", \\\"type\\\": \\\"module\\\", \\\"scripts\\\": { \\\"docs:build\\\": \\\"vuepress-vite build src\\\", \\\"docs:clean-dev\\\": \\\"vuepress-vite dev src --clean-cache\\\", \\\"docs:dev\\\": \\\"vuepress-vite dev src\\\", \\\"docs:update-package\\\": \\\"npx vp-update\\\" }, \\\"devDependencies\\\": { \\\"@types/katex\\\": \\\"0.16.7\\\", \\\"@vue/repl\\\": \\\"4.4.2\\\", \\\"@vuepress/bundler-vite\\\": \\\"2.0.0-rc.15\\\", \\\"@vuepress/bundler-webpack\\\": \\\"2.0.0-rc.15\\\", \\\"@vuepress/helper\\\": \\\"2.0.0-rc.47\\\", \\\"@vuepress/plugin-feed\\\": \\\"2.0.0-rc.47\\\", \\\"@vuepress/plugin-revealjs\\\": \\\"2.0.0-rc.48\\\", \\\"@vueuse/core\\\": \\\"11.1.0\\\", \\\"@waline/client\\\": \\\"^3.3.2\\\", \\\"artplayer\\\": \\\"5.1.7\\\", \\\"echarts-wordcloud\\\": \\\"2.1.0\\\", \\\"flowchart.ts\\\": \\\"3.0.1\\\", \\\"katex\\\": \\\"0.16.11\\\", \\\"kotlin-playground\\\": \\\"1.30.0\\\", \\\"markmap-lib\\\": \\\"0.17.0\\\", \\\"markmap-toolbar\\\": \\\"0.17.0\\\", \\\"markmap-view\\\": \\\"0.17.0\\\", \\\"mermaid\\\": \\\"11.2.1\\\", \\\"sandpack-vue3\\\": \\\"3.1.11\\\", \\\"sass-embedded\\\": \\\"1.79.3\\\", \\\"sass-loader\\\": \\\"16.0.2\\\", \\\"vue\\\": \\\"3.5.8\\\", \\\"vuepress\\\": \\\"2.0.0-rc.15\\\", \\\"vuepress-plugin-components\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-plugin-md-enhance\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-plugin-search-pro\\\": \\\"^2.0.0-rc.54\\\", \\\"vuepress-shared\\\": \\\"2.0.0-rc.54\\\", \\\"vuepress-theme-hope\\\": \\\"2.0.0-rc.56\\\" } }\",\"用管理员模式在项目根目录(也就是你package.json所在的文件夹目录)执行以下命令，等待自动下载\",\"npm install\",\"下载完成后执行以下命令即可在本地打开博客：\",\"npm run docs:dev\",\"执行过程中出现 vuepress-theme-hope: ✖ @vuepress/plugin-redirect is not installed! 的报错是正常的，不需要管，也不要下载这个插件，容易出现依赖冲突\",\"根据返回的网址，即可在本地访问你的blog\"]},\"11\":{\"c\":[\"VuePress Theme Hope\"]},\"12\":{\"h\":\"项目部署\",\"t\":[\"本教程指引你如何部署 VuePress 项目。\"]},\"13\":{\"h\":\"推送代码到 Github\",\"t\":[\"首先你需要创建一个 GitHub 的仓库，仓库地址是一个普通的形如 https://github.com/<USERNAME>/<REPO> 的格式。\",\"初始化 Git 仓库\",\"git init\",\"连接到远程仓库\",\"git remote add origin https://github.com/<USERNAME>/<REPO>\",\"将当前目录下的所有更改（包括新增、修改或删除的文件）添加到暂存区，准备进行下一次提交\",\"git add .\",\"如果出现有关`CRLF`、`LF`之类换行符的报错，执行以下命令之一：\",\"git config --global core.autocrlf true\",\"git add --renormalize .\",\"将当前暂存区中的更改提交到本地 Git 仓库\",\"git commit -m \\\"提交信息\\\"\",\"将本地 Git 仓库中的更改推送到远程仓库\",\"git push origin 分支\",\"分支具体查看`.github\\\\workflows\\\\deploy-docs.yml`文件\",\"静态部署\",\"npm run docs:build\"]},\"14\":{\"h\":\"使用 Github Pages 发布站点\",\"t\":[\"上一步完成推送后，应该会自动生成 gh-pages 分支，前往 GitHub 仓库的Pages，选择 gh-pages 作为 GitHub Pages 的源。\",\" 你的网站将会被发布到 https://<USERNAME>.github.io/<REPO>/ 。\"]},\"15\":{\"c\":[\"VuePress\",\"GitHub\"]},\"16\":{\"h\":\"运行环境搭建\",\"t\":[\"本教程将指导你如何搭建 VuePress 的运行环境。\"]},\"17\":{\"h\":\"Node.js\",\"t\":[\"介绍\",\"Node.js® 是一个基于 Chrome's V8 JavaScript engine的 JavaScript 运行时环境。\",\"你需要下载并安装最新的长期维护版。\"]},\"18\":{\"h\":\"。\"},\"19\":{\"h\":\"2. 运行安装包，保持所有的默认设置，一路下一步即可。\",\"t\":[\"自定义安装路径\",\"不建议安装在C盘，自定义一下安装路径\"]},\"20\":{\"h\":\"3. 然后再在安装路径的根目录下新建两个文件夹， 和 ,如图所示：\"},\"21\":{\"h\":\"4. 环境配置\",\"t\":[\"建好以后开始配置环境：高级系统设置——环境变量\",\"新建一个NODE_HOME，变量值为安装路径\",\"然后再在系统变量的path中添加\",\"%NODE_HOME%\",\"%NODE_HOME%\\\\node_global\",\"%NODE_HOME%\\\\node_cache\",\"然后将用户变量默认的 C:\\\\User\\\\35025\\\\AppDate\\\\Roaming\\\\npm 改成 前面新建文件夹node_global的路径，例如我的是D:\\\\Environment\\\\nodejs\\\\node_globle\",\"到这一步，环境就已经完全配好了，现在开始查看，键盘Win+R进入cmd 输入以下指令\",\"node -v\",\"npm -v\",\"能够正确显示版本号说明安装成功\"]},\"22\":{\"h\":\"5. 修改缓存目录和全局目录\",\"t\":[\"用管理员模式打开 cmd 窗口执行以下指令\",\"-设置缓存到 node_cache 文件夹：\",\"npm config set cache [dir]\",\"-设置全局模块的安装路径到 node_global 文件夹：\",\"npm config set prefix [dir]\",\"[dir]是你对应文件夹的绝对路径\"]},\"23\":{\"c\":[\"环境配置\",\"Node.js\"]},\"24\":{\"c\":[\"Runtime\"]},\"25\":{\"h\":\"招聘网站爬虫\",\"t\":[\"此教程将指引你创建一个 招聘网站爬虫 项目。\"]},\"26\":{\"h\":\"教程章节\",\"t\":[\"环境配置\",\"数据爬取\",\"数据处理\",\"数据可视化\"]},\"27\":{\"c\":[\"学习笔记\",\"python\",\"爬虫\"]},\"28\":{\"h\":\"环境配置\",\"t\":[\"本教程将指导你如何配置 招聘网站爬虫 的运行环境。\"]},\"29\":{\"h\":\"⬇️Python 安装\",\"t\":[\"前言\",\"人生苦短，快用Python！\",\"Python作为众多编程语言之一，是学习者比较容易上手的一门语言，有着简单、易学、好用等特点\"]},\"30\":{\"h\":\"。\"},\"31\":{\"h\":\"2. ✅️️运行安装包。\",\"t\":[\"相关信息\",\"python安装非常简单，双击下载好的安装包，进入选择安装方式\",\"第一种：Install Now 立即安装，即采用默认安装方式，不能自行指定安装的路径。\",\"第二种：Customize installation 自定义安装，可以自己选择安装的路径（建议自定义安装）。\",\"选择第二种，自定义安装，把最底下Add python.exe to PATH打上勾，否则需要手动添加环境变量\",\"下一步：默认把所有的勾选上即可\",\"下一步：修改安装路径，建议别安装在C盘。如果没有联网，请不要勾选第六项\",\"下一步：安装完成，点击Close关闭即可\",\"安装完成之后，使用win+R键输入cmd进入DOS界面，输入python验证，如下图所示即安装成功，继续输入exit()退出即可\"]},\"32\":{\"h\":\"⬇️Pycharm 安装\",\"t\":[\"相关信息\",\"PyCharm是一款非常好用的Python IDE，由JetBrains开发而成。\",\"官方下载：Download PyCharm: Python IDE for Professional Developers by JetBrains\",\"我下载的是 专业版本\",\"PyCharm针对每个平台都有Professional和Community两个版本，自己可根据自己的需要进行选择。\",\"Professional：专业版（建议选择专业版），功能强大，属于收费版。\",\"Community：社区版，只支持Python开发，开源、免费，用作学习也够用。\"]},\"33\":{\"h\":\"1. ✅️️安装包下载\",\"t\":[\"由于专业版本需要付费，一下包含破解教程\",\"警告\",\"涉及版权，自行选择\",\"微信公众号搜索软件管家\",\"对话中发送pycharm\"]},\"34\":{\"h\":\"2. ✅️️Pycharm 安装教程\",\"t\":[\"下载的内容为 JetBrains 全家桶，安装教程以IDEA为例子\",\"下面将讲解 Pycharm 的安装教程，破解过程与IDEA一致\",\"首先找到解压包下的安装包\",\"PyCharm的安装通用非常简单，双击进行下一步即可\",\"下一步：修改安装路径，建议别放在C盘。\",\"下一步：可以都勾选上\",\"下一步：直接点击Install安装即可\",\"安装完成：点击I want to manually reboot later稍后重启系统\",\"如何破解，请参照公众号文章教程\"]},\"35\":{\"h\":\"3.✅️️Pycharm 常用快捷键\",\"t\":[\"折叠 Ctrl -: 折叠当前代码 Ctrl +: 展开当前代码S Ctrl Shift -: 折叠所有代码 Ctrl Shift +: 展开所有代码 移动 Shift+Enter: 在行中间执行时，智能跳到下一行。 Ctrl+Alt+Enter: 向上插入一行 注释 Ctrl /: 注释、取消注释行 编辑 Ctrl + D: 未选中时，复制当前行到下一行，选中时复制粘贴选中部分。 删除 Ctrl + Y: 删除当前行 查看 Ctrl + Q: 查看文档 缩进 Shift + Tab: 反向退格 替换 Ctrl + r: 替换\",\"以上就是Python+Pycharm的详细安装过程，及PyCharm的使用！\"]},\"36\":{\"c\":[\"Python\",\"Jupyter notebook\",\"pyecharts\"]},\"37\":{\"c\":[\"爬虫\"]},\"38\":{\"h\":\"数据处理\",\"t\":[\"本教程将指导你如何处理 爬取 招聘网站 后的求职信息 。\"]},\"39\":{\"h\":\"1. ✅️️数据合并\",\"t\":[\"前面我们获取了两个网站的数据，我们现在将两个网站数据进行合并\",\"def merge_and_deduplicate(file1, file2, output_file): # 读取两个 CSV 文件的数据 df1 = pd.read_csv(file1) df2 = pd.read_csv(file2) # 合并两个 DataFrame df_combined = pd.concat([df1, df2]) # 去除重复行，假设根据职位、公司、城市字段去重 df_cleaned = df_combined.drop_duplicates(subset=['职位', '公司', '城市']) # 保存合并且去重后的数据到新的 CSV 文件 df_cleaned.to_csv(output_file, index=False) print(f\\\"数据已去重并保存为 {output_file}\\\")\",\"批量收集网站数据\",\"keywords = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] for keyword in keywords: city = '全国' safe_keyword = keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') safe_city = city.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') zhilian_spider = Zhilian(keyword=keyword, city=city) zhilian_spider.run() # 创建 Boss 对象并生成对应的 CSV 文件 boss_spider = Boss(keyword=keyword, city=city) boss_spider.run() file1 = f'Boss直聘_关键词_{safe_keyword}_城市_{safe_city}.csv' file2 = f'智联招聘_关键词_{safe_keyword}_城市_{safe_city}.csv' output_file = f'{safe_keyword}.csv' merge_and_deduplicate(file1, file2, output_file)\"]},\"40\":{\"h\":\"2. ✅️️数据处理\",\"t\":[\"前言\",\"我们在招聘网站中获取到的数据，有些需要进行处理 例如薪资\",\"日期有 时，日，周，月 单位有 元，千，万，k，w 还有一些为面议\",\"比如还有城市\",\"城市对应的省份，我们在获取城市代码的过程中可以获取到它对应的省（参考智联招聘的city.json文件）\",\"但是该文件的省份为缩写，由于我们在后面的可视化表格需要全称，故我们在此一并处理\",\"def getUnit(text): x = 1 if('时' in text): x = 8*30 elif ('周' in text): x = 4 elif ('日' in text) or ('天' in text): x = 30 if('万' in text) or ('w' in text) or ('W' in text): return 10000 * x if('千' in text) or ('k' in text) or ('K' in text): return 1000 * x return 1 * x def getSalary(salary): parts = str(salary).split('-') if len(parts) ==2: part1, part2 = parts ##正则表达式获取数字（包含小数） number1 = re.match(r\\\"(\\\\d+(\\\\.\\\\d+)?)\\\", part1) number2 = re.match(r\\\"(\\\\d+(\\\\.\\\\d+)?)\\\", part2) number1 = number1.group(1) number2 = number2.group(1) text1 = part1[len(number1):] text2 = part2[len(number2):] #获取单位 p1 = getUnit(text1) p2 = getUnit(text2) if not text1 : p1 = p2 return [int(float(number1) * p1), int(float(number2) * p2)] else: return False #获取城市对应省份全称 def getProvince(province): for pro in ['内蒙古自治区', '新疆维吾尔自治区', '西藏自治区', '广西壮族自治区', '宁夏回族自治区', '香港特别行政区', '澳门特别行政区', '北京市','天津市', '重庆市', '上海市']: if province in pro: return pro return province + '省' city_dict = {'北京': '北京', '上海': '上海', '天津': '天津', '重庆': '重庆', '哈尔滨': '黑龙江', '齐齐哈尔': '黑龙江', '牡丹江': '黑龙江', '佳木斯': '黑龙江', '绥化': '黑龙江', '黑河': '黑龙江', '伊春': '黑龙江', '大庆': '黑龙江', '七台河': '黑龙江', '鸡西': '黑龙江', '鹤岗': '黑龙江', '双鸭山': '黑龙江', '大兴安岭地区': '黑龙江', '长春': '吉林', '吉林': '吉林', '四平': '吉林', '通化': '吉林', '白城': '吉林', '辽源': '吉林', '松原': '吉林', '白山': '吉林', '延边朝鲜族自治州': '吉林', '沈阳': '辽宁', '大连': '辽宁', '鞍山': '辽宁', '抚顺': '辽宁', '本溪': '辽宁', '丹东': '辽宁', '锦州': '辽宁', '营口': '辽宁', '阜新': '辽宁', '辽阳': '辽宁', '铁岭': '辽宁', '朝阳': '辽宁', '盘锦': '辽宁', '葫芦岛': '辽宁', '呼和浩特': '内蒙古', '包头': '内蒙古', '乌海': '内蒙古', '通辽': '内蒙古', '赤峰': '内蒙古', '鄂尔多斯': '内蒙古', '呼伦贝尔': '内蒙古', '巴彦淖尔': '内蒙古', '乌兰察布': '内蒙古', '锡林郭勒盟': '内蒙古', '兴安盟': '内蒙古', '阿拉善盟': '内蒙古', '石家庄': '河北', '保定': '河北', '张家口': '河北', '承德': '河北', '唐山': '河北', '廊坊': '河北', '沧州': '河北', '衡水': '河北', '邢台': '河北', '邯郸': '河北', '秦皇岛': '河北', '太原': '山西', '大同': '山西', '阳泉': '山西', '晋中': '山西', '长治': '山西', '晋城': '山西', '临汾': '山西', '运城': '山西', '朔州': '山西', '忻州': '山西', '吕梁': '山西', '西安': '陕西', '咸阳': '陕西', '延安': '陕西', '榆林': '陕西', '渭南': '陕西', '商洛': '陕西', '安康': '陕西', '汉中': '陕西', '宝鸡': '陕西', '铜川': '陕西', '济南': '山东', '青岛': '山东', '淄博': '山东', '德州': '山东', '烟台': '山东', '潍坊': '山东', '济宁': '山东', '泰安': '山东', '临沂': '山东', '菏泽': '山东', '滨州': '山东', '东营': '山东', '威海': '山东', '枣庄': '山东', '日照': '山东', '聊城': '山东', '乌鲁木齐': '新疆', '克拉玛依': '新疆', '昌吉回族自治州': '新疆', '巴音郭楞蒙古自治州': '新疆', '博尔塔拉蒙古自治州': '新疆', '伊犁哈萨克自治州': '新疆', '吐鲁番': '新疆', '哈密': '新疆', '阿克苏地区': '新疆', '克孜勒苏柯尔克孜自治州': '新疆', '喀什地区': '新疆', '和田地区': '新疆', '塔城地区': '新疆', '阿勒泰地区': '新疆', '石河子': '新疆', '阿拉尔': '新疆', '图木舒克': '新疆', '五家渠': '新疆', '铁门关': '新疆', '北屯市': '新疆', '可克达拉市': '新疆', '昆玉市': '新疆', '双河市': '新疆', '新星市': '新疆', '胡杨河市': '新疆', '白杨市': '新疆', '拉萨': '西藏', '日喀则': '西藏', '昌都': '西藏', '林芝': '西藏', '山南': '西藏', '那曲': '西藏', '阿里地区': '西藏', '西宁': '青海', '海东': '青海', '海北藏族自治州': '青海', '黄南藏族自治州': '青海', '海南藏族自治州': '青海', '果洛藏族自治州': '青海', '玉树藏族自治州': '青海', '海西蒙古族藏族自治州': '青海', '兰州': '甘肃', '定西': '甘肃', '平凉': '甘肃', '庆阳': '甘肃', '武威': '甘肃', '金昌': '甘肃', '张掖': '甘肃', '酒泉': '甘肃', '天水': '甘肃', '白银': '甘肃', '陇南': '甘肃', '嘉峪关': '甘肃', '临夏回族自治州': '甘肃', '甘南藏族自治州': '甘肃', '银川': '宁夏', '石嘴山': '宁夏', '吴忠': '宁夏', '固原': '宁夏', '中卫': '宁夏', '郑州': '河南', '安阳': '河南', '新乡': '河南', '许昌': '河南', '平顶山': '河南', '信阳': '河南', '南阳': '河南', '开封': '河南', '洛阳': '河南', '商丘': '河南', '焦作': '河南', '鹤壁': '河南', '濮阳': '河南', '周口': '河南', '漯河': '河南', '驻马店': '河南', '三门峡': '河南', '济源': '河南', '南京': '江苏', '无锡': '江苏', '镇江': '江苏', '苏州': '江苏', '南通': '江苏', '扬州': '江苏', '盐城': '江苏', '徐州': '江苏', '淮安': '江苏', '连云港': '江苏', '常州': '江苏', '泰州': '江苏', '宿迁': '江苏', '武汉': '湖北', '襄阳': '湖北', '鄂州': '湖北', '孝感': '湖北', '黄冈': '湖北', '黄石': '湖北', '咸宁': '湖北', '荆州': '湖北', '宜昌': '湖北', '十堰': '湖北', '随州': '湖北', '荆门': '湖北', '恩施土家族苗族自治州': '湖北', '仙桃': '湖北', '潜江': '湖北', '天门': '湖北', '神农架': '湖北', '杭州': '浙江', '湖州': '浙江', '嘉兴': '浙江', '宁波': '浙江', '绍兴': '浙江', '台州': '浙江', '温州': '浙江', '丽水': '浙江', '金华': '浙江', '衢州': '浙江', '舟山': '浙江', '合肥': '安徽', '蚌埠': '安徽', '芜湖': '安徽', '淮南': '安徽', '马鞍山': '安徽', '安庆': '安徽', '宿州': '安徽', '阜阳': '安徽', '亳州': '安徽', '滁州': '安徽', '淮北': '安徽', '铜陵': '安徽', '宣城': '安徽', '六安': '安徽', '池州': '安徽', '黄山': '安徽', '福州': '福建', '厦门': '福建', '宁德': '福建', '莆田': '福建', '泉州': '福建', '漳州': '福建', '龙岩': '福建', '三明': '福建', '南平': '福建', '南昌': '江西', '九江': '江西', '上饶': '江西', '抚州': '江西', '宜春': '江西', '吉安': '江西', '赣州': '江西', '景德镇': '江西', '萍乡': '江西', '新余': '江西', '鹰潭': '江西', '长沙': '湖南', '湘潭': '湖南', '株洲': '湖南', '衡阳': '湖南', '郴州': '湖南', '常德': '湖南', '益阳': '湖南', '娄底': '湖南', '邵阳': '湖南', '岳阳': '湖南', '张家界': '湖南', '怀化': '湖南', '永州': '湖南', '湘西土家族苗族自治州': '湖南', '贵阳': '贵州', '遵义': '贵州', '安顺': '贵州', '铜仁': '贵州', '毕节': '贵州', '六盘水': '贵州', '黔东南苗族侗族自治州': '贵州', '黔南布依族苗族自治州': '贵州', '黔西南布依族苗族自治州': '贵州', '成都': '四川', '攀枝花': '四川', '自贡': '四川', '绵阳': '四川', '南充': '四川', '达州': '四川', '遂宁': '四川', '广安': '四川', '巴中': '四川', '泸州': '四川', '宜宾': '四川', '内江': '四川', '资阳': '四川', '乐山': '四川', '眉山': '四川', '雅安': '四川', '德阳': '四川', '广元': '四川', '阿坝藏族羌族自治州': '四川', '凉山彝族自治州': '四川', '甘孜藏族自治州': '四川', '广州': '广东', '韶关': '广东', '惠州': '广东', '梅州': '广东', '汕头': '广东', '深圳': '广东', '珠海': '广东', '佛山': '广东', '肇庆': '广东', '湛江': '广东', '江门': '广东', '河源': '广东', '清远': '广东', '云浮': '广东', '潮州': '广东', '东莞': '广东', '中山': '广东', '阳江': '广东', '揭阳': '广东', '茂名': '广东', '汕尾': '广东', '东沙群岛': '广东', '昆明': '云南', '曲靖': '云南', '保山': '云南', '玉溪': '云南', '普洱': '云南', '昭通': '云南', '临沧': '云南', '丽江': '云南', '西双版纳傣族自治州': '云南', '文山壮族苗族自治州': '云南', '红河哈尼族彝族自治州': '云南', '德宏傣族景颇族自治州': '云南', '怒江傈僳族自治州': '云南', '迪庆藏族自治州': '云南', '大理白族自治州': '云南', '楚雄彝族自治州': '云南', '南宁': '广西', '崇左': '广西', '柳州': '广西', '来宾': '广西', '桂林': '广西', '梧州': '广西', '贺州': '广西', '贵港': '广西', '玉林': '广西', '百色': '广西', '钦州': '广西', '河池': '广西', '北海': '广西', '防城港': '广西', '海口': '海南', '三亚': '海南', '三沙': '海南', '儋州': '海南', '五指山': '海南', '琼海': '海南', '文昌': '海南', '万宁': '海南', '东方': '海南', '定安': '海南', '屯昌': '海南', '澄迈': '海南', '临高': '海南', '白沙黎族自治县': '海南', '昌江黎族自治县': '海南', '乐东黎族自治县': '海南', '陵水黎族自治县': '海南', '保亭黎族苗族自治县': '海南', '琼中黎族苗族自治县': '海南', '香港': '香港', '澳门': '澳门', '台湾': '台湾'}\"]},\"41\":{\"h\":\"📌完整代码\",\"t\":[\"from DrissionPage import SessionPage, ChromiumPage import re import csv import pandas as pd def getUnit(text): x = 1 if('时' in text): x = 8*30 elif ('周' in text): x = 4 elif ('日' in text) or ('天' in text): x = 30 if('万' in text) or ('w' in text) or ('W' in text): return 10000 * x if('千' in text) or ('k' in text) or ('K' in text): return 1000 * x return 1 * x def getSalary(salary): parts = str(salary).split('-') if len(parts) ==2: part1, part2 = parts number1 = re.match(r\\\"(\\\\d+(\\\\.\\\\d+)?)\\\", part1) number2 = re.match(r\\\"(\\\\d+(\\\\.\\\\d+)?)\\\", part2) number1 = number1.group(1) number2 = number2.group(1) text1 = part1[len(number1):] text2 = part2[len(number2):] p1 = getUnit(text1) p2 = getUnit(text2) if not text1 : p1 = p2 return [int(float(number1) * p1), int(float(number2) * p2)] else: return False def getProvince(province): for pro in ['内蒙古自治区', '新疆维吾尔自治区', '西藏自治区', '广西壮族自治区', '宁夏回族自治区', '香港特别行政区', '澳门特别行政区', '北京市','天津市', '重庆市', '上海市']: if province in pro: return pro return province + '省' city_dict = {'北京': '北京', '上海': '上海', '天津': '天津', '重庆': '重庆', '哈尔滨': '黑龙江', '齐齐哈尔': '黑龙江', '牡丹江': '黑龙江', '佳木斯': '黑龙江', '绥化': '黑龙江', '黑河': '黑龙江', '伊春': '黑龙江', '大庆': '黑龙江', '七台河': '黑龙江', '鸡西': '黑龙江', '鹤岗': '黑龙江', '双鸭山': '黑龙江', '大兴安岭地区': '黑龙江', '长春': '吉林', '吉林': '吉林', '四平': '吉林', '通化': '吉林', '白城': '吉林', '辽源': '吉林', '松原': '吉林', '白山': '吉林', '延边朝鲜族自治州': '吉林', '沈阳': '辽宁', '大连': '辽宁', '鞍山': '辽宁', '抚顺': '辽宁', '本溪': '辽宁', '丹东': '辽宁', '锦州': '辽宁', '营口': '辽宁', '阜新': '辽宁', '辽阳': '辽宁', '铁岭': '辽宁', '朝阳': '辽宁', '盘锦': '辽宁', '葫芦岛': '辽宁', '呼和浩特': '内蒙古', '包头': '内蒙古', '乌海': '内蒙古', '通辽': '内蒙古', '赤峰': '内蒙古', '鄂尔多斯': '内蒙古', '呼伦贝尔': '内蒙古', '巴彦淖尔': '内蒙古', '乌兰察布': '内蒙古', '锡林郭勒盟': '内蒙古', '兴安盟': '内蒙古', '阿拉善盟': '内蒙古', '石家庄': '河北', '保定': '河北', '张家口': '河北', '承德': '河北', '唐山': '河北', '廊坊': '河北', '沧州': '河北', '衡水': '河北', '邢台': '河北', '邯郸': '河北', '秦皇岛': '河北', '太原': '山西', '大同': '山西', '阳泉': '山西', '晋中': '山西', '长治': '山西', '晋城': '山西', '临汾': '山西', '运城': '山西', '朔州': '山西', '忻州': '山西', '吕梁': '山西', '西安': '陕西', '咸阳': '陕西', '延安': '陕西', '榆林': '陕西', '渭南': '陕西', '商洛': '陕西', '安康': '陕西', '汉中': '陕西', '宝鸡': '陕西', '铜川': '陕西', '济南': '山东', '青岛': '山东', '淄博': '山东', '德州': '山东', '烟台': '山东', '潍坊': '山东', '济宁': '山东', '泰安': '山东', '临沂': '山东', '菏泽': '山东', '滨州': '山东', '东营': '山东', '威海': '山东', '枣庄': '山东', '日照': '山东', '聊城': '山东', '乌鲁木齐': '新疆', '克拉玛依': '新疆', '昌吉回族自治州': '新疆', '巴音郭楞蒙古自治州': '新疆', '博尔塔拉蒙古自治州': '新疆', '伊犁哈萨克自治州': '新疆', '吐鲁番': '新疆', '哈密': '新疆', '阿克苏地区': '新疆', '克孜勒苏柯尔克孜自治州': '新疆', '喀什地区': '新疆', '和田地区': '新疆', '塔城地区': '新疆', '阿勒泰地区': '新疆', '石河子': '新疆', '阿拉尔': '新疆', '图木舒克': '新疆', '五家渠': '新疆', '铁门关': '新疆', '北屯市': '新疆', '可克达拉市': '新疆', '昆玉市': '新疆', '双河市': '新疆', '新星市': '新疆', '胡杨河市': '新疆', '白杨市': '新疆', '拉萨': '西藏', '日喀则': '西藏', '昌都': '西藏', '林芝': '西藏', '山南': '西藏', '那曲': '西藏', '阿里地区': '西藏', '西宁': '青海', '海东': '青海', '海北藏族自治州': '青海', '黄南藏族自治州': '青海', '海南藏族自治州': '青海', '果洛藏族自治州': '青海', '玉树藏族自治州': '青海', '海西蒙古族藏族自治州': '青海', '兰州': '甘肃', '定西': '甘肃', '平凉': '甘肃', '庆阳': '甘肃', '武威': '甘肃', '金昌': '甘肃', '张掖': '甘肃', '酒泉': '甘肃', '天水': '甘肃', '白银': '甘肃', '陇南': '甘肃', '嘉峪关': '甘肃', '临夏回族自治州': '甘肃', '甘南藏族自治州': '甘肃', '银川': '宁夏', '石嘴山': '宁夏', '吴忠': '宁夏', '固原': '宁夏', '中卫': '宁夏', '郑州': '河南', '安阳': '河南', '新乡': '河南', '许昌': '河南', '平顶山': '河南', '信阳': '河南', '南阳': '河南', '开封': '河南', '洛阳': '河南', '商丘': '河南', '焦作': '河南', '鹤壁': '河南', '濮阳': '河南', '周口': '河南', '漯河': '河南', '驻马店': '河南', '三门峡': '河南', '济源': '河南', '南京': '江苏', '无锡': '江苏', '镇江': '江苏', '苏州': '江苏', '南通': '江苏', '扬州': '江苏', '盐城': '江苏', '徐州': '江苏', '淮安': '江苏', '连云港': '江苏', '常州': '江苏', '泰州': '江苏', '宿迁': '江苏', '武汉': '湖北', '襄阳': '湖北', '鄂州': '湖北', '孝感': '湖北', '黄冈': '湖北', '黄石': '湖北', '咸宁': '湖北', '荆州': '湖北', '宜昌': '湖北', '十堰': '湖北', '随州': '湖北', '荆门': '湖北', '恩施土家族苗族自治州': '湖北', '仙桃': '湖北', '潜江': '湖北', '天门': '湖北', '神农架': '湖北', '杭州': '浙江', '湖州': '浙江', '嘉兴': '浙江', '宁波': '浙江', '绍兴': '浙江', '台州': '浙江', '温州': '浙江', '丽水': '浙江', '金华': '浙江', '衢州': '浙江', '舟山': '浙江', '合肥': '安徽', '蚌埠': '安徽', '芜湖': '安徽', '淮南': '安徽', '马鞍山': '安徽', '安庆': '安徽', '宿州': '安徽', '阜阳': '安徽', '亳州': '安徽', '滁州': '安徽', '淮北': '安徽', '铜陵': '安徽', '宣城': '安徽', '六安': '安徽', '池州': '安徽', '黄山': '安徽', '福州': '福建', '厦门': '福建', '宁德': '福建', '莆田': '福建', '泉州': '福建', '漳州': '福建', '龙岩': '福建', '三明': '福建', '南平': '福建', '南昌': '江西', '九江': '江西', '上饶': '江西', '抚州': '江西', '宜春': '江西', '吉安': '江西', '赣州': '江西', '景德镇': '江西', '萍乡': '江西', '新余': '江西', '鹰潭': '江西', '长沙': '湖南', '湘潭': '湖南', '株洲': '湖南', '衡阳': '湖南', '郴州': '湖南', '常德': '湖南', '益阳': '湖南', '娄底': '湖南', '邵阳': '湖南', '岳阳': '湖南', '张家界': '湖南', '怀化': '湖南', '永州': '湖南', '湘西土家族苗族自治州': '湖南', '贵阳': '贵州', '遵义': '贵州', '安顺': '贵州', '铜仁': '贵州', '毕节': '贵州', '六盘水': '贵州', '黔东南苗族侗族自治州': '贵州', '黔南布依族苗族自治州': '贵州', '黔西南布依族苗族自治州': '贵州', '成都': '四川', '攀枝花': '四川', '自贡': '四川', '绵阳': '四川', '南充': '四川', '达州': '四川', '遂宁': '四川', '广安': '四川', '巴中': '四川', '泸州': '四川', '宜宾': '四川', '内江': '四川', '资阳': '四川', '乐山': '四川', '眉山': '四川', '雅安': '四川', '德阳': '四川', '广元': '四川', '阿坝藏族羌族自治州': '四川', '凉山彝族自治州': '四川', '甘孜藏族自治州': '四川', '广州': '广东', '韶关': '广东', '惠州': '广东', '梅州': '广东', '汕头': '广东', '深圳': '广东', '珠海': '广东', '佛山': '广东', '肇庆': '广东', '湛江': '广东', '江门': '广东', '河源': '广东', '清远': '广东', '云浮': '广东', '潮州': '广东', '东莞': '广东', '中山': '广东', '阳江': '广东', '揭阳': '广东', '茂名': '广东', '汕尾': '广东', '东沙群岛': '广东', '昆明': '云南', '曲靖': '云南', '保山': '云南', '玉溪': '云南', '普洱': '云南', '昭通': '云南', '临沧': '云南', '丽江': '云南', '西双版纳傣族自治州': '云南', '文山壮族苗族自治州': '云南', '红河哈尼族彝族自治州': '云南', '德宏傣族景颇族自治州': '云南', '怒江傈僳族自治州': '云南', '迪庆藏族自治州': '云南', '大理白族自治州': '云南', '楚雄彝族自治州': '云南', '南宁': '广西', '崇左': '广西', '柳州': '广西', '来宾': '广西', '桂林': '广西', '梧州': '广西', '贺州': '广西', '贵港': '广西', '玉林': '广西', '百色': '广西', '钦州': '广西', '河池': '广西', '北海': '广西', '防城港': '广西', '海口': '海南', '三亚': '海南', '三沙': '海南', '儋州': '海南', '五指山': '海南', '琼海': '海南', '文昌': '海南', '万宁': '海南', '东方': '海南', '定安': '海南', '屯昌': '海南', '澄迈': '海南', '临高': '海南', '白沙黎族自治县': '海南', '昌江黎族自治县': '海南', '乐东黎族自治县': '海南', '陵水黎族自治县': '海南', '保亭黎族苗族自治县': '海南', '琼中黎族苗族自治县': '海南', '香港': '香港', '澳门': '澳门', '台湾': '台湾'} output_file = f'data.csv' f = open(output_file, mode='w', encoding='utf-8', newline='') csv_writer = csv.DictWriter(f, fieldnames=['keyword', 'name', 'averSalary', 'number']) csv_writer.writeheader() keywords = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] for keyword in keywords: safe_keyword = keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') file = f'{safe_keyword}.csv' df = pd.read_csv(file) city_info = {} for index, row in df.iterrows(): salary = getSalary(row['薪资']) if salary == False: # print(row) continue if row['城市'] in city_dict: city = city_dict[row['城市']] else: # print(row) continue if (city in city_info): city_info[city]['minSalary'] += salary[0] city_info[city]['maxSalary'] += salary[1] city_info[city]['number'] += 1 else: info = { 'minSalary': salary[0], 'maxSalary': salary[1], 'number': 1, 'city': city, } city_info[city] = info aversal=0 number=0 for city in city_info: aversal += int((city_info[city]['minSalary']+city_info[city]['maxSalary'])/(2*city_info[city]['number'])) number += 1 data = { 'keyword': keyword, 'name': getProvince(city), 'averSalary': int((city_info[city]['minSalary']+city_info[city]['maxSalary'])/(2*city_info[city]['number'])), 'number': city_info[city]['number'], } csv_writer.writerow(data) #计算工作的平均工资（后面制作表格需要） print(int(aversal/number),end=', ')\",\"生成的数据如下\",\"12373, 10794, 9616, 15584, 11876, 11348, 14679, 12854, 14158, 15898, 10988, 12989, 15096, 10200, 17128, 18482, 8751\",\"处理完成后的数据如下\"]},\"42\":{\"c\":[\"Python\",\"pandas\",\"re\",\"csv\"]},\"43\":{\"h\":\"数据采集\",\"t\":[\"本教程将指导你如何爬取 招聘网站 中的求职信息 。\"]},\"44\":{\"h\":\"1. Boss直聘\"},\"45\":{\"h\":\"✅️URL获取\",\"t\":[\"打开官网Boss直聘\",\"我们随便搜索一个求职信息如 python\",\"网址中 可以发现有两个参数 qurey=python 和city=100010000\",\"我们再搜索一个求职信息如 java\",\"发现参数qurey=java和city=100010000\",\"通过对比两个网址 qurey代表求职信息即我们搜索框中输入的内容 city可以知道是职业的地区参数， 100010000对应的是全国参数\",\"现在的问题就是每个城市对应的参数是什么\",\"返回到主页，按F12打开开发者工具，选择网络一栏\",\"刷新一下网页（若网络一栏无文件，则需要刷新网页），搜索框中搜索city\",\"找到city.json（就是城市的参数文件）\",\"访问网址 !! city.json !!\",\"每个城市对应的参数都在该网址\"]},\"46\":{\"h\":\"✅️招聘信息获取\",\"t\":[\"刚刚我们获取完url的两个参数信息\",\"以qurey=python city=100010000 举例 所以对应的url = https://www.zhipin.com/web/geek/job?query=python&city=100010000\",\"我们访问网址，打开开发者工具，选择网络一栏\",\"选择 标头 一栏 ，找到请求标头的:path一栏 复制search/joblist.json 后面编写代码需要\",\"以上，我们就完成了编写代码的准备环节\"]},\"47\":{\"h\":\"✅️代码编写\",\"t\":[\"用到的包DrissionPage\",\"使用文档\"]},\"48\":{\"h\":\"📌️URL获取模块\",\"t\":[\" def _get_city_code(self): \\\"\\\"\\\"获取城市编码\\\"\\\"\\\" #生成页面对象 page = SessionPage() #访问在线网页 page.get('https://www.zhipin.com/wapi/zpCommon/data/city.json')#刚刚获取到的city.json网址 json_data = page.json['zpData']['cityList'] for dit in json_data: for city_json in dit['subLevelModelList']: if city_json['name'] == self.city: return str(city_json['code']) return '100010000' # 默认值为全国 def _get_url(self): \\\"\\\"\\\"根据关键词和城市编码生成正确的URL\\\"\\\"\\\" #正则表达式进行替换 self.url = re.sub(r'(?<=query=)[^&]+', self.keyword, self.url) self.url = re.sub(r'(?<=city=)[^&]+', self._get_city_code(), self.url) print(self.url) return self.url\",\"提示\",\"page.json返回的是一个字典类型\",\"'zpData'访问的是\",\"'cityList'访问的是\",\"这里的dit['subLevelModelList']代表\"]},\"49\":{\"h\":\"📌数据抓取\",\"t\":[\"def run(self): \\\"\\\"\\\"爬取数据并写入CSV\\\"\\\"\\\" page = None try: #ChromiumPage区别于SessionPage，它是一个可交互性的网页 page = ChromiumPage() page.listen.start('search/joblist.json')#此处是我们要在网络中获取的数据文件 page.get(self._get_url()) for page_num in range(1000): # 翻页处理 page.scroll.to_bottom() # 滚动到页面底部，加载新内容 response = page.listen.wait() # 等待监听到的请求响应 json_data = response.response.body jobList = json_data['zpData']['jobList'] for job in jobList: data = { '职位': job['jobName'], '城市': job['cityName'], '公司': job['brandName'], '薪资': job['salaryDesc'], '经验': job['jobExperience'], '学历': job['jobDegree'], '领域': job['brandIndustry'], '技能': ', '.join(job['skills']), '福利': ', '.join(job['welfareList']), } self.csv_writer.writerow(data) # 翻页操作 next_page_btn = page.ele('css:.options-pages a:last-of-type') if 'disable' in next_page_btn.attr('class'): break else: next_page_btn.click() # 点击下一页按钮 except Exception as e: print(f\\\"发生错误: {e}\\\") finally: if page: page.quit() # 关闭浏览器实例\",\"提示\",\"关于翻页操作的参数\",\"可以看到下一页的按钮标签名称为 ui-icon-arrow-right\",\"但是同上操作在最后一页下一页的按钮为 disabled\",\"为此做一个区分，下一页的标签在 class = \\\"options-pages\\\" 的最后一个，所以我们使用'css:.options-pages a:last-of-type'来获取最后一个元素，来判断是否进行下一页\"]},\"50\":{\"h\":\"✅️源代码如下\",\"t\":[\"from DrissionPage import SessionPage, ChromiumPage import re import csv class Boss(object): def __init__(self, keyword, city): self.keyword = keyword self.city = city self.url = 'https://www.zhipin.com/web/geek/job?query=python&city=101200100' # 替换掉文件名中的非法字符 safe_keyword = self.keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') safe_city = self.city.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') # 生成文件名 file_name = f'Boss直聘_关键词_{safe_keyword}_城市_{safe_city}.csv' try: self.f = open(file_name, mode='w', encoding='utf-8', newline='') self.csv_writer = csv.DictWriter(self.f, fieldnames=[ '职位', '城市', '公司', '薪资', '经验', '学历', '领域', '技能', '福利', ]) self.csv_writer.writeheader() except Exception as e: print(f\\\"打开文件时发生错误: {e}\\\") self.f = None # 确保如果文件打开失败，self.f 不会被引用 def __del__(self): \\\"\\\"\\\"确保在对象销毁时关闭CSV文件\\\"\\\"\\\" if hasattr(self, 'f') and self.f: # 检查是否存在 f 属性 self.f.close() def _get_city_code(self): \\\"\\\"\\\"获取城市编码\\\"\\\"\\\" page = SessionPage() page.get('https://www.zhipin.com/wapi/zpCommon/data/city.json') json_data = page.json['zpData']['cityList'] for dit in json_data: for city_json in dit['subLevelModelList']: if city_json['name'] == self.city: return str(city_json['code']) return '100010000' # 默认值为全国 def _get_url(self): \\\"\\\"\\\"根据关键词和城市编码生成正确的URL\\\"\\\"\\\" self.url = re.sub(r'(?<=query=)[^&]+', self.keyword, self.url) self.url = re.sub(r'(?<=city=)[^&]+', self._get_city_code(), self.url) print(self.url) return self.url def run(self): \\\"\\\"\\\"爬取数据并写入CSV\\\"\\\"\\\" page = None try: page = ChromiumPage() page.listen.start('search/joblist.json') page.get(self._get_url()) for page_num in range(1000): # 翻页处理 page.scroll.to_bottom() # 滚动到页面底部，加载新内容 response = page.listen.wait() # 等待监听到的请求响应 json_data = response.response.body jobList = json_data['zpData']['jobList'] for job in jobList: data = { '职位': job['jobName'], '城市': job['cityName'], '公司': job['brandName'], '薪资': job['salaryDesc'], '经验': job['jobExperience'], '学历': job['jobDegree'], '领域': job['brandIndustry'], '技能': ', '.join(job['skills']), '福利': ', '.join(job['welfareList']), } self.csv_writer.writerow(data) # 翻页操作 next_page_btn = page.ele('css:.options-pages a:last-of-type') if 'disable' in next_page_btn.attr('class'): break else: next_page_btn.click() # 点击下一页按钮 except Exception as e: print(f\\\"发生错误: {e}\\\") finally: if page: page.quit() # 关闭浏览器实例 if __name__ == '__main__': city = input('请输入城市名：') keyword = input('请输入搜索关键词：') # 确保用户输入不为空 if keyword: boss_spider = Boss(keyword=keyword, city=city) boss_spider.run() else: print(\\\"关键词和城市名不能为空！\\\")\"]},\"51\":{\"h\":\"2. 智联招聘\"},\"52\":{\"h\":\"✅️URL获取\",\"t\":[\"打开官网智联招聘\",\"同理\",\"基础URL https://www.zhaopin.com/sou/?jl=489&kw=python&p=2\",\"参数有3个，jl=城市，kw=招聘岗位，p=页面\",\"城市参数网址\",\"每个城市对应的参数都在该网址\"]},\"53\":{\"h\":\"✅️招聘信息获取\",\"t\":[\"有别于Boss直聘\",\"你在搜索公司名称时，发现找不到对应的json文件\",\"但我们翻到第二页的时候\",\"对应的文件找到了\",\"获取到:path: search/positions\"]},\"54\":{\"h\":\"✅️代码编写\",\"t\":[\"用到的包DrissionPage\",\"使用文档\"]},\"55\":{\"h\":\"📌URL获取模块\",\"t\":[\" def _get_city_code(self): \\\"\\\"\\\"获取城市编码\\\"\\\"\\\" page = SessionPage() page.get('https://fe-api.zhaopin.com/c/i/search/base/data') json_data = page.json['data']['allCity'] for dit in json_data: if dit['name'] == self.city: return str(dit['code']) for city_json in dit['sublist']: if city_json['name'] == self.city: return str(city_json['code']) return '489' # 默认值为全国 def _get_url(self): \\\"\\\"\\\"根据关键词和城市编码生成正确的URL\\\"\\\"\\\" self.url = re.sub(r'(?<=jl=)[^&]+', self._get_city_code(), self.url) self.url = re.sub(r'(?<=kw=)[^&]+', self.keyword, self.url) print(self.url) return self.url\"]},\"56\":{\"h\":\"📌数据抓取\",\"t\":[\" def run(self): \\\"\\\"\\\"爬取数据并写入CSV\\\"\\\"\\\" page = None try: page = ChromiumPage() page.listen.start('/search/positions') page.get(self._get_url()) page.scroll.to_bottom() # 滚动到页面底部，加载新内容 page.ele('css:.soupager__btn').click() for page_num in range(1000): # 翻页处理 page.scroll.to_bottom() # 滚动到页面底部，加载新内容 response = page.listen.wait() # 等待监听到的请求响应 json_data = response.response.body jobList = json_data['data']['list'] for job in jobList: data = { '职位': job['name'], '城市': job['workCity'], '公司': job['companyName'], '薪资': job['salary60'], '经验': job['workingExp'], '学历': job['education'], '领域': job['industryName'], '技能': ', '.join(skill['name'] for skill in job['jobSkillTags']), '福利': ', '.join(job['jobKnowledgeWelfareFeatures']), } self.csv_writer.writerow(data) # 翻页操作 next_page_btn = page.ele('css:.soupager a:last-of-type') if 'soupager__btn--disable' in next_page_btn.attr('class'): break else: next_page_btn.click() # 点击下一页按钮 except Exception as e: print(f\\\"发生错误: {e}\\\") finally: if page: page.quit() # 关闭浏览器实例\",\"提示\",\"关于翻页操作的参数\",\"可以看到上一页和下一页的按钮标签名称都为 btn soupager__btn\",\"为此做一个区分，下一页的标签在 class = \\\"soupager\\\" 的最后一个，所以我们使用'css:.soupager a:last-of-type'来获取最后一个元素，来判断是否进行下一页\",\"最后一页的下一页的标签为 'soupager__btn--disable'\"]},\"57\":{\"h\":\"✅️源代码如下\",\"t\":[\"import time from DrissionPage import SessionPage, ChromiumPage import re import csv class Zhilian(object): def __init__(self, keyword, city): self.keyword = keyword self.city = city self.url = 'https://www.zhaopin.com/sou/?jl=489&kw=python&p=2' # 替换掉文件名中的非法字符 safe_keyword = self.keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') safe_city = self.city.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') # 生成文件名 file_name = f'智联招聘_关键词_{safe_keyword}_城市_{safe_city}.csv' try: self.f = open(file_name, mode='w', encoding='utf-8', newline='') self.csv_writer = csv.DictWriter(self.f, fieldnames=[ '职位', '城市', '公司', '薪资', '经验', '学历', '领域', '技能', '福利', ]) self.csv_writer.writeheader() except Exception as e: print(f\\\"打开文件时发生错误: {e}\\\") self.f = None # 确保如果文件打开失败，self.f 不会被引用 def __del__(self): \\\"\\\"\\\"确保在对象销毁时关闭CSV文件\\\"\\\"\\\" if hasattr(self, 'f') and self.f: # 检查是否存在 f 属性 self.f.close() def _get_city_code(self): \\\"\\\"\\\"获取城市编码\\\"\\\"\\\" page = SessionPage() page.get('https://fe-api.zhaopin.com/c/i/search/base/data') json_data = page.json['data']['allCity'] for dit in json_data: if dit['name'] == self.city: return str(dit['code']) for city_json in dit['sublist']: if city_json['name'] == self.city: return str(city_json['code']) return '489' # 默认值为全国 def _get_url(self): \\\"\\\"\\\"根据关键词和城市编码生成正确的URL\\\"\\\"\\\" self.url = re.sub(r'(?<=jl=)[^&]+', self._get_city_code(), self.url) self.url = re.sub(r'(?<=kw=)[^&]+', self.keyword, self.url) print(self.url) return self.url def run(self): \\\"\\\"\\\"爬取数据并写入CSV\\\"\\\"\\\" page = None try: page = ChromiumPage() page.listen.start('/search/positions') page.get(self._get_url()) time.sleep(2) page.scroll.to_bottom() # 滚动到页面底部，加载新内容 page.ele('css:.soupager__btn').click() for page_num in range(1000): # 翻页处理 page.scroll.to_bottom() # 滚动到页面底部，加载新内容 response = page.listen.wait() # 等待监听到的请求响应 json_data = response.response.body jobList = json_data['data']['list'] for job in jobList: data = { '职位': job['name'], '城市': job['workCity'], '公司': job['companyName'], '薪资': job['salary60'], '经验': job['workingExp'], '学历': job['education'], '领域': job['industryName'], '技能': ', '.join(skill['name'] for skill in job['jobSkillTags']), '福利': ', '.join(job['jobKnowledgeWelfareFeatures']), } self.csv_writer.writerow(data) # 翻页操作 next_page_btn = page.ele('css:.soupager a:last-of-type') if 'soupager__btn--disable' in next_page_btn.attr('class'): break else: next_page_btn.click() # 点击下一页按钮 except Exception as e: print(f\\\"发生错误: {e}\\\") finally: if page: page.quit() # 关闭浏览器实例 if __name__ == '__main__': city = input('请输入城市名：') keyword = input('请输入搜索关键词：') # 确保用户输入不为空 if keyword: Zhilian_spider = Zhilian(keyword=keyword, city=city) Zhilian_spider.run() else: print(\\\"关键词和城市名不能为空！\\\")\"]},\"58\":{\"h\":\"3. 前程无忧\",\"t\":[\"打开官网前程无忧\",\"前情提要\",\"由于该网站招聘信息 技能要求和福利 等信息在一块，后期数据处理很麻烦，故在这里只教程如何爬取内容\"]},\"59\":{\"h\":\"✅️URL获取\",\"t\":[\"https://we.51job.com/pc/search?jobArea=020000&keyword=java&searchType=2&keywordType=\",\"四个参数\",\"jobArea 城市参数 keyword 职业关键字 searchType 1 搜公司 2 搜全文 keywordType 作用不大\",\"城市参数 https://js.51jobcdn.com/in/js/2023/dd/dd_city.json\",\"监听参数 job/search-pc\",\"但是\",\"例子\",\"需要手动验证\",\"所以该网站不能像前面俩一样爬取（大家可以尝试编写代码，突破验证）\",\"通过直接爬取网页元素（该方法相较于前面，比较麻烦）\"]},\"60\":{\"h\":\"✅️简单demo编写\",\"t\":[\"根据页面元素可以得到，页面中一个工作的信息包含在 class=joblist_item中 所以我们可以通过ChromiumPage()对象的eles方法获取页面中所有joblist_item\",\"公司信息如图所示\",\"公司标签如图所示\",\"import json from pprint import pprint from DrissionPage import SessionPage, ChromiumPage page = ChromiumPage() page.get('https://we.51job.com/pc/search?jobArea=020000&keyword=java&searchType=2&keywordType=') # 获取所有职位信息所在的div标签 divs = page.eles('css:.joblist-item') for div in divs: # 提取具体的数据内容 info = div.ele('css:.joblist-item-job').attr('sensorsdata') # 把json字符串转为json字典数据 json_data = json.loads(info) # 公司姓名 c_name = div.ele('css:.cname').attr('title') # 公司领域 dc = div.ele('css:.dc').text # 提取标签 tags = ','.join([i.text for i in div.eles('css:.tag')]) # 提取相关数据内容，保存在字典内 dit = { '职位': json_data['jobTitle'], '薪资': json_data['jobSalary'], '城市': json_data['jobArea'], '经验': json_data['jobYear'], '学历': json_data['jobDegree'], '公司': c_name, '领域': dc, '标签': tags, } print(dit)\",\"以上就是 前程无忧 网站信息爬取过程\"]},\"61\":{\"c\":[\"Python\",\"DrissionPage\"]},\"62\":{\"c\":[\"Boss 直聘\",\"智联招聘\",\"前程无忧\"]},\"63\":{\"h\":\"数据可视化\",\"t\":[\"本教程将指导你如何制作可视化图表 。\",\"前言\",\"需要用到的库有 jupyter notebook 、pyecharts\",\"安装jupyter notebook\",\"pip install jupyter notebook\",\"运行jupyter notebook\",\"jupyter notebook\",\"pip install pyecharts\",\"官方文档可参考pyecharts\",\"以及一些表格的例子pyecharts-gallery\"]},\"64\":{\"h\":\"1. 全国招聘工作工资分布可视化表.html\"},\"65\":{\"h\":\"📌数据获取\",\"t\":[\"# 之前数据清洗过之后的文件 file = f'data.csv' df = pd.read_csv(file) data = [] work = {} for index, row in df.iterrows(): keyword = row['keyword'] province = row['name'] averSalary = row['averSalary'] number = row['number'] if keyword not in work: work[keyword] = {'work': keyword, 'data': []} work[keyword]['data'].append({ 'province': province, 'value': [averSalary, number, province] }) data = list(work.values()) work_list = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] # 数据清洗中得出的平均工资 total_num = [12373, 10794, 9616, 15584, 11876, 11348, 14679, 12854, 14158, 15898, 10988, 12989, 15096, 10200, 17128, 18482, 8751] maxNum = 60000 # 定义的最大值 minNum = 5000 # 定义的最小值\",\"生成的 data 如下\"]},\"66\":{\"h\":\"📌map_chart（地图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"map_data = [ [[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work ][0] min_data, max_data = (minNum, maxNum) map_chart = ( Map() .add( series_name=\\\"\\\", data_pair=[[x[0], x[1][0]] for x in map_data], # 传入的为二维列表，对应的为省份名称和对应职位的工资 （相当于横纵坐标） zoom=1, # 地图的缩放比 center=[130, 25], is_map_symbol_show=False, tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), # 设置鼠标放置旁边时，显示具体数据 ) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"全国各省份平均工资 数据来源：boss直聘，智联招聘\\\", # 标题 subtitle=\\\"\\\", pos_left=\\\"center\\\", pos_top=\\\"top\\\", title_textstyle_opts=opts.TextStyleOpts( font_size=25 ), ), tooltip_opts=opts.TooltipOpts( is_show=True, formatter=JsCode( \\\"\\\"\\\"function(params) { if ('value' in params.data) { return params.data.value[2] + ': ' + params.data.value[0]; } }\\\"\\\"\\\" ), ), # 设置热力图 visualmap_opts=opts.VisualMapOpts( is_calculable=True, dimension=0, pos_left=\\\"30\\\", pos_top=\\\"top\\\", range_text=[\\\"High\\\", \\\"Low\\\"], range_color=[\\\"lightskyblue\\\", \\\"yellow\\\", \\\"orangered\\\"],# 定义热力图中的颜色 textstyle_opts=opts.TextStyleOpts(color=\\\"#ddd\\\"), min_=min_data, max_=max_data, # 定义热力图的最大值和最小值 ), ) )\"]},\"67\":{\"h\":\"📌line_chart（折线图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" line_chart = ( Line() .add_xaxis(work_list) # 横坐标 .add_yaxis( '', total_num, # 纵坐标 markpoint_opts=opts.MarkPointOpts(data=[opts.MarkPointItem(type_=\\\"max\\\")]), # 展示所有数据中最大的一项 tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{c}\\\"), # 设置鼠标放置旁边时，显示具体数据 ) .set_series_opts(label_opts=opts.LabelOpts(is_show=False)) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"全国岗位平均工资（单位：元）\\\", pos_left=\\\"72%\\\", pos_top=\\\"5%\\\" #标题 ) ) )\"]},\"68\":{\"h\":\"📌bar_chart（柱状图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" bar_x_data = [x[0] for x in map_data] # 横坐标 bar_y_data = [{\\\"work\\\": x[0], \\\"value\\\": x[1][0]} for x in map_data] #纵坐标 bar = ( Bar() .add_xaxis(xaxis_data=bar_x_data) .add_yaxis( series_name=\\\"\\\", y_axis=bar_y_data, label_opts=opts.LabelOpts( is_show=True, position=\\\"right\\\", formatter=\\\"{b} : {c}\\\" # 将具体数据固定在表格的右边 ), ) .reversal_axis() .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"各省份平均工资（单位：元/月）\\\", pos_left=\\\"0%\\\", pos_top=\\\"45%\\\" # 标题 ), xaxis_opts=opts.AxisOpts( max_=60000, axislabel_opts=opts.LabelOpts(is_show=False) ), yaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(is_show=False)), tooltip_opts=opts.TooltipOpts(is_show=False), ) )\"]},\"69\":{\"h\":\"📌grid_chart（并行多图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" grid_chart = ( Grid() .add( bar, grid_opts=opts.GridOpts( pos_left=\\\"10\\\", pos_right=\\\"45%\\\", pos_top=\\\"50%\\\", pos_bottom=\\\"5\\\" # 控制表格位置 ), ) .add( line_chart, grid_opts=opts.GridOpts( pos_left=\\\"58%\\\", pos_right=\\\"65\\\", pos_top=\\\"10%\\\", pos_bottom=\\\"50%\\\" # 控制表格位置 ), ) .add(map_chart, grid_opts=opts.GridOpts()) )\"]},\"70\":{\"h\":\"📌timeline （时间线）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" timeline = Timeline( init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.DARK) ) for y in work_list: # 按照职业将对应图表添加到时间线上 g = get_work_chart(work=y) timeline.add(g, time_point=str(y)) timeline.add_schema( orient=\\\"vertical\\\", # 纵向排列 is_auto_play=True, # 自动播放 is_inverse=True, # 反向播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） pos_right=\\\"5\\\", # 右边距设置为 5 pos_top=\\\"20\\\", # 上边距设置为 20 pos_bottom=\\\"20\\\", # 下边距设置为 20 width=\\\"60\\\", # 时间轴的宽度 label_opts=opts.LabelOpts(is_show=True, color=\\\"#fff\\\", position=\\\"left\\\"), # 文本位置设置为右侧 ) timeline.render(\\\"全国招聘工作工资分布可视化表.html\\\")\"]},\"71\":{\"h\":\"📌完整代码\",\"t\":[\"from pprint import pprint import pyecharts.options as opts from pyecharts.globals import ThemeType from pyecharts.commons.utils import JsCode from pyecharts.charts import Timeline, Grid, Bar, Map, Pie, Line import pandas as pd file = f'data.csv' df = pd.read_csv(file) data = [] work = {} for index, row in df.iterrows(): keyword = row['keyword'] province = row['name'] averSalary = row['averSalary'] number = row['number'] if keyword not in work: work[keyword] = {'work': keyword, 'data': []} work[keyword]['data'].append({ 'province': province, 'value': [averSalary, number, province] }) data = list(work.values()) work_list = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] total_num = [12373, 10794, 9616, 15584, 11876, 11348, 14679, 12854, 14158, 15898, 10988, 12989, 15096, 10200, 17128, 18482, 8751] maxNum = 60000 minNum = 5000 def get_work_chart(work: str): map_data = [ [[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work ][0] min_data, max_data = (minNum, maxNum) map_chart = ( Map() .add( series_name=\\\"\\\", data_pair=[[x[0], x[1][0]] for x in map_data], zoom=1, center=[130, 25], is_map_symbol_show=False, tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), ) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"全国各省份平均工资 数据来源：boss直聘，智联招聘\\\", subtitle=\\\"\\\", pos_left=\\\"center\\\", pos_top=\\\"top\\\", title_textstyle_opts=opts.TextStyleOpts( font_size=25 ), ), tooltip_opts=opts.TooltipOpts( is_show=True, formatter=JsCode( \\\"\\\"\\\"function(params) { if ('value' in params.data) { return params.data.value[2] + ': ' + params.data.value[0]; } }\\\"\\\"\\\" ), ), visualmap_opts=opts.VisualMapOpts( is_calculable=True, dimension=0, pos_left=\\\"30\\\", pos_top=\\\"top\\\", range_text=[\\\"High\\\", \\\"Low\\\"], range_color=[\\\"lightskyblue\\\", \\\"yellow\\\", \\\"orangered\\\"], textstyle_opts=opts.TextStyleOpts(color=\\\"#ddd\\\"), min_=min_data, max_=max_data, ), ) ) line_chart = ( Line() .add_xaxis(work_list) .add_yaxis( '', total_num, markpoint_opts=opts.MarkPointOpts(data=[opts.MarkPointItem(type_=\\\"max\\\")]), tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{c}\\\"), ) .set_series_opts(label_opts=opts.LabelOpts(is_show=False)) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"全国岗位平均工资（单位：元）\\\", pos_left=\\\"72%\\\", pos_top=\\\"5%\\\" ) ) ) bar_x_data = [x[0] for x in map_data] bar_y_data = [{\\\"work\\\": x[0], \\\"value\\\": x[1][0]} for x in map_data] bar = ( Bar() .add_xaxis(xaxis_data=bar_x_data) .add_yaxis( series_name=\\\"\\\", y_axis=bar_y_data, label_opts=opts.LabelOpts( is_show=True, position=\\\"right\\\", formatter=\\\"{b} : {c}\\\" ), ) .reversal_axis() .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"各省份平均工资（单位：元/月）\\\", pos_left=\\\"0%\\\", pos_top=\\\"45%\\\" ), xaxis_opts=opts.AxisOpts( max_=60000, axislabel_opts=opts.LabelOpts(is_show=False) ), yaxis_opts=opts.AxisOpts(axislabel_opts=opts.LabelOpts(is_show=False)), tooltip_opts=opts.TooltipOpts(is_show=False), ) ) grid_chart = ( Grid() .add( bar, grid_opts=opts.GridOpts( pos_left=\\\"10\\\", pos_right=\\\"45%\\\", pos_top=\\\"50%\\\", pos_bottom=\\\"5\\\" ), ) .add( line_chart, grid_opts=opts.GridOpts( pos_left=\\\"58%\\\", pos_right=\\\"65\\\", pos_top=\\\"10%\\\", pos_bottom=\\\"50%\\\" ), ) .add(map_chart, grid_opts=opts.GridOpts()) ) return grid_chart if __name__ == \\\"__main__\\\": timeline = Timeline( init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.DARK) ) for y in work_list: g = get_work_chart(work=y) timeline.add(g, time_point=str(y)) timeline.add_schema( orient=\\\"vertical\\\", # 纵向排列 is_auto_play=True, # 自动播放 is_inverse=True, # 反向播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） pos_right=\\\"5\\\", # 右边距设置为 5 pos_top=\\\"20\\\", # 上边距设置为 20 pos_bottom=\\\"20\\\", # 下边距设置为 20 width=\\\"60\\\", # 时间轴的宽度 label_opts=opts.LabelOpts(is_show=True, color=\\\"#fff\\\", position=\\\"left\\\"), # 文本位置设置为右侧 ) timeline.render(\\\"全国招聘工作工资分布可视化表.html\\\")\"]},\"72\":{\"h\":\"📌成果展示\"},\"73\":{\"h\":\"2. 全国招聘工作数量可视化表.html\"},\"74\":{\"h\":\"📌数据获取\",\"t\":[\"获取数据与上图一样\"]},\"75\":{\"h\":\"📌map_chart（地图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"# 区别于上面 def get_map_chart(work:str): map_data = [[x[0], x[1][1]] for x in [[[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work][0]] #这边x[1][1]获取的是工作岗位的数量，其他参数与上面类似，这里就不过多赘述 map_chart = ( Map() .add( series_name=\\\"\\\", data_pair=map_data, center=[130, 25], is_map_symbol_show=False, tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), ) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"全国招聘数量分布 数据来源：boss直聘，智联招聘\\\", subtitle=\\\"\\\", pos_left=\\\"center\\\", pos_top=\\\"top\\\", title_textstyle_opts=opts.TextStyleOpts( font_size=25 ), ), visualmap_opts=opts.VisualMapOpts( is_calculable=True, dimension=0, pos_left=\\\"30\\\", pos_top=\\\"top\\\", range_text=[\\\"High\\\", \\\"Low\\\"], range_color=[\\\"lightskyblue\\\", \\\"yellow\\\", \\\"orangered\\\"], textstyle_opts=opts.TextStyleOpts(color=\\\"#ddd\\\"), min_=0, max_=400, ), ) ) return map_chart\"]},\"76\":{\"h\":\"📌pie_chart（饼图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"def get_pie_chart(work:str): pie_data = [[x[0], x[1][1]] for x in [[[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work][0]] # 获取的数据与地图一样 pie_chart = ( Pie() .add( series_name=\\\"\\\", data_pair=pie_data, radius=[\\\"15%\\\", \\\"35%\\\"], center=[\\\"80%\\\", \\\"82%\\\"], itemstyle_opts=opts.ItemStyleOpts( border_width=1, border_color=\\\"rgba(0,0,0,0.3)\\\" ), ) .set_global_opts( tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), # 设置鼠标放置旁边时，显示具体数据 legend_opts=opts.LegendOpts(is_show=False), ) ) return pie_chart\"]},\"77\":{\"h\":\"📌grid_chart（并行多图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"def get_grid_chart(work:str): grid_chart = ( Grid() .add(get_pie_chart(work), grid_opts=opts.GridOpts()) .add(get_map_chart(work), grid_opts=opts.GridOpts()) ) return grid_chart\"]},\"78\":{\"h\":\"📌timeline （时间线）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\" timeline = Timeline(init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.DARK)) for work in work_list: timeline.add(get_grid_chart(work), time_point=str(work)) timeline.add_schema( orient=\\\"vertical\\\", # 纵向排列 is_auto_play=True, # 自动播放 is_inverse=True, # 反向播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） pos_right=\\\"5\\\", # 右边距设置为 5 pos_top=\\\"20\\\", # 上边距设置为 20 pos_bottom=\\\"20\\\", # 下边距设置为 20 width=\\\"60\\\", # 时间轴的宽度 label_opts=opts.LabelOpts(is_show=True, color=\\\"#fff\\\", position=\\\"left\\\"), # 文本位置设置为右侧 ) timeline.render(\\\"全国招聘工作数量可视化表.html\\\")\"]},\"79\":{\"h\":\"📌完整代码\",\"t\":[\"from pprint import pprint import pyecharts.options as opts from pyecharts.globals import ThemeType from pyecharts.charts import Timeline, Grid, Bar, Map, Pie, Line, Page import pandas as pd file = f'data.csv' df = pd.read_csv(file) data =[] work = {} for index, row in df.iterrows(): keyword = row['keyword'] province = row['name'] averSalary = row['averSalary'] number = row['number'] if keyword not in work: work[keyword] = {'work': keyword, 'data': []} work[keyword]['data'].append({ 'province': province, 'value': [averSalary, number, province] }) data = list(work.values()) work_list = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] def get_map_chart(work:str): map_data = [[x[0], x[1][1]] for x in [[[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work][0]] map_chart = ( Map() .add( series_name=\\\"\\\", data_pair=map_data, center=[130, 25], is_map_symbol_show=False, tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), ) .set_global_opts( title_opts=opts.TitleOpts( title=\\\"\\\" + str(work) + \\\"全国招聘数量分布 数据来源：boss直聘，智联招聘\\\", subtitle=\\\"\\\", pos_left=\\\"center\\\", pos_top=\\\"top\\\", title_textstyle_opts=opts.TextStyleOpts( font_size=25 ), ), visualmap_opts=opts.VisualMapOpts( is_calculable=True, dimension=0, pos_left=\\\"30\\\", pos_top=\\\"top\\\", range_text=[\\\"High\\\", \\\"Low\\\"], range_color=[\\\"lightskyblue\\\", \\\"yellow\\\", \\\"orangered\\\"], textstyle_opts=opts.TextStyleOpts(color=\\\"#ddd\\\"), min_=0, max_=400, ), ) ) return map_chart def get_pie_chart(work:str): pie_data = [[x[0], x[1][1]] for x in [[[x[\\\"province\\\"], x[\\\"value\\\"]] for x in d[\\\"data\\\"]] for d in data if d[\\\"work\\\"] == work][0]] pie_chart = ( Pie() .add( series_name=\\\"\\\", data_pair=pie_data, radius=[\\\"15%\\\", \\\"35%\\\"], center=[\\\"80%\\\", \\\"82%\\\"], itemstyle_opts=opts.ItemStyleOpts( border_width=1, border_color=\\\"rgba(0,0,0,0.3)\\\" ), ) .set_global_opts( tooltip_opts=opts.TooltipOpts(is_show=True, formatter=\\\"{b}: {c}\\\"), legend_opts=opts.LegendOpts(is_show=False), ) ) return pie_chart def get_grid_chart(work:str): grid_chart = ( Grid() .add(get_pie_chart(work), grid_opts=opts.GridOpts()) .add(get_map_chart(work), grid_opts=opts.GridOpts()) ) return grid_chart if __name__ == \\\"__main__\\\": timeline = Timeline(init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.DARK)) for work in work_list: timeline.add(get_grid_chart(work), time_point=str(work)) timeline.add_schema( orient=\\\"vertical\\\", # 纵向排列 is_auto_play=True, # 自动播放 is_inverse=True, # 反向播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） pos_right=\\\"5\\\", # 右边距设置为 5 pos_top=\\\"20\\\", # 上边距设置为 20 pos_bottom=\\\"20\\\", # 下边距设置为 20 width=\\\"60\\\", # 时间轴的宽度 label_opts=opts.LabelOpts(is_show=True, color=\\\"#fff\\\", position=\\\"left\\\"), # 文本位置设置为右侧 ) timeline.render(\\\"全国招聘工作数量可视化表.html\\\")\"]},\"80\":{\"h\":\"📌成果展示\"},\"81\":{\"h\":\"3. 岗位词云统计.html\"},\"82\":{\"h\":\"📌数据获取\",\"t\":[\" safe_keyword = keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') #获取对应职业文件姓名 file = f'{safe_keyword}.csv' df = pd.read_csv(file) # 读取对应excel count = {} # 统计该词出现的次数 for index, row in df.iterrows(): skills = row['技能'] # 获取'技能'一列 parts = str(skills).split(', ') # 以', '为分割符 for part in parts: if part in count: count[part] += 1 else: count[part] = 1 words=[] # 词云 for part in count: words.append((part, count[part]))\"]},\"83\":{\"h\":\"📌WordCloud（词云图）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"c = ( WordCloud() .add( \\\"\\\", words, word_size_range=[20, 100], textstyle_opts=opts.TextStyleOpts(font_family=\\\"cursive\\\"), ) .set_global_opts(title_opts=opts.TitleOpts(title=keyword+\\\"岗位技能词云\\\")) )\"]},\"84\":{\"h\":\"📌timeline（时间线）\",\"t\":[\"若需要知道具体数据作用，请参照 使用文档\",\"timeline.add_schema( is_auto_play=True, # 自动播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） width=\\\"1400\\\", # 时间轴的宽度 ) timeline.render('岗位词云统计.html')\"]},\"85\":{\"h\":\"📌完整代码\",\"t\":[\"from pyecharts import options as opts from pyecharts.charts import WordCloud,Timeline import pandas as pd keywords = ['python', 'java', 'PHP', 'c/c++', 'C#', '.NET', 'Golang', 'Node.js', 'Android', 'iOS', '网络安全', '后端开发', '人工智能', 'web前端', '深度学习', '算法工程师', 'UI设计师'] timeline = Timeline(init_opts=opts.InitOpts(width=\\\"1650px\\\", height=\\\"900px\\\", theme=ThemeType.LIGHT)) for keyword in keywords: safe_keyword = keyword.replace('/', '_').replace('\\\\\\\\', '_').replace(':', '_') file = f'{safe_keyword}.csv' df = pd.read_csv(file) count = {} for index, row in df.iterrows(): skills = row['技能'] parts = str(skills).split(', ') for part in parts: if part in count: count[part] += 1 else: count[part] = 1 words=[] for part in count: words.append((part, count[part])) c = ( WordCloud() .add( \\\"\\\", words, word_size_range=[20, 100], textstyle_opts=opts.TextStyleOpts(font_family=\\\"cursive\\\"), ) .set_global_opts(title_opts=opts.TitleOpts(title=keyword+\\\"岗位技能词云\\\")) ) timeline.add(c, time_point=str(keyword)) timeline.add_schema( is_auto_play=True, # 自动播放 play_interval=5000, # 每个图表间隔5秒 pos_left=\\\"null\\\", # 左边距设置为 null（自动） width=\\\"1400\\\", # 时间轴的宽度 ) timeline.render('岗位词云统计.html')\"]},\"86\":{\"h\":\"📌成果展示\"},\"87\":{\"c\":[\"Python\",\"Jupyter Notebook\",\"pyecharts\"]},\"88\":{\"c\":[\"地图\",\"柱状图\",\"折线图\",\"饼图\",\"时间轴\",\"词云图\"]},\"89\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"90\":{\"h\":\"Zh\"}},\"dirtCount\":0,\"index\":[[\"岗位技能词云\",{\"1\":{\"83\":1,\"85\":1}}],[\"岗位词云统计\",{\"0\":{\"81\":1},\"1\":{\"84\":1,\"85\":1}}],[\"词云图\",{\"0\":{\"83\":1},\"2\":{\"88\":1}}],[\"词云\",{\"1\":{\"82\":1}}],[\"为分割符\",{\"1\":{\"82\":1}}],[\"为此做一个区分\",{\"1\":{\"49\":1,\"56\":1}}],[\"统计该词出现的次数\",{\"1\":{\"82\":1}}],[\"读取对应excel\",{\"1\":{\"82\":1}}],[\"读取两个\",{\"1\":{\"39\":1}}],[\"饼图\",{\"0\":{\"76\":1},\"2\":{\"88\":1}}],[\"其他参数与上面类似\",{\"1\":{\"75\":1}}],[\"区别于上面\",{\"1\":{\"75\":1}}],[\"右边距设置为\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"左边距设置为\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"每个图表间隔5秒\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"每个城市对应的参数都在该网址\",{\"1\":{\"45\":1,\"52\":1}}],[\"反向播放\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"反向退格\",{\"1\":{\"35\":1}}],[\"纵向排列\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"纵坐标\",{\"1\":{\"67\":1,\"68\":1}}],[\"按照职业将对应图表添加到时间线上\",{\"1\":{\"70\":1}}],[\"按f12打开开发者工具\",{\"1\":{\"45\":1}}],[\"900px\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"85\":1}}],[\"9616\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"60\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"60000\",{\"1\":{\"65\":1,\"71\":1}}],[\"65\",{\"1\":{\"69\":1,\"71\":1}}],[\"控制表格位置\",{\"1\":{\"69\":2}}],[\"并行多图\",{\"0\":{\"69\":1,\"77\":1}}],[\"各省份平均工资\",{\"1\":{\"68\":1,\"71\":1}}],[\"柱状图\",{\"0\":{\"68\":1},\"2\":{\"88\":1}}],[\"单位\",{\"1\":{\"67\":1,\"68\":1,\"71\":2}}],[\"单位有\",{\"1\":{\"40\":1}}],[\"展示所有数据中最大的一项\",{\"1\":{\"67\":1}}],[\"展开所有代码\",{\"1\":{\"35\":1}}],[\"展开当前代码s\",{\"1\":{\"35\":1}}],[\"横坐标\",{\"1\":{\"67\":1,\"68\":1}}],[\"折线图\",{\"0\":{\"67\":1},\"2\":{\"88\":1}}],[\"折叠所有代码\",{\"1\":{\"35\":1}}],[\"折叠当前代码\",{\"1\":{\"35\":1}}],[\"折叠\",{\"1\":{\"35\":1}}],[\"显示具体数据\",{\"1\":{\"66\":1,\"67\":1,\"76\":1}}],[\"相当于横纵坐标\",{\"1\":{\"66\":1}}],[\"相关信息\",{\"1\":{\"31\":1,\"32\":1}}],[\"相关配置文档请见\",{\"1\":{\"1\":1}}],[\"传入的为二维列表\",{\"1\":{\"66\":1}}],[\"若需要知道具体数据作用\",{\"1\":{\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"83\":1,\"84\":1}}],[\"若网络一栏无文件\",{\"1\":{\"45\":1}}],[\"地图的缩放比\",{\"1\":{\"66\":1}}],[\"地图\",{\"0\":{\"66\":1,\"75\":1},\"2\":{\"88\":1}}],[\"之前数据清洗过之后的文件\",{\"1\":{\"65\":1}}],[\"官方文档可参考pyecharts\",{\"1\":{\"63\":1}}],[\"官方下载\",{\"1\":{\"32\":1}}],[\"需要用到的库有\",{\"1\":{\"63\":1}}],[\"需要手动验证\",{\"1\":{\"59\":1}}],[\"直聘\",{\"2\":{\"62\":1}}],[\"直接点击install安装即可\",{\"1\":{\"34\":1}}],[\"标题\",{\"1\":{\"66\":1,\"67\":1,\"68\":1}}],[\"标签\",{\"1\":{\"60\":1}}],[\"标头\",{\"1\":{\"46\":1}}],[\"把json字符串转为json字典数据\",{\"1\":{\"60\":1}}],[\"把最底下add\",{\"1\":{\"31\":1}}],[\"页面中一个工作的信息包含在\",{\"1\":{\"60\":1}}],[\"比较麻烦\",{\"1\":{\"59\":1}}],[\"比如还有城市\",{\"1\":{\"40\":1}}],[\"该方法相较于前面\",{\"1\":{\"59\":1}}],[\"突破验证\",{\"1\":{\"59\":1}}],[\"例子\",{\"1\":{\"59\":1}}],[\"例如薪资\",{\"1\":{\"40\":1}}],[\"例如我的是d\",{\"1\":{\"21\":1}}],[\"例如要切换到\",{\"1\":{\"9\":1}}],[\"监听参数\",{\"1\":{\"59\":1}}],[\"作用不大\",{\"1\":{\"59\":1}}],[\"作为\",{\"1\":{\"14\":1}}],[\"搜全文\",{\"1\":{\"59\":1}}],[\"搜公司\",{\"1\":{\"59\":1}}],[\"搜索框中搜索city\",{\"1\":{\"45\":1}}],[\"职业关键字\",{\"1\":{\"59\":1}}],[\"职位\",{\"1\":{\"39\":1,\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"60\":1}}],[\"故在这里只教程如何爬取内容\",{\"1\":{\"58\":1}}],[\"故我们在此一并处理\",{\"1\":{\"40\":1}}],[\"等信息在一块\",{\"1\":{\"58\":1}}],[\"等待监听到的请求响应\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"等待自动下载\",{\"1\":{\"10\":1}}],[\"最后一页的下一页的标签为\",{\"1\":{\"56\":1}}],[\"但我们翻到第二页的时候\",{\"1\":{\"53\":1}}],[\"但是\",{\"1\":{\"59\":1}}],[\"但是同上操作在最后一页下一页的按钮为\",{\"1\":{\"49\":1}}],[\"但是该文件的省份为缩写\",{\"1\":{\"40\":1}}],[\"参数有3个\",{\"1\":{\"52\":1}}],[\"参考智联招聘的city\",{\"1\":{\"40\":1}}],[\"基础url\",{\"1\":{\"52\":1}}],[\"同理\",{\"1\":{\"52\":1}}],[\"属性\",{\"1\":{\"50\":1,\"57\":1}}],[\"属于收费版\",{\"1\":{\"32\":1}}],[\"检查是否存在\",{\"1\":{\"50\":1,\"57\":1}}],[\"确保用户输入不为空\",{\"1\":{\"50\":1,\"57\":1}}],[\"确保在对象销毁时关闭csv文件\",{\"1\":{\"50\":1,\"57\":1}}],[\"确保如果文件打开失败\",{\"1\":{\"50\":1,\"57\":1}}],[\"来判断是否进行下一页\",{\"1\":{\"49\":1,\"56\":1}}],[\"来获取最后一个元素\",{\"1\":{\"49\":1,\"56\":1}}],[\"来宾\",{\"1\":{\"40\":1,\"41\":1}}],[\"所以我们可以通过chromiumpage\",{\"1\":{\"60\":1}}],[\"所以我们使用\",{\"1\":{\"49\":1,\"56\":1}}],[\"所以该网站不能像前面俩一样爬取\",{\"1\":{\"59\":1}}],[\"所以对应的url\",{\"1\":{\"46\":1}}],[\"关于翻页操作的参数\",{\"1\":{\"49\":1,\"56\":1}}],[\"关闭浏览器实例\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"关键词和城市名不能为空\",{\"1\":{\"50\":1,\"57\":1}}],[\"关键词\",{\"1\":{\"39\":2,\"50\":1,\"57\":1}}],[\"翻页操作\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"翻页处理\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"技能要求和福利\",{\"1\":{\"58\":1}}],[\"技能\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"82\":2,\"85\":1}}],[\"领域\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"60\":1}}],[\"学历\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"60\":1}}],[\"学习笔记\",{\"2\":{\"4\":1,\"27\":1}}],[\"经验\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"60\":1}}],[\"加载新内容\",{\"1\":{\"49\":1,\"50\":1,\"56\":2,\"57\":2}}],[\"滚动到页面底部\",{\"1\":{\"49\":1,\"50\":1,\"56\":2,\"57\":2}}],[\"此处是我们要在网络中获取的数据文件\",{\"1\":{\"49\":1}}],[\"此教程将指引你创建一个\",{\"1\":{\"2\":1,\"8\":1,\"25\":1}}],[\"它是一个可交互性的网页\",{\"1\":{\"49\":1}}],[\"提取相关数据内容\",{\"1\":{\"60\":1}}],[\"提取标签\",{\"1\":{\"60\":1}}],[\"提取具体的数据内容\",{\"1\":{\"60\":1}}],[\"提示\",{\"1\":{\"48\":1,\"49\":1,\"56\":1}}],[\"提交信息\",{\"1\":{\"13\":1}}],[\"正则表达式进行替换\",{\"1\":{\"48\":1}}],[\"正则表达式获取数字\",{\"1\":{\"40\":1}}],[\"根据页面元素可以得到\",{\"1\":{\"60\":1}}],[\"根据关键词和城市编码生成正确的url\",{\"1\":{\"48\":1,\"50\":1,\"55\":1,\"57\":1}}],[\"根据返回的网址\",{\"1\":{\"10\":1}}],[\"默认值为全国\",{\"1\":{\"48\":1,\"50\":1,\"55\":1,\"57\":1}}],[\"默认把所有的勾选上即可\",{\"1\":{\"31\":1}}],[\"刚刚获取到的city\",{\"1\":{\"48\":1}}],[\"刚刚我们获取完url的两个参数信息\",{\"1\":{\"46\":1}}],[\"zoom=1\",{\"1\":{\"66\":1,\"71\":1}}],[\"zh\",{\"0\":{\"90\":1}}],[\"zhaopin\",{\"1\":{\"52\":1,\"55\":1,\"57\":2}}],[\"zhipin\",{\"1\":{\"46\":1,\"48\":1,\"50\":2}}],[\"zhilian\",{\"1\":{\"39\":3,\"57\":4}}],[\"zpdata\",{\"1\":{\"48\":2,\"49\":1,\"50\":2}}],[\"zpcommon\",{\"1\":{\"48\":1,\"50\":1}}],[\"访问的是\",{\"1\":{\"48\":2}}],[\"访问在线网页\",{\"1\":{\"48\":1}}],[\"访问网址\",{\"1\":{\"45\":1}}],[\"生成的\",{\"1\":{\"65\":1}}],[\"生成的数据如下\",{\"1\":{\"41\":1}}],[\"生成文件名\",{\"1\":{\"50\":1,\"57\":1}}],[\"生成页面对象\",{\"1\":{\"48\":1}}],[\"📌wordcloud\",{\"0\":{\"83\":1}}],[\"📌pie\",{\"0\":{\"76\":1}}],[\"📌成果展示\",{\"0\":{\"72\":1,\"80\":1,\"86\":1}}],[\"📌timeline\",{\"0\":{\"70\":1,\"78\":1,\"84\":1}}],[\"📌grid\",{\"0\":{\"69\":1,\"77\":1}}],[\"📌bar\",{\"0\":{\"68\":1}}],[\"📌line\",{\"0\":{\"67\":1}}],[\"📌map\",{\"0\":{\"66\":1,\"75\":1}}],[\"📌数据获取\",{\"0\":{\"65\":1,\"74\":1,\"82\":1}}],[\"📌数据抓取\",{\"0\":{\"49\":1,\"56\":1}}],[\"📌url获取模块\",{\"0\":{\"55\":1}}],[\"📌️url获取模块\",{\"0\":{\"48\":1}}],[\"📌完整代码\",{\"0\":{\"41\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"复制search\",{\"1\":{\"46\":1}}],[\"复制当前行到下一行\",{\"1\":{\"35\":1}}],[\"找到请求标头的\",{\"1\":{\"46\":1}}],[\"找到city\",{\"1\":{\"45\":1}}],[\"打开官网前程无忧\",{\"1\":{\"58\":1}}],[\"打开官网智联招聘\",{\"1\":{\"52\":1}}],[\"打开官网boss直聘\",{\"1\":{\"45\":1}}],[\"打开文件时发生错误\",{\"1\":{\"50\":1,\"57\":1}}],[\"打开开发者工具\",{\"1\":{\"46\":1}}],[\"举例\",{\"1\":{\"46\":1}}],[\"以\",{\"1\":{\"82\":1}}],[\"以及一些表格的例子pyecharts\",{\"1\":{\"63\":1}}],[\"以上就是\",{\"1\":{\"60\":1}}],[\"以上就是python+pycharm的详细安装过程\",{\"1\":{\"35\":1}}],[\"以上\",{\"1\":{\"46\":1}}],[\"以qurey=python\",{\"1\":{\"46\":1}}],[\"就是城市的参数文件\",{\"1\":{\"45\":1}}],[\"则需要刷新网页\",{\"1\":{\"45\":1}}],[\"刷新一下网页\",{\"1\":{\"45\":1}}],[\"返回到主页\",{\"1\":{\"45\":1}}],[\"现在的问题就是每个城市对应的参数是什么\",{\"1\":{\"45\":1}}],[\"现在开始查看\",{\"1\":{\"21\":1}}],[\"发现找不到对应的json文件\",{\"1\":{\"53\":1}}],[\"发现参数qurey=java和city=100010000\",{\"1\":{\"45\":1}}],[\"发生错误\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"发布站点\",{\"0\":{\"14\":1}}],[\"网站信息爬取过程\",{\"1\":{\"60\":1}}],[\"网址中\",{\"1\":{\"45\":1}}],[\"网络安全\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"✅️简单demo编写\",{\"0\":{\"60\":1}}],[\"✅️源代码如下\",{\"0\":{\"50\":1,\"57\":1}}],[\"✅️代码编写\",{\"0\":{\"47\":1,\"54\":1}}],[\"✅️招聘信息获取\",{\"0\":{\"46\":1,\"53\":1}}],[\"✅️url获取\",{\"0\":{\"45\":1,\"52\":1,\"59\":1}}],[\"✅️️数据处理\",{\"0\":{\"40\":1}}],[\"✅️️数据合并\",{\"0\":{\"39\":1}}],[\"✅️️pycharm\",{\"0\":{\"34\":1,\"35\":1}}],[\"✅️️安装包下载\",{\"0\":{\"33\":1}}],[\"✅️️运行安装包\",{\"0\":{\"31\":1}}],[\"处理完成后的数据如下\",{\"1\":{\"41\":1}}],[\"计算工作的平均工资\",{\"1\":{\"41\":1}}],[\"薪资\",{\"1\":{\"41\":1,\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"60\":1}}],[\"台湾\",{\"1\":{\"40\":2,\"41\":2}}],[\"台州\",{\"1\":{\"40\":1,\"41\":1}}],[\"澳门\",{\"1\":{\"40\":2,\"41\":2}}],[\"澳门特别行政区\",{\"1\":{\"40\":1,\"41\":1}}],[\"香港\",{\"1\":{\"40\":2,\"41\":2}}],[\"香港特别行政区\",{\"1\":{\"40\":1,\"41\":1}}],[\"琼中黎族苗族自治县\",{\"1\":{\"40\":1,\"41\":1}}],[\"琼海\",{\"1\":{\"40\":1,\"41\":1}}],[\"陵水黎族自治县\",{\"1\":{\"40\":1,\"41\":1}}],[\"乐东黎族自治县\",{\"1\":{\"40\":1,\"41\":1}}],[\"乐山\",{\"1\":{\"40\":1,\"41\":1}}],[\"澄迈\",{\"1\":{\"40\":1,\"41\":1}}],[\"屯昌\",{\"1\":{\"40\":1,\"41\":1}}],[\"定义热力图的最大值和最小值\",{\"1\":{\"66\":1}}],[\"定义热力图中的颜色\",{\"1\":{\"66\":1}}],[\"定义的最小值\",{\"1\":{\"65\":1}}],[\"定义的最大值\",{\"1\":{\"65\":1}}],[\"定安\",{\"1\":{\"40\":1,\"41\":1}}],[\"定西\",{\"1\":{\"40\":1,\"41\":1}}],[\"五指山\",{\"1\":{\"40\":1,\"41\":1}}],[\"五家渠\",{\"1\":{\"40\":1,\"41\":1}}],[\"儋州\",{\"1\":{\"40\":1,\"41\":1}}],[\"防城港\",{\"1\":{\"40\":1,\"41\":1}}],[\"钦州\",{\"1\":{\"40\":1,\"41\":1}}],[\"百色\",{\"1\":{\"40\":1,\"41\":1}}],[\"贺州\",{\"1\":{\"40\":1,\"41\":1}}],[\"梧州\",{\"1\":{\"40\":1,\"41\":1}}],[\"桂林\",{\"1\":{\"40\":1,\"41\":1}}],[\"柳州\",{\"1\":{\"40\":1,\"41\":1}}],[\"崇左\",{\"1\":{\"40\":1,\"41\":1}}],[\"楚雄彝族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"迪庆藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"怒江傈僳族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"红河哈尼族彝族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"文本位置设置为右侧\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"文昌\",{\"1\":{\"40\":1,\"41\":1}}],[\"文山壮族苗族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"文件\",{\"1\":{\"39\":2}}],[\"文件的数据\",{\"1\":{\"39\":1}}],[\"文件夹\",{\"1\":{\"9\":1,\"22\":2}}],[\"丽江\",{\"1\":{\"40\":1,\"41\":1}}],[\"丽水\",{\"1\":{\"40\":1,\"41\":1}}],[\"昭通\",{\"1\":{\"40\":1,\"41\":1}}],[\"普洱\",{\"1\":{\"40\":1,\"41\":1}}],[\"玉林\",{\"1\":{\"40\":1,\"41\":1}}],[\"玉溪\",{\"1\":{\"40\":1,\"41\":1}}],[\"玉树藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"曲靖\",{\"1\":{\"40\":1,\"41\":1}}],[\"云南\",{\"1\":{\"40\":16,\"41\":16}}],[\"云浮\",{\"1\":{\"40\":1,\"41\":1}}],[\"昆明\",{\"1\":{\"40\":1,\"41\":1}}],[\"昆玉市\",{\"1\":{\"40\":1,\"41\":1}}],[\"汕尾\",{\"1\":{\"40\":1,\"41\":1}}],[\"汕头\",{\"1\":{\"40\":1,\"41\":1}}],[\"茂名\",{\"1\":{\"40\":1,\"41\":1}}],[\"揭阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"阳江\",{\"1\":{\"40\":1,\"41\":1}}],[\"阳泉\",{\"1\":{\"40\":1,\"41\":1}}],[\"东方\",{\"1\":{\"40\":1,\"41\":1}}],[\"东沙群岛\",{\"1\":{\"40\":1,\"41\":1}}],[\"东莞\",{\"1\":{\"40\":1,\"41\":1}}],[\"东营\",{\"1\":{\"40\":1,\"41\":1}}],[\"潮州\",{\"1\":{\"40\":1,\"41\":1}}],[\"清远\",{\"1\":{\"40\":1,\"41\":1}}],[\"湛江\",{\"1\":{\"40\":1,\"41\":1}}],[\"肇庆\",{\"1\":{\"40\":1,\"41\":1}}],[\"佛山\",{\"1\":{\"40\":1,\"41\":1}}],[\"珠海\",{\"1\":{\"40\":1,\"41\":1}}],[\"深圳\",{\"1\":{\"40\":1,\"41\":1}}],[\"深度学习\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"梅州\",{\"1\":{\"40\":1,\"41\":1}}],[\"惠州\",{\"1\":{\"40\":1,\"41\":1}}],[\"韶关\",{\"1\":{\"40\":1,\"41\":1}}],[\"凉山彝族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"德宏傣族景颇族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"德阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"德州\",{\"1\":{\"40\":1,\"41\":1}}],[\"雅安\",{\"1\":{\"40\":1,\"41\":1}}],[\"眉山\",{\"1\":{\"40\":1,\"41\":1}}],[\"资阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"内江\",{\"1\":{\"40\":1,\"41\":1}}],[\"内蒙古\",{\"1\":{\"40\":12,\"41\":12}}],[\"内蒙古自治区\",{\"1\":{\"40\":1,\"41\":1}}],[\"泸州\",{\"1\":{\"40\":1,\"41\":1}}],[\"广西\",{\"1\":{\"40\":14,\"41\":14}}],[\"广西壮族自治区\",{\"1\":{\"40\":1,\"41\":1}}],[\"广东\",{\"1\":{\"40\":22,\"41\":22}}],[\"广州\",{\"1\":{\"40\":1,\"41\":1}}],[\"广元\",{\"1\":{\"40\":1,\"41\":1}}],[\"广安\",{\"1\":{\"40\":1,\"41\":1}}],[\"遂宁\",{\"1\":{\"40\":1,\"41\":1}}],[\"达州\",{\"1\":{\"40\":1,\"41\":1}}],[\"绵阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"攀枝花\",{\"1\":{\"40\":1,\"41\":1}}],[\"四个参数\",{\"1\":{\"59\":1}}],[\"四川\",{\"1\":{\"40\":21,\"41\":21}}],[\"四平\",{\"1\":{\"40\":1,\"41\":1}}],[\"成都\",{\"1\":{\"40\":1,\"41\":1}}],[\"黔西南布依族苗族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"黔南布依族苗族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"黔东南苗族侗族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"六盘水\",{\"1\":{\"40\":1,\"41\":1}}],[\"六安\",{\"1\":{\"40\":1,\"41\":1}}],[\"毕节\",{\"1\":{\"40\":1,\"41\":1}}],[\"遵义\",{\"1\":{\"40\":1,\"41\":1}}],[\"贵港\",{\"1\":{\"40\":1,\"41\":1}}],[\"贵州\",{\"1\":{\"40\":9,\"41\":9}}],[\"贵阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"湘西土家族苗族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"湘潭\",{\"1\":{\"40\":1,\"41\":1}}],[\"永州\",{\"1\":{\"40\":1,\"41\":1}}],[\"怀化\",{\"1\":{\"40\":1,\"41\":1}}],[\"岳阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"邵阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"娄底\",{\"1\":{\"40\":1,\"41\":1}}],[\"益阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"郴州\",{\"1\":{\"40\":1,\"41\":1}}],[\"衡阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"衡水\",{\"1\":{\"40\":1,\"41\":1}}],[\"株洲\",{\"1\":{\"40\":1,\"41\":1}}],[\"鹰潭\",{\"1\":{\"40\":1,\"41\":1}}],[\"萍乡\",{\"1\":{\"40\":1,\"41\":1}}],[\"景德镇\",{\"1\":{\"40\":1,\"41\":1}}],[\"赣州\",{\"1\":{\"40\":1,\"41\":1}}],[\"吉安\",{\"1\":{\"40\":1,\"41\":1}}],[\"吉林\",{\"1\":{\"40\":10,\"41\":10}}],[\"宜宾\",{\"1\":{\"40\":1,\"41\":1}}],[\"宜春\",{\"1\":{\"40\":1,\"41\":1}}],[\"宜昌\",{\"1\":{\"40\":1,\"41\":1}}],[\"抚州\",{\"1\":{\"40\":1,\"41\":1}}],[\"抚顺\",{\"1\":{\"40\":1,\"41\":1}}],[\"九江\",{\"1\":{\"40\":1,\"41\":1}}],[\"江门\",{\"1\":{\"40\":1,\"41\":1}}],[\"江西\",{\"1\":{\"40\":11,\"41\":11}}],[\"江苏\",{\"1\":{\"40\":13,\"41\":13}}],[\"三沙\",{\"1\":{\"40\":1,\"41\":1}}],[\"三亚\",{\"1\":{\"40\":1,\"41\":1}}],[\"三明\",{\"1\":{\"40\":1,\"41\":1}}],[\"三门峡\",{\"1\":{\"40\":1,\"41\":1}}],[\"龙岩\",{\"1\":{\"40\":1,\"41\":1}}],[\"漳州\",{\"1\":{\"40\":1,\"41\":1}}],[\"泉州\",{\"1\":{\"40\":1,\"41\":1}}],[\"莆田\",{\"1\":{\"40\":1,\"41\":1}}],[\"厦门\",{\"1\":{\"40\":1,\"41\":1}}],[\"福利\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2}}],[\"福建\",{\"1\":{\"40\":9,\"41\":9}}],[\"福州\",{\"1\":{\"40\":1,\"41\":1}}],[\"池州\",{\"1\":{\"40\":1,\"41\":1}}],[\"宣城\",{\"1\":{\"40\":1,\"41\":1}}],[\"铜仁\",{\"1\":{\"40\":1,\"41\":1}}],[\"铜陵\",{\"1\":{\"40\":1,\"41\":1}}],[\"铜川\",{\"1\":{\"40\":1,\"41\":1}}],[\"滁州\",{\"1\":{\"40\":1,\"41\":1}}],[\"亳州\",{\"1\":{\"40\":1,\"41\":1}}],[\"阜阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"阜新\",{\"1\":{\"40\":1,\"41\":1}}],[\"宿州\",{\"1\":{\"40\":1,\"41\":1}}],[\"宿迁\",{\"1\":{\"40\":1,\"41\":1}}],[\"马鞍山\",{\"1\":{\"40\":1,\"41\":1}}],[\"淮北\",{\"1\":{\"40\":1,\"41\":1}}],[\"淮南\",{\"1\":{\"40\":1,\"41\":1}}],[\"淮安\",{\"1\":{\"40\":1,\"41\":1}}],[\"芜湖\",{\"1\":{\"40\":1,\"41\":1}}],[\"蚌埠\",{\"1\":{\"40\":1,\"41\":1}}],[\"合肥\",{\"1\":{\"40\":1,\"41\":1}}],[\"合并两个\",{\"1\":{\"39\":1}}],[\"舟山\",{\"1\":{\"40\":1,\"41\":1}}],[\"衢州\",{\"1\":{\"40\":1,\"41\":1}}],[\"金华\",{\"1\":{\"40\":1,\"41\":1}}],[\"金昌\",{\"1\":{\"40\":1,\"41\":1}}],[\"温州\",{\"1\":{\"40\":1,\"41\":1}}],[\"绍兴\",{\"1\":{\"40\":1,\"41\":1}}],[\"宁德\",{\"1\":{\"40\":1,\"41\":1}}],[\"宁波\",{\"1\":{\"40\":1,\"41\":1}}],[\"宁夏\",{\"1\":{\"40\":5,\"41\":5}}],[\"宁夏回族自治区\",{\"1\":{\"40\":1,\"41\":1}}],[\"嘉兴\",{\"1\":{\"40\":1,\"41\":1}}],[\"嘉峪关\",{\"1\":{\"40\":1,\"41\":1}}],[\"湖南\",{\"1\":{\"40\":14,\"41\":14}}],[\"湖州\",{\"1\":{\"40\":1,\"41\":1}}],[\"湖北\",{\"1\":{\"40\":17,\"41\":17}}],[\"浙江\",{\"1\":{\"40\":11,\"41\":11}}],[\"杭州\",{\"1\":{\"40\":1,\"41\":1}}],[\"神农架\",{\"1\":{\"40\":1,\"41\":1}}],[\"潜江\",{\"1\":{\"40\":1,\"41\":1}}],[\"仙桃\",{\"1\":{\"40\":1,\"41\":1}}],[\"恩施土家族苗族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"荆门\",{\"1\":{\"40\":1,\"41\":1}}],[\"荆州\",{\"1\":{\"40\":1,\"41\":1}}],[\"随州\",{\"1\":{\"40\":1,\"41\":1}}],[\"十堰\",{\"1\":{\"40\":1,\"41\":1}}],[\"咸宁\",{\"1\":{\"40\":1,\"41\":1}}],[\"咸阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"黄山\",{\"1\":{\"40\":1,\"41\":1}}],[\"黄石\",{\"1\":{\"40\":1,\"41\":1}}],[\"黄冈\",{\"1\":{\"40\":1,\"41\":1}}],[\"黄南藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"孝感\",{\"1\":{\"40\":1,\"41\":1}}],[\"鄂州\",{\"1\":{\"40\":1,\"41\":1}}],[\"鄂尔多斯\",{\"1\":{\"40\":1,\"41\":1}}],[\"襄阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"武汉\",{\"1\":{\"40\":1,\"41\":1}}],[\"武威\",{\"1\":{\"40\":1,\"41\":1}}],[\"泰州\",{\"1\":{\"40\":1,\"41\":1}}],[\"泰安\",{\"1\":{\"40\":1,\"41\":1}}],[\"常德\",{\"1\":{\"40\":1,\"41\":1}}],[\"常州\",{\"1\":{\"40\":1,\"41\":1}}],[\"常用快捷键\",{\"0\":{\"35\":1}}],[\"连云港\",{\"1\":{\"40\":1,\"41\":1}}],[\"连接到远程仓库\",{\"1\":{\"13\":1}}],[\"徐州\",{\"1\":{\"40\":1,\"41\":1}}],[\"盐城\",{\"1\":{\"40\":1,\"41\":1}}],[\"扬州\",{\"1\":{\"40\":1,\"41\":1}}],[\"苏州\",{\"1\":{\"40\":1,\"41\":1}}],[\"镇江\",{\"1\":{\"40\":1,\"41\":1}}],[\"无锡\",{\"1\":{\"40\":1,\"41\":1}}],[\"南宁\",{\"1\":{\"40\":1,\"41\":1}}],[\"南充\",{\"1\":{\"40\":1,\"41\":1}}],[\"南昌\",{\"1\":{\"40\":1,\"41\":1}}],[\"南平\",{\"1\":{\"40\":1,\"41\":1}}],[\"南通\",{\"1\":{\"40\":1,\"41\":1}}],[\"南京\",{\"1\":{\"40\":1,\"41\":1}}],[\"南阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"驻马店\",{\"1\":{\"40\":1,\"41\":1}}],[\"漯河\",{\"1\":{\"40\":1,\"41\":1}}],[\"濮阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"鹤壁\",{\"1\":{\"40\":1,\"41\":1}}],[\"鹤岗\",{\"1\":{\"40\":1,\"41\":1}}],[\"焦作\",{\"1\":{\"40\":1,\"41\":1}}],[\"商丘\",{\"1\":{\"40\":1,\"41\":1}}],[\"商洛\",{\"1\":{\"40\":1,\"41\":1}}],[\"洛阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"开封\",{\"1\":{\"40\":1,\"41\":1}}],[\"开源\",{\"1\":{\"32\":1}}],[\"信阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"平顶山\",{\"1\":{\"40\":1,\"41\":1}}],[\"平凉\",{\"1\":{\"40\":1,\"41\":1}}],[\"许昌\",{\"1\":{\"40\":1,\"41\":1}}],[\"河池\",{\"1\":{\"40\":1,\"41\":1}}],[\"河源\",{\"1\":{\"40\":1,\"41\":1}}],[\"河南\",{\"1\":{\"40\":18,\"41\":18}}],[\"河北\",{\"1\":{\"40\":11,\"41\":11}}],[\"郑州\",{\"1\":{\"40\":1,\"41\":1}}],[\"中的求职信息\",{\"1\":{\"43\":1}}],[\"中山\",{\"1\":{\"40\":1,\"41\":1}}],[\"中卫\",{\"1\":{\"40\":1,\"41\":1}}],[\"中设置\",{\"1\":{\"1\":1}}],[\"固原\",{\"1\":{\"40\":1,\"41\":1}}],[\"吴忠\",{\"1\":{\"40\":1,\"41\":1}}],[\"银川\",{\"1\":{\"40\":1,\"41\":1}}],[\"甘孜藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"甘南藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"甘肃\",{\"1\":{\"40\":14,\"41\":14}}],[\"陇南\",{\"1\":{\"40\":1,\"41\":1}}],[\"酒泉\",{\"1\":{\"40\":1,\"41\":1}}],[\"张家界\",{\"1\":{\"40\":1,\"41\":1}}],[\"张家口\",{\"1\":{\"40\":1,\"41\":1}}],[\"张掖\",{\"1\":{\"40\":1,\"41\":1}}],[\"庆阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"兰州\",{\"1\":{\"40\":1,\"41\":1}}],[\"果洛藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"海南\",{\"1\":{\"40\":19,\"41\":19}}],[\"海南藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"海口\",{\"1\":{\"40\":1,\"41\":1}}],[\"海西蒙古族藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"海北藏族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"海东\",{\"1\":{\"40\":1,\"41\":1}}],[\"青海\",{\"1\":{\"40\":8,\"41\":8}}],[\"青岛\",{\"1\":{\"40\":1,\"41\":1}}],[\"那曲\",{\"1\":{\"40\":1,\"41\":1}}],[\"林芝\",{\"1\":{\"40\":1,\"41\":1}}],[\"昌江黎族自治县\",{\"1\":{\"40\":1,\"41\":1}}],[\"昌都\",{\"1\":{\"40\":1,\"41\":1}}],[\"昌吉回族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"拉萨\",{\"1\":{\"40\":1,\"41\":1}}],[\"胡杨河市\",{\"1\":{\"40\":1,\"41\":1}}],[\"可克达拉市\",{\"1\":{\"40\":1,\"41\":1}}],[\"可以看到上一页和下一页的按钮标签名称都为\",{\"1\":{\"56\":1}}],[\"可以看到下一页的按钮标签名称为\",{\"1\":{\"49\":1}}],[\"可以发现有两个参数\",{\"1\":{\"45\":1}}],[\"可以都勾选上\",{\"1\":{\"34\":1}}],[\"可以自己选择安装的路径\",{\"1\":{\"31\":1}}],[\"可以直接修改package\",{\"1\":{\"10\":1}}],[\"北海\",{\"1\":{\"40\":1,\"41\":1}}],[\"北屯市\",{\"1\":{\"40\":1,\"41\":1}}],[\"北京\",{\"1\":{\"40\":2,\"41\":2}}],[\"北京市\",{\"1\":{\"40\":1,\"41\":1}}],[\"铁门关\",{\"1\":{\"40\":1,\"41\":1}}],[\"铁岭\",{\"1\":{\"40\":1,\"41\":1}}],[\"图木舒克\",{\"1\":{\"40\":1,\"41\":1}}],[\"石嘴山\",{\"1\":{\"40\":1,\"41\":1}}],[\"石河子\",{\"1\":{\"40\":1,\"41\":1}}],[\"石家庄\",{\"1\":{\"40\":1,\"41\":1}}],[\"塔城地区\",{\"1\":{\"40\":1,\"41\":1}}],[\"喀什地区\",{\"1\":{\"40\":1,\"41\":1}}],[\"克孜勒苏柯尔克孜自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"克拉玛依\",{\"1\":{\"40\":1,\"41\":1}}],[\"阿坝藏族羌族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"阿里地区\",{\"1\":{\"40\":1,\"41\":1}}],[\"阿拉尔\",{\"1\":{\"40\":1,\"41\":1}}],[\"阿拉善盟\",{\"1\":{\"40\":1,\"41\":1}}],[\"阿勒泰地区\",{\"1\":{\"40\":1,\"41\":1}}],[\"阿克苏地区\",{\"1\":{\"40\":1,\"41\":1}}],[\"哈密\",{\"1\":{\"40\":1,\"41\":1}}],[\"哈尔滨\",{\"1\":{\"40\":1,\"41\":1}}],[\"吐鲁番\",{\"1\":{\"40\":1,\"41\":1}}],[\"伊犁哈萨克自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"伊春\",{\"1\":{\"40\":1,\"41\":1}}],[\"博尔塔拉蒙古自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"博客搭建\",{\"0\":{\"2\":1}}],[\"巴中\",{\"1\":{\"40\":1,\"41\":1}}],[\"巴音郭楞蒙古自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"巴彦淖尔\",{\"1\":{\"40\":1,\"41\":1}}],[\"聊城\",{\"1\":{\"40\":1,\"41\":1}}],[\"枣庄\",{\"1\":{\"40\":1,\"41\":1}}],[\"威海\",{\"1\":{\"40\":1,\"41\":1}}],[\"滨州\",{\"1\":{\"40\":1,\"41\":1}}],[\"菏泽\",{\"1\":{\"40\":1,\"41\":1}}],[\"临高\",{\"1\":{\"40\":1,\"41\":1}}],[\"临沧\",{\"1\":{\"40\":1,\"41\":1}}],[\"临夏回族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"临沂\",{\"1\":{\"40\":1,\"41\":1}}],[\"临汾\",{\"1\":{\"40\":1,\"41\":1}}],[\"济源\",{\"1\":{\"40\":1,\"41\":1}}],[\"济宁\",{\"1\":{\"40\":1,\"41\":1}}],[\"济南\",{\"1\":{\"40\":1,\"41\":1}}],[\"潍坊\",{\"1\":{\"40\":1,\"41\":1}}],[\"烟台\",{\"1\":{\"40\":1,\"41\":1}}],[\"淄博\",{\"1\":{\"40\":1,\"41\":1}}],[\"山南\",{\"1\":{\"40\":1,\"41\":1}}],[\"山东\",{\"1\":{\"40\":16,\"41\":16}}],[\"山西\",{\"1\":{\"40\":11,\"41\":11}}],[\"宝鸡\",{\"1\":{\"40\":1,\"41\":1}}],[\"汉中\",{\"1\":{\"40\":1,\"41\":1}}],[\"安顺\",{\"1\":{\"40\":1,\"41\":1}}],[\"安庆\",{\"1\":{\"40\":1,\"41\":1}}],[\"安徽\",{\"1\":{\"40\":16,\"41\":16}}],[\"安阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"安康\",{\"1\":{\"40\":1,\"41\":1}}],[\"安装jupyter\",{\"1\":{\"63\":1}}],[\"安装教程以idea为例子\",{\"1\":{\"34\":1}}],[\"安装教程\",{\"0\":{\"34\":1}}],[\"安装完成之后\",{\"1\":{\"31\":1}}],[\"安装完成\",{\"1\":{\"31\":1,\"34\":1}}],[\"安装\",{\"0\":{\"29\":1,\"32\":1}}],[\"安装依赖\",{\"0\":{\"10\":1}}],[\"渭南\",{\"1\":{\"40\":1,\"41\":1}}],[\"榆林\",{\"1\":{\"40\":1,\"41\":1}}],[\"延安\",{\"1\":{\"40\":1,\"41\":1}}],[\"延边朝鲜族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"陕西\",{\"1\":{\"40\":10,\"41\":10}}],[\"西双版纳傣族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"西宁\",{\"1\":{\"40\":1,\"41\":1}}],[\"西藏\",{\"1\":{\"40\":7,\"41\":7}}],[\"西藏自治区\",{\"1\":{\"40\":1,\"41\":1}}],[\"西安\",{\"1\":{\"40\":1,\"41\":1}}],[\"吕梁\",{\"1\":{\"40\":1,\"41\":1}}],[\"忻州\",{\"1\":{\"40\":1,\"41\":1}}],[\"朔州\",{\"1\":{\"40\":1,\"41\":1}}],[\"运城\",{\"1\":{\"40\":1,\"41\":1}}],[\"运行jupyter\",{\"1\":{\"63\":1}}],[\"运行安装包\",{\"0\":{\"19\":1}}],[\"运行时环境\",{\"1\":{\"17\":1}}],[\"运行环境搭建\",{\"0\":{\"16\":1},\"1\":{\"3\":1}}],[\"晋城\",{\"1\":{\"40\":1,\"41\":1}}],[\"晋中\",{\"1\":{\"40\":1,\"41\":1}}],[\"长沙\",{\"1\":{\"40\":1,\"41\":1}}],[\"长治\",{\"1\":{\"40\":1,\"41\":1}}],[\"长春\",{\"1\":{\"40\":1,\"41\":1}}],[\"太原\",{\"1\":{\"40\":1,\"41\":1}}],[\"秦皇岛\",{\"1\":{\"40\":1,\"41\":1}}],[\"邯郸\",{\"1\":{\"40\":1,\"41\":1}}],[\"邢台\",{\"1\":{\"40\":1,\"41\":1}}],[\"沧州\",{\"1\":{\"40\":1,\"41\":1}}],[\"廊坊\",{\"1\":{\"40\":1,\"41\":1}}],[\"唐山\",{\"1\":{\"40\":1,\"41\":1}}],[\"承德\",{\"1\":{\"40\":1,\"41\":1}}],[\"兴安盟\",{\"1\":{\"40\":1,\"41\":1}}],[\"锡林郭勒盟\",{\"1\":{\"40\":1,\"41\":1}}],[\"乌鲁木齐\",{\"1\":{\"40\":1,\"41\":1}}],[\"乌兰察布\",{\"1\":{\"40\":1,\"41\":1}}],[\"乌海\",{\"1\":{\"40\":1,\"41\":1}}],[\"呼伦贝尔\",{\"1\":{\"40\":1,\"41\":1}}],[\"呼和浩特\",{\"1\":{\"40\":1,\"41\":1}}],[\"赤峰\",{\"1\":{\"40\":1,\"41\":1}}],[\"通过直接爬取网页元素\",{\"1\":{\"59\":1}}],[\"通过对比两个网址\",{\"1\":{\"45\":1}}],[\"通辽\",{\"1\":{\"40\":1,\"41\":1}}],[\"通化\",{\"1\":{\"40\":1,\"41\":1}}],[\"葫芦岛\",{\"1\":{\"40\":1,\"41\":1}}],[\"朝阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"营口\",{\"1\":{\"40\":1,\"41\":1}}],[\"锦州\",{\"1\":{\"40\":1,\"41\":1}}],[\"丹东\",{\"1\":{\"40\":1,\"41\":1}}],[\"本溪\",{\"1\":{\"40\":1,\"41\":1}}],[\"本教程将指导你如何制作可视化图表\",{\"1\":{\"63\":1}}],[\"本教程将指导你如何爬取\",{\"1\":{\"43\":1}}],[\"本教程将指导你如何处理\",{\"1\":{\"38\":1}}],[\"本教程将指导你如何配置\",{\"1\":{\"28\":1}}],[\"本教程将指导你如何搭建\",{\"1\":{\"16\":1}}],[\"本教程指引你如何部署\",{\"1\":{\"12\":1}}],[\"本教程指引你如何配置\",{\"1\":{\"5\":1}}],[\"鞍山\",{\"1\":{\"40\":1,\"41\":1}}],[\"辽阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"辽宁\",{\"1\":{\"40\":14,\"41\":14}}],[\"辽源\",{\"1\":{\"40\":1,\"41\":1}}],[\"沈阳\",{\"1\":{\"40\":1,\"41\":1}}],[\"白沙黎族自治县\",{\"1\":{\"40\":1,\"41\":1}}],[\"白银\",{\"1\":{\"40\":1,\"41\":1}}],[\"白杨市\",{\"1\":{\"40\":1,\"41\":1}}],[\"白山\",{\"1\":{\"40\":1,\"41\":1}}],[\"白城\",{\"1\":{\"40\":1,\"41\":1}}],[\"松原\",{\"1\":{\"40\":1,\"41\":1}}],[\"大家可以尝试编写代码\",{\"1\":{\"59\":1}}],[\"大理白族自治州\",{\"1\":{\"40\":1,\"41\":1}}],[\"大同\",{\"1\":{\"40\":1,\"41\":1}}],[\"大连\",{\"1\":{\"40\":1,\"41\":1}}],[\"大兴安岭地区\",{\"1\":{\"40\":1,\"41\":1}}],[\"大庆\",{\"1\":{\"40\":1,\"41\":1}}],[\"双河市\",{\"1\":{\"40\":1,\"41\":1}}],[\"双鸭山\",{\"1\":{\"40\":1,\"41\":1}}],[\"双击进行下一步即可\",{\"1\":{\"34\":1}}],[\"双击下载好的安装包\",{\"1\":{\"31\":1}}],[\"鸡西\",{\"1\":{\"40\":1,\"41\":1}}],[\"七台河\",{\"1\":{\"40\":1,\"41\":1}}],[\"黑河\",{\"1\":{\"40\":1,\"41\":1}}],[\"黑龙江\",{\"1\":{\"40\":13,\"41\":13}}],[\"绥化\",{\"1\":{\"40\":1,\"41\":1}}],[\"佳木斯\",{\"1\":{\"40\":1,\"41\":1}}],[\"牡丹江\",{\"1\":{\"40\":1,\"41\":1}}],[\"齐齐哈尔\",{\"1\":{\"40\":1,\"41\":1}}],[\"重庆\",{\"1\":{\"40\":2,\"41\":2}}],[\"重庆市\",{\"1\":{\"40\":1,\"41\":1}}],[\"省\",{\"1\":{\"40\":1,\"41\":1}}],[\"上边距设置为\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"上饶\",{\"1\":{\"40\":1,\"41\":1}}],[\"上海\",{\"1\":{\"40\":2,\"41\":2}}],[\"上海市\",{\"1\":{\"40\":1,\"41\":1}}],[\"上一步完成推送后\",{\"1\":{\"14\":1}}],[\"新余\",{\"1\":{\"40\":1,\"41\":1}}],[\"新乡\",{\"1\":{\"40\":1,\"41\":1}}],[\"新星市\",{\"1\":{\"40\":1,\"41\":1}}],[\"新疆\",{\"1\":{\"40\":26,\"41\":26}}],[\"新疆维吾尔自治区\",{\"1\":{\"40\":1,\"41\":1}}],[\"新建一个node\",{\"1\":{\"21\":1}}],[\"获取\",{\"1\":{\"82\":1}}],[\"获取对应职业文件姓名\",{\"1\":{\"82\":1}}],[\"获取的数据与地图一样\",{\"1\":{\"76\":1}}],[\"获取的是工作岗位的数量\",{\"1\":{\"75\":1}}],[\"获取数据与上图一样\",{\"1\":{\"74\":1}}],[\"获取所有职位信息所在的div标签\",{\"1\":{\"60\":1}}],[\"获取到\",{\"1\":{\"53\":1}}],[\"获取城市编码\",{\"1\":{\"48\":1,\"50\":1,\"55\":1,\"57\":1}}],[\"获取城市对应省份全称\",{\"1\":{\"40\":1}}],[\"获取单位\",{\"1\":{\"40\":1}}],[\"包头\",{\"1\":{\"40\":1,\"41\":1}}],[\"包含小数\",{\"1\":{\"40\":1}}],[\"包括新增\",{\"1\":{\"13\":1}}],[\"天门\",{\"1\":{\"40\":1,\"41\":1}}],[\"天水\",{\"1\":{\"40\":1,\"41\":1}}],[\"天津\",{\"1\":{\"40\":2,\"41\":2}}],[\"天津市\",{\"1\":{\"40\":1,\"41\":1}}],[\"天\",{\"1\":{\"40\":1,\"41\":1}}],[\"xaxis\",{\"1\":{\"67\":1,\"68\":3,\"71\":4}}],[\"x\",{\"1\":{\"40\":7,\"41\":7,\"66\":6,\"68\":7,\"71\":13,\"75\":6,\"76\":6,\"79\":12}}],[\"还有一些为面议\",{\"1\":{\"40\":1}}],[\"万宁\",{\"1\":{\"40\":1,\"41\":1}}],[\"万\",{\"1\":{\"40\":2,\"41\":1}}],[\"千\",{\"1\":{\"40\":2,\"41\":1}}],[\"元\",{\"1\":{\"40\":1,\"67\":1,\"68\":1,\"71\":2}}],[\"月\",{\"1\":{\"40\":1,\"68\":1,\"71\":1}}],[\"周口\",{\"1\":{\"40\":1,\"41\":1}}],[\"周\",{\"1\":{\"40\":2,\"41\":1}}],[\"日喀则\",{\"1\":{\"40\":1,\"41\":1}}],[\"日照\",{\"1\":{\"40\":1,\"41\":1}}],[\"日\",{\"1\":{\"40\":2,\"41\":1}}],[\"日期有\",{\"1\":{\"40\":1}}],[\"时间轴\",{\"2\":{\"88\":1}}],[\"时间轴的宽度\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"时间线\",{\"0\":{\"70\":1,\"78\":1,\"84\":1}}],[\"时\",{\"1\":{\"40\":2,\"41\":1}}],[\"有别于boss直聘\",{\"1\":{\"53\":1}}],[\"有些需要进行处理\",{\"1\":{\"40\":1}}],[\"有着简单\",{\"1\":{\"29\":1}}],[\"智联招聘\",{\"0\":{\"51\":1},\"1\":{\"39\":1,\"57\":1,\"66\":1,\"71\":1,\"75\":1,\"79\":1},\"2\":{\"62\":1}}],[\"智能跳到下一行\",{\"1\":{\"35\":1}}],[\"对应的为省份名称和对应职位的工资\",{\"1\":{\"66\":1}}],[\"对应的文件找到了\",{\"1\":{\"53\":1}}],[\"对象的eles方法获取页面中所有joblist\",{\"1\":{\"60\":1}}],[\"对象并生成对应的\",{\"1\":{\"39\":1}}],[\"对话中发送pycharm\",{\"1\":{\"33\":1}}],[\"创建\",{\"1\":{\"39\":1}}],[\"创建项目\",{\"0\":{\"8\":1},\"1\":{\"3\":1}}],[\"全国招聘数量分布\",{\"1\":{\"75\":1,\"79\":1}}],[\"全国招聘工作数量可视化表\",{\"0\":{\"73\":1},\"1\":{\"78\":1,\"79\":1}}],[\"全国招聘工作工资分布可视化表\",{\"0\":{\"64\":1},\"1\":{\"70\":1,\"71\":1}}],[\"全国岗位平均工资\",{\"1\":{\"67\":1,\"71\":1}}],[\"全国各省份平均工资\",{\"1\":{\"66\":1,\"71\":1}}],[\"全国\",{\"1\":{\"39\":1}}],[\"全家桶\",{\"1\":{\"34\":1}}],[\"算法工程师\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"人工智能\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"人生苦短\",{\"1\":{\"29\":1}}],[\"后期数据处理很麻烦\",{\"1\":{\"58\":1}}],[\"后面编写代码需要\",{\"1\":{\"46\":1}}],[\"后面制作表格需要\",{\"1\":{\"41\":1}}],[\"后端开发\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"后的求职信息\",{\"1\":{\"38\":1}}],[\"批量收集网站数据\",{\"1\":{\"39\":1}}],[\"保存在字典内\",{\"1\":{\"60\":1}}],[\"保存合并且去重后的数据到新的\",{\"1\":{\"39\":1}}],[\"保亭黎族苗族自治县\",{\"1\":{\"40\":1,\"41\":1}}],[\"保山\",{\"1\":{\"40\":1,\"41\":1}}],[\"保定\",{\"1\":{\"40\":1,\"41\":1}}],[\"保持所有的默认设置\",{\"0\":{\"19\":1}}],[\"城市参数\",{\"1\":{\"59\":2}}],[\"城市参数网址\",{\"1\":{\"52\":1}}],[\"城市对应的省份\",{\"1\":{\"40\":1}}],[\"城市\",{\"1\":{\"39\":3,\"41\":2,\"49\":1,\"50\":3,\"56\":1,\"57\":3,\"60\":1}}],[\"城市字段去重\",{\"1\":{\"39\":1}}],[\"公司领域\",{\"1\":{\"60\":1}}],[\"公司姓名\",{\"1\":{\"60\":1}}],[\"公司标签如图所示\",{\"1\":{\"60\":1}}],[\"公司信息如图所示\",{\"1\":{\"60\":1}}],[\"公司\",{\"1\":{\"39\":2,\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"60\":1}}],[\"假设根据职位\",{\"1\":{\"39\":1}}],[\"去除重复行\",{\"1\":{\"39\":1}}],[\"=400\",{\"1\":{\"75\":1,\"79\":1}}],[\"=0\",{\"1\":{\"75\":1,\"79\":1}}],[\"=60000\",{\"1\":{\"68\":1,\"71\":1}}],[\"=max\",{\"1\":{\"66\":1,\"71\":1}}],[\"=min\",{\"1\":{\"66\":1,\"71\":1}}],[\"==\",{\"1\":{\"41\":1,\"48\":1,\"50\":2,\"55\":2,\"57\":3,\"66\":1,\"71\":2,\"75\":1,\"76\":1,\"79\":3}}],[\"==2\",{\"1\":{\"40\":1,\"41\":1}}],[\"=\",{\"1\":{\"39\":13,\"40\":16,\"41\":29,\"46\":1,\"48\":4,\"49\":8,\"50\":23,\"55\":4,\"56\":8,\"57\":23,\"60\":8,\"65\":14,\"66\":3,\"67\":2,\"68\":3,\"69\":1,\"70\":2,\"71\":25,\"75\":2,\"76\":2,\"77\":1,\"78\":1,\"79\":17,\"82\":7,\"83\":1,\"85\":10}}],[\"招聘网站\",{\"1\":{\"38\":1,\"43\":1}}],[\"招聘网站爬虫\",{\"0\":{\"25\":1},\"1\":{\"25\":1,\"28\":1}}],[\"爬取数据并写入csv\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"爬取\",{\"1\":{\"38\":1}}],[\"爬虫\",{\"2\":{\"27\":1,\"37\":1}}],[\"及pycharm的使用\",{\"1\":{\"35\":1}}],[\"替换掉文件名中的非法字符\",{\"1\":{\"50\":1,\"57\":1}}],[\"替换\",{\"1\":{\"35\":2}}],[\"缩进\",{\"1\":{\"35\":1}}],[\"quit\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"query=python\",{\"1\":{\"46\":1,\"50\":1}}],[\"qurey代表求职信息即我们搜索框中输入的内容\",{\"1\":{\"45\":1}}],[\"qurey=python\",{\"1\":{\"45\":1}}],[\"q\",{\"1\":{\"35\":1}}],[\"查看文档\",{\"1\":{\"35\":1}}],[\"查看\",{\"1\":{\"35\":1}}],[\"删除当前行\",{\"1\":{\"35\":1}}],[\"删除\",{\"1\":{\"35\":1}}],[\"选中时复制粘贴选中部分\",{\"1\":{\"35\":1}}],[\"选择网络一栏\",{\"1\":{\"45\":1,\"46\":1}}],[\"选择第二种\",{\"1\":{\"31\":1}}],[\"选择\",{\"1\":{\"14\":1,\"46\":1}}],[\"选择你想使用的源\",{\"1\":{\"9\":1}}],[\"选择包管理器\",{\"1\":{\"9\":1}}],[\"选择一些默认的配置\",{\"1\":{\"9\":1}}],[\"未选中时\",{\"1\":{\"35\":1}}],[\"编辑\",{\"1\":{\"35\":1}}],[\"取消注释行\",{\"1\":{\"35\":1}}],[\"注释\",{\"1\":{\"35\":2}}],[\"注意\",{\"1\":{\"9\":2}}],[\"向上插入一行\",{\"1\":{\"35\":1}}],[\"在行中间执行时\",{\"1\":{\"35\":1}}],[\"在本教程中\",{\"1\":{\"9\":1}}],[\"移动\",{\"1\":{\"35\":1}}],[\"+city\",{\"1\":{\"41\":2}}],[\"+=\",{\"1\":{\"41\":5,\"82\":1,\"85\":1}}],[\"+\",{\"1\":{\"35\":7,\"40\":1,\"41\":1,\"48\":2,\"50\":2,\"55\":2,\"57\":2,\"66\":4,\"68\":2,\"71\":6,\"75\":2,\"79\":2}}],[\"请参照\",{\"1\":{\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"83\":1,\"84\":1}}],[\"请参照公众号文章教程\",{\"1\":{\"34\":1}}],[\"请输入搜索关键词\",{\"1\":{\"50\":1,\"57\":1}}],[\"请输入城市名\",{\"1\":{\"50\":1,\"57\":1}}],[\"请不要勾选第六项\",{\"1\":{\"31\":1}}],[\"点击下一页按钮\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"点击i\",{\"1\":{\"34\":1}}],[\"点击close关闭即可\",{\"1\":{\"31\":1}}],[\"首先找到解压包下的安装包\",{\"1\":{\"34\":1}}],[\"首先你需要创建一个\",{\"1\":{\"13\":1}}],[\"破解过程与idea一致\",{\"1\":{\"34\":1}}],[\"微信公众号搜索软件管家\",{\"1\":{\"33\":1}}],[\"涉及版权\",{\"1\":{\"33\":1}}],[\"警告\",{\"1\":{\"33\":1}}],[\"一列\",{\"1\":{\"82\":1}}],[\"一栏\",{\"1\":{\"46\":1}}],[\"一下包含破解教程\",{\"1\":{\"33\":1}}],[\"一路下一步即可\",{\"0\":{\"19\":1}}],[\"用到的包drissionpage\",{\"1\":{\"47\":1,\"54\":1}}],[\"用作学习也够用\",{\"1\":{\"32\":1}}],[\"用管理员模式在项目根目录\",{\"1\":{\"10\":1}}],[\"用管理员模式打开\",{\"1\":{\"9\":1,\"22\":1}}],[\"免费\",{\"1\":{\"32\":1}}],[\"只支持python开发\",{\"1\":{\"32\":1}}],[\"社区版\",{\"1\":{\"32\":1}}],[\"功能强大\",{\"1\":{\"32\":1}}],[\"专业版\",{\"1\":{\"32\":1}}],[\"专业版本\",{\"1\":{\"32\":1}}],[\"自动\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"自动播放\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"自贡\",{\"1\":{\"40\":1,\"41\":1}}],[\"自行选择\",{\"1\":{\"33\":1}}],[\"自己可根据自己的需要进行选择\",{\"1\":{\"32\":1}}],[\"自定义安装\",{\"1\":{\"31\":2}}],[\"自定义安装路径\",{\"1\":{\"19\":1}}],[\"自定义一下安装路径\",{\"1\":{\"19\":1}}],[\"我们就完成了编写代码的准备环节\",{\"1\":{\"46\":1}}],[\"我们访问网址\",{\"1\":{\"46\":1}}],[\"我们再搜索一个求职信息如\",{\"1\":{\"45\":1}}],[\"我们随便搜索一个求职信息如\",{\"1\":{\"45\":1}}],[\"我们在获取城市代码的过程中可以获取到它对应的省\",{\"1\":{\"40\":1}}],[\"我们在招聘网站中获取到的数据\",{\"1\":{\"40\":1}}],[\"我们现在将两个网站数据进行合并\",{\"1\":{\"39\":1}}],[\"我们将项目生成至当前目录下的\",{\"1\":{\"9\":1}}],[\"我下载的是\",{\"1\":{\"32\":1}}],[\"bar\",{\"1\":{\"68\":4,\"69\":1,\"71\":6,\"79\":1}}],[\"base\",{\"1\":{\"55\":1,\"57\":1}}],[\"b\",{\"1\":{\"66\":1,\"68\":1,\"71\":2,\"75\":1,\"76\":1,\"79\":2}}],[\"break\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"brandindustry\",{\"1\":{\"49\":1,\"50\":1}}],[\"brandname\",{\"1\":{\"49\":1,\"50\":1}}],[\"btn\",{\"1\":{\"49\":3,\"50\":3,\"56\":8,\"57\":5}}],[\"border\",{\"1\":{\"76\":2,\"79\":2}}],[\"body\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"bottom=\",{\"1\":{\"69\":2,\"70\":1,\"71\":3,\"78\":1,\"79\":1}}],[\"bottom\",{\"1\":{\"49\":1,\"50\":1,\"56\":2,\"57\":2}}],[\"boss直聘\",{\"0\":{\"44\":1},\"1\":{\"39\":1,\"50\":1,\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"boss\",{\"1\":{\"39\":4,\"50\":4},\"2\":{\"62\":1}}],[\"by\",{\"1\":{\"32\":1}}],[\"bundler\",{\"1\":{\"10\":2}}],[\"build\",{\"1\":{\"10\":2,\"13\":1}}],[\"由于该网站招聘信息\",{\"1\":{\"58\":1}}],[\"由于我们在后面的可视化表格需要全称\",{\"1\":{\"40\":1}}],[\"由于专业版本需要付费\",{\"1\":{\"33\":1}}],[\"由于插件之间版本不同容易出现依赖冲突\",{\"1\":{\"10\":1}}],[\"由jetbrains开发而成\",{\"1\":{\"32\":1}}],[\"⬇️pycharm\",{\"0\":{\"32\":1}}],[\"⬇️python\",{\"0\":{\"29\":1}}],[\"退出即可\",{\"1\":{\"31\":1}}],[\"继续输入exit\",{\"1\":{\"31\":1}}],[\"输入python验证\",{\"1\":{\"31\":1}}],[\"输入以下指令\",{\"1\":{\"21\":1}}],[\"下边距设置为\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"下一页的标签在\",{\"1\":{\"49\":1,\"56\":1}}],[\"下一步\",{\"1\":{\"31\":3,\"34\":3}}],[\"下面将讲解\",{\"1\":{\"34\":1}}],[\"下载的内容为\",{\"1\":{\"34\":1}}],[\"下载完成后执行以下命令即可在本地打开博客\",{\"1\":{\"10\":1}}],[\"否则需要手动添加环境变量\",{\"1\":{\"31\":1}}],[\"建议别放在c盘\",{\"1\":{\"34\":1}}],[\"建议别安装在c盘\",{\"1\":{\"31\":1}}],[\"建议选择专业版\",{\"1\":{\"32\":1}}],[\"建议自定义安装\",{\"1\":{\"31\":1}}],[\"建好以后开始配置环境\",{\"1\":{\"21\":1}}],[\"第二种\",{\"1\":{\"31\":1}}],[\"第一种\",{\"1\":{\"31\":1}}],[\"即采用默认安装方式\",{\"1\":{\"31\":1}}],[\"即可在本地访问你的blog\",{\"1\":{\"10\":1}}],[\"立即安装\",{\"1\":{\"31\":1}}],[\"好用等特点\",{\"1\":{\"29\":1}}],[\"易学\",{\"1\":{\"29\":1}}],[\"快用python\",{\"1\":{\"29\":1}}],[\"数据来源\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"数据清洗中得出的平均工资\",{\"1\":{\"65\":1}}],[\"数据采集\",{\"0\":{\"43\":1}}],[\"数据已去重并保存为\",{\"1\":{\"39\":1}}],[\"数据可视化\",{\"0\":{\"63\":1},\"1\":{\"26\":1}}],[\"数据处理\",{\"0\":{\"38\":1},\"1\":{\"26\":1}}],[\"数据爬取\",{\"1\":{\"26\":1}}],[\"设置热力图\",{\"1\":{\"66\":1}}],[\"设置鼠标放置旁边时\",{\"1\":{\"66\":1,\"67\":1,\"76\":1}}],[\"设置全局模块的安装路径到\",{\"1\":{\"22\":1}}],[\"设置缓存到\",{\"1\":{\"22\":1}}],[\"设置协议\",{\"1\":{\"9\":1}}],[\"修改安装路径\",{\"1\":{\"31\":1,\"34\":1}}],[\"修改缓存目录和全局目录\",{\"0\":{\"22\":1}}],[\"修改或删除的文件\",{\"1\":{\"13\":1}}],[\"能够正确显示版本号说明安装成功\",{\"1\":{\"21\":1}}],[\"键盘win+r进入cmd\",{\"1\":{\"21\":1}}],[\"到这一步\",{\"1\":{\"21\":1}}],[\"前情提要\",{\"1\":{\"58\":1}}],[\"前程无忧\",{\"0\":{\"58\":1},\"1\":{\"60\":1},\"2\":{\"62\":1}}],[\"前面我们获取了两个网站的数据\",{\"1\":{\"39\":1}}],[\"前面新建文件夹node\",{\"1\":{\"21\":1}}],[\"前言\",{\"1\":{\"29\":1,\"40\":1,\"63\":1}}],[\"前往\",{\"1\":{\"14\":1}}],[\"改成\",{\"1\":{\"21\":1}}],[\"utils\",{\"1\":{\"71\":1}}],[\"utf\",{\"1\":{\"41\":1,\"50\":1,\"57\":1}}],[\"ui\",{\"1\":{\"49\":1}}],[\"ui设计师\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"url\",{\"1\":{\"48\":7,\"49\":1,\"50\":9,\"55\":7,\"56\":1,\"57\":9}}],[\"user\",{\"1\":{\"21\":1}}],[\"update\",{\"1\":{\"10\":2}}],[\"然后将用户变量默认的\",{\"1\":{\"21\":1}}],[\"然后再在系统变量的path中添加\",{\"1\":{\"21\":1}}],[\"然后再在安装路径的根目录下新建两个文件夹\",{\"0\":{\"20\":1}}],[\"变量值为安装路径\",{\"1\":{\"21\":1}}],[\"环境就已经完全配好了\",{\"1\":{\"21\":1}}],[\"环境变量\",{\"1\":{\"21\":1}}],[\"环境配置\",{\"0\":{\"21\":1,\"28\":1},\"1\":{\"26\":1},\"2\":{\"23\":1}}],[\"高级系统设置\",{\"1\":{\"21\":1}}],[\"如下\",{\"1\":{\"65\":1}}],[\"如下图所示即安装成功\",{\"1\":{\"31\":1}}],[\"如何破解\",{\"1\":{\"34\":1}}],[\"如图所示\",{\"0\":{\"20\":1}}],[\"如果没有联网\",{\"1\":{\"31\":1}}],[\"如果出现有关`crlf`\",{\"1\":{\"13\":1}}],[\"如果你有需求\",{\"1\":{\"9\":1}}],[\"不会被引用\",{\"1\":{\"50\":1,\"57\":1}}],[\"不能自行指定安装的路径\",{\"1\":{\"31\":1}}],[\"不建议安装在c盘\",{\"1\":{\"19\":1}}],[\"不需要管\",{\"1\":{\"10\":1}}],[\"jl=城市\",{\"1\":{\"52\":1}}],[\"jl=489\",{\"1\":{\"52\":1,\"57\":1}}],[\"join\",{\"1\":{\"49\":2,\"50\":2,\"56\":2,\"57\":2,\"60\":1}}],[\"jobyear\",{\"1\":{\"60\":1}}],[\"jobsalary\",{\"1\":{\"60\":1}}],[\"jobskilltags\",{\"1\":{\"56\":1,\"57\":1}}],[\"jobtitle\",{\"1\":{\"60\":1}}],[\"jobarea\",{\"1\":{\"59\":1,\"60\":1}}],[\"jobarea=020000\",{\"1\":{\"59\":1,\"60\":1}}],[\"jobknowledgewelfarefeatures\",{\"1\":{\"56\":1,\"57\":1}}],[\"jobdegree\",{\"1\":{\"49\":1,\"50\":1,\"60\":1}}],[\"jobexperience\",{\"1\":{\"49\":1,\"50\":1}}],[\"jobname\",{\"1\":{\"49\":1,\"50\":1}}],[\"joblist\",{\"1\":{\"46\":1,\"49\":4,\"50\":4,\"56\":2,\"57\":2,\"60\":2}}],[\"job\",{\"1\":{\"46\":1,\"49\":10,\"50\":11,\"56\":10,\"57\":10,\"59\":1,\"60\":1}}],[\"java\",{\"1\":{\"39\":1,\"41\":1,\"45\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"javascript\",{\"1\":{\"17\":2}}],[\"jupyter\",{\"1\":{\"63\":3},\"2\":{\"36\":1,\"87\":1}}],[\"jetbrains\",{\"1\":{\"32\":1,\"34\":1}}],[\"jscode\",{\"1\":{\"71\":1}}],[\"js®\",{\"1\":{\"17\":1}}],[\"js\",{\"0\":{\"17\":1},\"1\":{\"39\":1,\"41\":1,\"59\":2,\"65\":1,\"71\":1,\"79\":1,\"85\":1},\"2\":{\"23\":1}}],[\"json返回的是一个字典类型\",{\"1\":{\"48\":1}}],[\"json网址\",{\"1\":{\"48\":1}}],[\"json\",{\"1\":{\"45\":2,\"46\":1,\"48\":7,\"49\":3,\"50\":10,\"55\":6,\"56\":2,\"57\":8,\"59\":1,\"60\":8}}],[\"json所在的文件夹目录\",{\"1\":{\"10\":1}}],[\"json文件\",{\"1\":{\"10\":1,\"40\":1}}],[\"应该会自动生成\",{\"1\":{\"14\":1}}],[\"静态部署\",{\"1\":{\"13\":1}}],[\"yaxis\",{\"1\":{\"67\":1,\"68\":2,\"71\":3}}],[\"yellow\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"yes\",{\"1\":{\"9\":1}}],[\"y\",{\"1\":{\"35\":1,\"68\":3,\"70\":2,\"71\":5}}],[\"yml`文件\",{\"1\":{\"13\":1}}],[\"分支具体查看`\",{\"1\":{\"13\":1}}],[\"分支\",{\"1\":{\"13\":1,\"14\":1}}],[\"将具体数据固定在表格的右边\",{\"1\":{\"68\":1}}],[\"将本地\",{\"1\":{\"13\":1}}],[\"将当前暂存区中的更改提交到本地\",{\"1\":{\"13\":1}}],[\"将当前目录下的所有更改\",{\"1\":{\"13\":1}}],[\"`lf`之类换行符的报错\",{\"1\":{\"13\":1}}],[\"准备进行下一次提交\",{\"1\":{\"13\":1}}],[\"添加到暂存区\",{\"1\":{\"13\":1}}],[\"object\",{\"1\":{\"50\":1,\"57\":1}}],[\"opts\",{\"1\":{\"66\":1,\"67\":3,\"68\":1,\"71\":6,\"75\":1,\"76\":1,\"79\":3,\"83\":1,\"85\":2}}],[\"opts=opts\",{\"1\":{\"66\":6,\"67\":4,\"68\":7,\"69\":3,\"70\":2,\"71\":22,\"75\":5,\"76\":3,\"77\":2,\"78\":2,\"79\":12,\"83\":2,\"85\":3}}],[\"options\",{\"1\":{\"49\":3,\"50\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"open\",{\"1\":{\"41\":1,\"50\":1,\"57\":1}}],[\"orient=\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"origin\",{\"1\":{\"13\":2}}],[\"orangered\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"or\",{\"1\":{\"40\":5,\"41\":5}}],[\"output\",{\"1\":{\"39\":5,\"41\":2}}],[\"of\",{\"1\":{\"10\":1,\"49\":2,\"50\":1,\"56\":2,\"57\":1}}],[\"仓库的pages\",{\"1\":{\"14\":1}}],[\"仓库中的更改推送到远程仓库\",{\"1\":{\"13\":1}}],[\"仓库\",{\"1\":{\"13\":2}}],[\"仓库地址是一个普通的形如\",{\"1\":{\"13\":1}}],[\"初始化\",{\"1\":{\"13\":1}}],[\"<=kw=\",{\"1\":{\"55\":1,\"57\":1}}],[\"<=jl=\",{\"1\":{\"55\":1,\"57\":1}}],[\"<=city=\",{\"1\":{\"48\":1,\"50\":1}}],[\"<=query=\",{\"1\":{\"48\":1,\"50\":1}}],[\"<repo>\",{\"1\":{\"13\":2,\"14\":1}}],[\"<username>\",{\"1\":{\"13\":2,\"14\":1}}],[\"推送代码到\",{\"0\":{\"13\":1}}],[\"容易出现依赖冲突\",{\"1\":{\"10\":1}}],[\"也不要下载这个插件\",{\"1\":{\"10\":1}}],[\"也就是你package\",{\"1\":{\"10\":1}}],[\"的最后一个\",{\"1\":{\"49\":1,\"56\":1}}],[\"的安装教程\",{\"1\":{\"34\":1}}],[\"的运行环境\",{\"1\":{\"16\":1,\"28\":1}}],[\"的源\",{\"1\":{\"14\":1}}],[\"的格式\",{\"1\":{\"13\":1}}],[\"的仓库\",{\"1\":{\"13\":1}}],[\"的报错是正常的\",{\"1\":{\"10\":1}}],[\"的工作流\",{\"1\":{\"9\":1}}],[\"itemstyleopts\",{\"1\":{\"76\":1,\"79\":1}}],[\"itemstyle\",{\"1\":{\"76\":1,\"79\":1}}],[\"item\",{\"1\":{\"60\":3}}],[\"item中\",{\"1\":{\"60\":1}}],[\"iterrows\",{\"1\":{\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"82\":1,\"85\":1}}],[\"i\",{\"1\":{\"55\":1,\"57\":1,\"60\":2}}],[\"icon\",{\"1\":{\"49\":1}}],[\"import\",{\"1\":{\"41\":4,\"50\":3,\"57\":4,\"60\":3,\"71\":6,\"79\":5,\"85\":3}}],[\"if\",{\"1\":{\"40\":6,\"41\":9,\"48\":1,\"49\":2,\"50\":6,\"55\":2,\"56\":2,\"57\":7,\"65\":1,\"66\":2,\"71\":4,\"75\":1,\"76\":1,\"79\":4,\"82\":1,\"85\":1}}],[\"ide\",{\"1\":{\"32\":2}}],[\"ios\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"io\",{\"1\":{\"14\":1}}],[\"is\",{\"1\":{\"10\":1,\"66\":4,\"67\":2,\"68\":4,\"70\":3,\"71\":13,\"75\":3,\"76\":2,\"78\":3,\"79\":8,\"84\":1,\"85\":1}}],[\"inverse=true\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"industryname\",{\"1\":{\"56\":1,\"57\":1}}],[\"index\",{\"1\":{\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"82\":1,\"85\":1}}],[\"index=false\",{\"1\":{\"39\":1}}],[\"input\",{\"1\":{\"50\":2,\"57\":2}}],[\"info\",{\"1\":{\"41\":16,\"60\":2}}],[\"interval=5000\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"int\",{\"1\":{\"40\":2,\"41\":5}}],[\"in\",{\"1\":{\"39\":1,\"40\":12,\"41\":17,\"48\":2,\"49\":3,\"50\":5,\"55\":2,\"56\":4,\"57\":6,\"59\":1,\"60\":2,\"65\":2,\"66\":4,\"68\":2,\"70\":1,\"71\":9,\"75\":3,\"76\":3,\"78\":1,\"79\":9,\"82\":4,\"85\":5}}],[\"installation\",{\"1\":{\"31\":1}}],[\"installed\",{\"1\":{\"10\":1}}],[\"install\",{\"1\":{\"10\":1,\"31\":1,\"63\":2}}],[\"initopts\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"85\":1}}],[\"init\",{\"1\":{\"9\":1,\"13\":1,\"50\":1,\"57\":1,\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"85\":1}}],[\"✖\",{\"1\":{\"10\":1}}],[\"^\",{\"1\":{\"48\":2,\"50\":2,\"55\":2,\"57\":2}}],[\"^2\",{\"1\":{\"10\":1}}],[\"^3\",{\"1\":{\"10\":1}}],[\"82\",{\"1\":{\"76\":1,\"79\":1}}],[\"80\",{\"1\":{\"76\":1,\"79\":1}}],[\"8751\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"8\",{\"1\":{\"10\":1,\"40\":1,\"41\":2,\"50\":1,\"57\":1}}],[\"low\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"loads\",{\"1\":{\"60\":1}}],[\"loader\",{\"1\":{\"10\":1}}],[\"legendopts\",{\"1\":{\"76\":1,\"79\":1}}],[\"legend\",{\"1\":{\"76\":1,\"79\":1}}],[\"left\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"left=\",{\"1\":{\"66\":2,\"67\":1,\"68\":1,\"69\":2,\"70\":1,\"71\":7,\"75\":2,\"78\":1,\"79\":3,\"84\":1,\"85\":1}}],[\"len\",{\"1\":{\"40\":3,\"41\":3}}],[\"labelopts\",{\"1\":{\"67\":1,\"68\":3,\"70\":1,\"71\":5,\"78\":1,\"79\":1}}],[\"label\",{\"1\":{\"67\":1,\"68\":1,\"70\":1,\"71\":3,\"78\":1,\"79\":1}}],[\"last\",{\"1\":{\"49\":2,\"50\":1,\"56\":2,\"57\":1}}],[\"later稍后重启系统\",{\"1\":{\"34\":1}}],[\"light\",{\"1\":{\"85\":1}}],[\"lightskyblue\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"line\",{\"1\":{\"67\":2,\"69\":1,\"71\":4,\"79\":1}}],[\"list\",{\"1\":{\"56\":1,\"57\":1,\"65\":2,\"67\":1,\"70\":1,\"71\":4,\"78\":1,\"79\":3}}],[\"listen\",{\"1\":{\"49\":2,\"50\":2,\"56\":2,\"57\":2}}],[\"lib\",{\"1\":{\"10\":1}}],[\"license\",{\"1\":{\"10\":1}}],[\"kw=招聘岗位\",{\"1\":{\"52\":1}}],[\"kw=python\",{\"1\":{\"52\":1,\"57\":1}}],[\"k\",{\"1\":{\"40\":3,\"41\":2}}],[\"keywordtype\",{\"1\":{\"59\":1}}],[\"keywordtype=\",{\"1\":{\"59\":1,\"60\":1}}],[\"keyword=java\",{\"1\":{\"59\":1,\"60\":1}}],[\"keyword=keyword\",{\"1\":{\"39\":2,\"50\":1,\"57\":1}}],[\"keyword\",{\"1\":{\"39\":6,\"41\":7,\"48\":1,\"50\":9,\"55\":1,\"57\":9,\"59\":1,\"65\":6,\"71\":6,\"79\":6,\"82\":3,\"85\":5}}],[\"keywords\",{\"1\":{\"39\":2,\"41\":2,\"85\":2}}],[\"kotlin\",{\"1\":{\"10\":1}}],[\"katex\",{\"1\":{\"10\":2}}],[\"58\",{\"1\":{\"69\":1,\"71\":1}}],[\"50\",{\"1\":{\"69\":2,\"71\":2}}],[\"5000\",{\"1\":{\"65\":1,\"71\":1}}],[\"51jobcdn\",{\"1\":{\"59\":1}}],[\"51job\",{\"1\":{\"59\":1,\"60\":1}}],[\"56\",{\"1\":{\"10\":1}}],[\"54\",{\"1\":{\"10\":4}}],[\"5\",{\"0\":{\"22\":1},\"1\":{\"10\":2,\"67\":1,\"69\":1,\"70\":2,\"71\":4,\"78\":2,\"79\":2}}],[\"35\",{\"1\":{\"76\":1,\"79\":1}}],[\"35025\",{\"1\":{\"21\":1}}],[\"30\",{\"1\":{\"10\":1,\"40\":2,\"41\":2,\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"3\",{\"0\":{\"20\":1,\"35\":1,\"58\":1,\"81\":1},\"1\":{\"10\":5,\"76\":1,\"79\":1}}],[\"width=1\",{\"1\":{\"76\":1,\"79\":1}}],[\"width=\",{\"1\":{\"70\":2,\"71\":2,\"78\":2,\"79\":2,\"84\":1,\"85\":2}}],[\"we\",{\"1\":{\"59\":1,\"60\":1}}],[\"welfarelist\",{\"1\":{\"49\":1,\"50\":1}}],[\"web\",{\"1\":{\"46\":1,\"50\":1}}],[\"web前端\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"webpack\",{\"1\":{\"10\":1}}],[\"www\",{\"1\":{\"46\":1,\"48\":1,\"50\":2,\"52\":1,\"57\":1}}],[\"writeheader\",{\"1\":{\"41\":1,\"50\":1,\"57\":1}}],[\"writerow\",{\"1\":{\"41\":1,\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"writer\",{\"1\":{\"41\":3,\"49\":1,\"50\":3,\"56\":1,\"57\":3}}],[\"w\",{\"1\":{\"40\":3,\"41\":3,\"50\":1,\"57\":1}}],[\"wait\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"wapi\",{\"1\":{\"48\":1,\"50\":1}}],[\"want\",{\"1\":{\"34\":1}}],[\"waline\",{\"1\":{\"10\":1}}],[\"word\",{\"1\":{\"83\":1,\"85\":1}}],[\"words\",{\"1\":{\"82\":1,\"83\":1,\"85\":2}}],[\"words=\",{\"1\":{\"82\":1,\"85\":1}}],[\"wordcloud\",{\"1\":{\"10\":1,\"83\":1,\"85\":2}}],[\"work=y\",{\"1\":{\"70\":1,\"71\":1}}],[\"work\",{\"1\":{\"65\":7,\"66\":3,\"67\":1,\"68\":2,\"70\":2,\"71\":17,\"75\":4,\"76\":3,\"77\":3,\"78\":4,\"79\":21}}],[\"workingexp\",{\"1\":{\"56\":1,\"57\":1}}],[\"workcity\",{\"1\":{\"56\":1,\"57\":1}}],[\"workflows\",{\"1\":{\"13\":1}}],[\"family=\",{\"1\":{\"83\":1,\"85\":1}}],[\"false\",{\"1\":{\"40\":1,\"41\":2}}],[\"fff\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"function\",{\"1\":{\"66\":1,\"71\":1}}],[\"found\",{\"1\":{\"89\":1}}],[\"font\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1,\"83\":1,\"85\":1}}],[\"formatter=jscode\",{\"1\":{\"66\":1,\"71\":1}}],[\"formatter=\",{\"1\":{\"66\":1,\"67\":1,\"68\":1,\"71\":3,\"75\":1,\"76\":1,\"79\":2}}],[\"for\",{\"1\":{\"32\":1,\"39\":1,\"40\":1,\"41\":4,\"48\":2,\"49\":2,\"50\":4,\"55\":2,\"56\":3,\"57\":5,\"60\":2,\"65\":1,\"66\":3,\"68\":2,\"70\":1,\"71\":7,\"75\":3,\"76\":3,\"78\":1,\"79\":8,\"82\":3,\"85\":4}}],[\"fe\",{\"1\":{\"55\":1,\"57\":1}}],[\"feed\",{\"1\":{\"10\":1}}],[\"finally\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"fieldnames=\",{\"1\":{\"41\":1,\"50\":1,\"57\":1}}],[\"file\",{\"1\":{\"39\":5,\"41\":4,\"50\":2,\"57\":2,\"65\":2,\"71\":2,\"79\":2,\"82\":2,\"85\":2}}],[\"file2\",{\"1\":{\"39\":4}}],[\"file1\",{\"1\":{\"39\":4}}],[\"from\",{\"1\":{\"41\":1,\"50\":1,\"57\":1,\"60\":2,\"71\":4,\"79\":3,\"85\":2}}],[\"frontmatter\",{\"1\":{\"1\":1}}],[\"float\",{\"1\":{\"40\":2,\"41\":2}}],[\"flowchart\",{\"1\":{\"10\":1}}],[\"f\",{\"1\":{\"39\":4,\"41\":4,\"49\":1,\"50\":11,\"56\":1,\"57\":11,\"65\":1,\"71\":1,\"79\":1,\"82\":1,\"85\":1}}],[\"height=\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"85\":1}}],[\"helper\",{\"1\":{\"10\":1}}],[\"high\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"html\",{\"0\":{\"64\":1,\"73\":1,\"81\":1},\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"https\",{\"1\":{\"13\":2,\"14\":1,\"46\":1,\"48\":1,\"50\":2,\"52\":1,\"55\":1,\"57\":2,\"59\":2,\"60\":1}}],[\"hasattr\",{\"1\":{\"50\":1,\"57\":1}}],[\"hope\",{\"1\":{\"2\":1,\"8\":1,\"9\":3,\"10\":4},\"2\":{\"11\":1}}],[\"home\",{\"1\":{\"1\":1,\"21\":4}}],[\"rgba\",{\"1\":{\"76\":1,\"79\":1}}],[\"radius=\",{\"1\":{\"76\":1,\"79\":1}}],[\"range=\",{\"1\":{\"83\":1,\"85\":1}}],[\"range\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1,\"66\":2,\"71\":2,\"75\":2,\"79\":2}}],[\"right=\",{\"1\":{\"69\":2,\"70\":1,\"71\":3,\"78\":1,\"79\":1}}],[\"right\",{\"1\":{\"49\":1,\"68\":1,\"71\":1}}],[\"row\",{\"1\":{\"41\":6,\"65\":5,\"71\":5,\"79\":5,\"82\":2,\"85\":2}}],[\"roaming\",{\"1\":{\"21\":1}}],[\"r\",{\"1\":{\"35\":1,\"40\":2,\"41\":2,\"48\":2,\"50\":2,\"55\":2,\"57\":2}}],[\"runtime\",{\"2\":{\"24\":1}}],[\"run\",{\"1\":{\"10\":1,\"13\":1,\"39\":2,\"49\":1,\"50\":2,\"56\":1,\"57\":2}}],[\"render\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"renormalize\",{\"1\":{\"13\":1}}],[\"reversal\",{\"1\":{\"68\":1,\"71\":1}}],[\"revealjs\",{\"1\":{\"10\":1}}],[\"response\",{\"1\":{\"49\":3,\"50\":3,\"56\":3,\"57\":3}}],[\"re\",{\"1\":{\"40\":2,\"41\":3,\"48\":2,\"50\":3,\"55\":2,\"57\":3},\"2\":{\"42\":1}}],[\"return\",{\"1\":{\"40\":7,\"41\":7,\"48\":3,\"50\":3,\"55\":4,\"57\":4,\"66\":1,\"71\":2,\"75\":1,\"76\":1,\"77\":1,\"79\":3}}],[\"read\",{\"1\":{\"39\":2,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"82\":1,\"85\":1}}],[\"reboot\",{\"1\":{\"34\":1}}],[\"remote\",{\"1\":{\"13\":1}}],[\"redirect\",{\"1\":{\"10\":1}}],[\"replace\",{\"1\":{\"39\":6,\"41\":3,\"50\":6,\"57\":6,\"82\":3,\"85\":3}}],[\"repl\",{\"1\":{\"10\":1}}],[\"rc\",{\"1\":{\"10\":11}}],[\"404\",{\"1\":{\"89\":1}}],[\"45\",{\"1\":{\"68\":1,\"69\":1,\"71\":2}}],[\"489\",{\"1\":{\"55\":1,\"57\":1}}],[\"48\",{\"1\":{\"10\":1}}],[\"47\",{\"1\":{\"10\":2}}],[\"4\",{\"0\":{\"21\":1},\"1\":{\"10\":2,\"40\":1,\"41\":1}}],[\"72\",{\"1\":{\"67\":1,\"71\":1}}],[\"79\",{\"1\":{\"10\":1}}],[\"7\",{\"1\":{\"10\":2}}],[\"size\",{\"1\":{\"83\":1,\"85\":1}}],[\"size=25\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"schema\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"scroll\",{\"1\":{\"49\":1,\"50\":1,\"56\":2,\"57\":2}}],[\"scripts\",{\"1\":{\"10\":1}}],[\"symbol\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"sleep\",{\"1\":{\"57\":1}}],[\"skill\",{\"1\":{\"56\":2,\"57\":2}}],[\"skills\",{\"1\":{\"49\":1,\"50\":1,\"82\":2,\"85\":2}}],[\"soupager\",{\"1\":{\"56\":7,\"57\":3}}],[\"sou\",{\"1\":{\"52\":1,\"57\":1}}],[\"subtitle=\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"sublist\",{\"1\":{\"55\":1,\"57\":1}}],[\"sublevelmodellist\",{\"1\":{\"48\":2,\"50\":1}}],[\"sub\",{\"1\":{\"48\":2,\"50\":2,\"55\":2,\"57\":2}}],[\"subset=\",{\"1\":{\"39\":1}}],[\"split\",{\"1\":{\"40\":1,\"41\":1,\"82\":1,\"85\":1}}],[\"spider\",{\"1\":{\"39\":4,\"50\":2,\"57\":2}}],[\"start\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"started\",{\"2\":{\"6\":1}}],[\"str\",{\"1\":{\"40\":1,\"41\":1,\"48\":1,\"50\":1,\"55\":2,\"57\":2,\"66\":1,\"68\":1,\"71\":3,\"75\":2,\"76\":1,\"77\":1,\"79\":4,\"82\":1,\"85\":1}}],[\"show=true\",{\"1\":{\"66\":2,\"67\":1,\"68\":1,\"70\":1,\"71\":5,\"75\":1,\"76\":1,\"78\":1,\"79\":3}}],[\"show=false\",{\"1\":{\"66\":1,\"67\":1,\"68\":3,\"71\":5,\"75\":1,\"76\":1,\"79\":2}}],[\"shift+enter\",{\"1\":{\"35\":1}}],[\"shift\",{\"1\":{\"35\":3}}],[\"shared\",{\"1\":{\"10\":1}}],[\"series\",{\"1\":{\"66\":1,\"67\":1,\"68\":1,\"71\":3,\"75\":1,\"76\":1,\"79\":2}}],[\"sensorsdata\",{\"1\":{\"60\":1}}],[\"self\",{\"1\":{\"48\":11,\"49\":3,\"50\":30,\"55\":12,\"56\":3,\"57\":31}}],[\"sessionpage\",{\"1\":{\"41\":1,\"48\":1,\"50\":2,\"55\":1,\"57\":2,\"60\":1}}],[\"set\",{\"1\":{\"22\":2,\"66\":1,\"67\":2,\"68\":1,\"71\":4,\"75\":1,\"76\":1,\"79\":2,\"83\":1,\"85\":1}}],[\"searchtype\",{\"1\":{\"59\":1}}],[\"searchtype=2\",{\"1\":{\"59\":1,\"60\":1}}],[\"search\",{\"1\":{\"10\":1,\"49\":1,\"50\":1,\"53\":1,\"55\":1,\"56\":1,\"57\":2,\"59\":2,\"60\":1}}],[\"s\",{\"1\":{\"17\":1}}],[\"salary60\",{\"1\":{\"56\":1,\"57\":1}}],[\"salarydesc\",{\"1\":{\"49\":1,\"50\":1}}],[\"salary\",{\"1\":{\"40\":2,\"41\":8}}],[\"safe\",{\"1\":{\"39\":7,\"41\":2,\"50\":4,\"57\":4,\"82\":2,\"85\":2}}],[\"sass\",{\"1\":{\"10\":2}}],[\"sandpack\",{\"1\":{\"10\":1}}],[\"src\",{\"1\":{\"10\":3}}],[\"0\",{\"1\":{\"10\":37,\"41\":2,\"66\":4,\"68\":4,\"71\":8,\"75\":2,\"76\":6,\"79\":8}}],[\"vertical\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"version\",{\"1\":{\"10\":1}}],[\"values\",{\"1\":{\"65\":1,\"71\":1,\"79\":1}}],[\"value\",{\"1\":{\"65\":1,\"66\":4,\"68\":1,\"71\":6,\"75\":1,\"76\":1,\"79\":3}}],[\"v\",{\"1\":{\"21\":2}}],[\"v8\",{\"1\":{\"17\":1}}],[\"visualmapopts\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"visualmap\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"view\",{\"1\":{\"10\":1}}],[\"vite\",{\"1\":{\"10\":4}}],[\"vue3\",{\"1\":{\"10\":1}}],[\"vueuse\",{\"1\":{\"10\":1}}],[\"vue\",{\"1\":{\"10\":2}}],[\"vuepress\",{\"1\":{\"2\":1,\"5\":1,\"8\":1,\"9\":3,\"10\":18,\"12\":1,\"16\":1},\"2\":{\"4\":1,\"6\":1,\"11\":1,\"15\":1}}],[\"vp\",{\"1\":{\"10\":1}}],[\"auto\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"autocrlf\",{\"1\":{\"13\":1}}],[\"axislabel\",{\"1\":{\"68\":2,\"71\":2}}],[\"axisopts\",{\"1\":{\"68\":2,\"71\":2}}],[\"axis\",{\"1\":{\"68\":1,\"71\":1}}],[\"axis=bar\",{\"1\":{\"68\":1,\"71\":1}}],[\"allcity\",{\"1\":{\"55\":1,\"57\":1}}],[\"append\",{\"1\":{\"65\":1,\"71\":1,\"79\":1,\"82\":1,\"85\":1}}],[\"appdate\",{\"1\":{\"21\":1}}],[\"api\",{\"1\":{\"55\":1,\"57\":1}}],[\"arrow\",{\"1\":{\"49\":1}}],[\"artplayer\",{\"1\":{\"10\":1}}],[\"attr\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1,\"60\":2}}],[\"aversal\",{\"1\":{\"41\":2}}],[\"aversal=0\",{\"1\":{\"41\":1}}],[\"aversalary\",{\"1\":{\"41\":2,\"65\":3,\"71\":3,\"79\":3}}],[\"as\",{\"1\":{\"41\":1,\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"71\":2,\"79\":2,\"85\":2}}],[\"android\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"and\",{\"1\":{\"39\":2,\"50\":1,\"57\":1}}],[\"add\",{\"1\":{\"13\":3,\"66\":1,\"67\":2,\"68\":2,\"69\":3,\"70\":2,\"71\":10,\"75\":1,\"76\":1,\"77\":2,\"78\":2,\"79\":6,\"83\":1,\"84\":1,\"85\":3}}],[\"a\",{\"1\":{\"10\":1,\"49\":2,\"50\":1,\"56\":2,\"57\":1}}],[\"20\",{\"1\":{\"70\":4,\"71\":4,\"78\":4,\"79\":4,\"83\":1,\"85\":1}}],[\"2023\",{\"1\":{\"59\":1}}],[\"25\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"2\",{\"0\":{\"10\":1,\"19\":1,\"31\":1,\"34\":1,\"40\":1,\"51\":1,\"73\":1},\"1\":{\"10\":16,\"41\":2,\"57\":1,\"59\":1,\"66\":1,\"71\":1}}],[\"当前源\",{\"1\":{\"9\":1}}],[\"g\",{\"1\":{\"70\":2,\"71\":2}}],[\"gridopts\",{\"1\":{\"69\":3,\"71\":3,\"77\":2,\"79\":2}}],[\"grid\",{\"1\":{\"69\":5,\"71\":7,\"77\":6,\"78\":1,\"79\":8}}],[\"group\",{\"1\":{\"40\":2,\"41\":2}}],[\"gallery\",{\"1\":{\"63\":1}}],[\"geek\",{\"1\":{\"46\":1,\"50\":1}}],[\"getprovince\",{\"1\":{\"40\":1,\"41\":2}}],[\"getsalary\",{\"1\":{\"40\":1,\"41\":2}}],[\"getunit\",{\"1\":{\"40\":3,\"41\":3}}],[\"get\",{\"1\":{\"48\":4,\"49\":2,\"50\":6,\"55\":4,\"56\":2,\"57\":6,\"60\":1,\"70\":1,\"71\":2,\"75\":1,\"76\":1,\"77\":3,\"78\":1,\"79\":6},\"2\":{\"6\":1}}],[\"golang\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"globle\",{\"1\":{\"21\":1}}],[\"globals\",{\"1\":{\"71\":1,\"79\":1}}],[\"global的路径\",{\"1\":{\"21\":1}}],[\"global\",{\"1\":{\"13\":1,\"21\":1,\"22\":1,\"66\":1,\"67\":1,\"68\":1,\"71\":3,\"75\":1,\"76\":1,\"79\":2,\"83\":1,\"85\":1}}],[\"gh\",{\"1\":{\"14\":2}}],[\"git\",{\"1\":{\"13\":10}}],[\"github\",{\"0\":{\"13\":1,\"14\":1},\"1\":{\"9\":1,\"13\":4,\"14\":3},\"2\":{\"15\":1}}],[\"是学习者比较容易上手的一门语言\",{\"1\":{\"29\":1}}],[\"是你对应文件夹的绝对路径\",{\"1\":{\"22\":1}}],[\"是一个基于\",{\"1\":{\"17\":1}}],[\"是一个参数\",{\"1\":{\"9\":1}}],[\"是否需要一个自动部署文档到\",{\"1\":{\"9\":1}}],[\"null\",{\"1\":{\"70\":2,\"71\":2,\"78\":2,\"79\":2,\"84\":2,\"85\":2}}],[\"num\",{\"1\":{\"49\":1,\"50\":1,\"56\":1,\"57\":1,\"65\":1,\"67\":1,\"71\":2}}],[\"number=0\",{\"1\":{\"41\":1}}],[\"number\",{\"1\":{\"41\":9,\"65\":3,\"71\":3,\"79\":3}}],[\"number2\",{\"1\":{\"40\":5,\"41\":5}}],[\"number1\",{\"1\":{\"40\":5,\"41\":5}}],[\"next\",{\"1\":{\"49\":3,\"50\":3,\"56\":3,\"57\":3}}],[\"newline=\",{\"1\":{\"41\":1,\"50\":1,\"57\":1}}],[\"net\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"npx\",{\"1\":{\"10\":1}}],[\"npm\",{\"1\":{\"9\":2,\"10\":2,\"13\":1,\"21\":2,\"22\":2}}],[\"name=\",{\"1\":{\"66\":1,\"68\":1,\"71\":2,\"75\":1,\"76\":1,\"79\":2}}],[\"name\",{\"1\":{\"10\":1,\"41\":2,\"48\":1,\"50\":4,\"55\":2,\"56\":2,\"57\":7,\"60\":2,\"65\":1,\"71\":2,\"79\":2}}],[\"none\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2}}],[\"now\",{\"1\":{\"31\":1}}],[\"nodejs\",{\"1\":{\"21\":1}}],[\"node\",{\"0\":{\"17\":1},\"1\":{\"17\":1,\"21\":7,\"22\":2,\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1},\"2\":{\"23\":1}}],[\"notebook\",{\"1\":{\"63\":5},\"2\":{\"36\":1,\"87\":1}}],[\"not\",{\"1\":{\"10\":1,\"40\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"89\":1}}],[\"no\",{\"1\":{\"9\":1}}],[\"min\",{\"1\":{\"66\":2,\"71\":2,\"75\":1,\"79\":1}}],[\"minnum\",{\"1\":{\"65\":1,\"66\":1,\"71\":2}}],[\"minsalary\",{\"1\":{\"41\":4}}],[\"mit\",{\"1\":{\"9\":1,\"10\":1}}],[\"mode=\",{\"1\":{\"41\":1,\"50\":1,\"57\":1}}],[\"module\",{\"1\":{\"10\":1}}],[\"merge\",{\"1\":{\"39\":2}}],[\"mermaid\",{\"1\":{\"10\":1}}],[\"markpointitem\",{\"1\":{\"67\":1,\"71\":1}}],[\"markpointopts\",{\"1\":{\"67\":1,\"71\":1}}],[\"markpoint\",{\"1\":{\"67\":1,\"71\":1}}],[\"markmap\",{\"1\":{\"10\":3}}],[\"map\",{\"1\":{\"66\":5,\"68\":2,\"69\":1,\"71\":9,\"75\":6,\"77\":1,\"79\":8}}],[\"max\",{\"1\":{\"66\":2,\"67\":1,\"68\":1,\"71\":4,\"75\":1,\"79\":1}}],[\"maxnum\",{\"1\":{\"65\":1,\"66\":1,\"71\":2}}],[\"maxsalary\",{\"1\":{\"41\":4}}],[\"main\",{\"1\":{\"50\":1,\"57\":1,\"71\":1,\"79\":1}}],[\"match\",{\"1\":{\"40\":2,\"41\":2}}],[\"manually\",{\"1\":{\"34\":1}}],[\"m\",{\"1\":{\"13\":1}}],[\"md\",{\"1\":{\"10\":1}}],[\"my\",{\"1\":{\"9\":3}}],[\"你在搜索公司名称时\",{\"1\":{\"53\":1}}],[\"你需要下载并安装最新的长期维护版\",{\"1\":{\"17\":1}}],[\"你的网站将会被发布到\",{\"1\":{\"14\":1}}],[\"你想要创建什么类型的项目\",{\"1\":{\"9\":1}}],[\"你可以更改此参数来使用一个新文件夹名称\",{\"1\":{\"9\":1}}],[\"你应该在页面\",{\"1\":{\"1\":1}}],[\"代表\",{\"1\":{\"9\":1,\"48\":1}}],[\"这里就不过多赘述\",{\"1\":{\"75\":1}}],[\"这里的dit\",{\"1\":{\"48\":1}}],[\"这里的\",{\"1\":{\"9\":1}}],[\"这边x\",{\"1\":{\"75\":1}}],[\"这是一个档案主页的案例\",{\"1\":{\"1\":1}}],[\"dark\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1}}],[\"data=bar\",{\"1\":{\"68\":1,\"71\":1}}],[\"data=\",{\"1\":{\"67\":1,\"71\":1}}],[\"data\",{\"1\":{\"41\":3,\"48\":3,\"49\":4,\"50\":7,\"55\":4,\"56\":5,\"57\":9,\"60\":6,\"65\":6,\"66\":12,\"68\":6,\"71\":23,\"75\":5,\"76\":5,\"79\":15}}],[\"dataframe\",{\"1\":{\"39\":1}}],[\"dc\",{\"1\":{\"60\":3}}],[\"ddd\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"dd\",{\"1\":{\"59\":2}}],[\"drissionpage\",{\"1\":{\"41\":1,\"50\":1,\"57\":1,\"60\":1},\"2\":{\"61\":1}}],[\"drop\",{\"1\":{\"39\":1}}],[\"dimension=0\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"div\",{\"1\":{\"60\":5}}],[\"divs\",{\"1\":{\"60\":2}}],[\"disabled\",{\"1\":{\"49\":1}}],[\"disable\",{\"1\":{\"49\":1,\"50\":1,\"56\":2,\"57\":1}}],[\"dit\",{\"1\":{\"48\":2,\"50\":2,\"55\":4,\"57\":4,\"60\":2}}],[\"dictwriter\",{\"1\":{\"41\":1,\"50\":1,\"57\":1}}],[\"dict\",{\"1\":{\"40\":1,\"41\":3}}],[\"dir\",{\"1\":{\"9\":3,\"22\":3}}],[\"d+\",{\"1\":{\"40\":4,\"41\":4}}],[\"duplicates\",{\"1\":{\"39\":1}}],[\"df\",{\"1\":{\"39\":4,\"41\":2,\"65\":2,\"71\":2,\"79\":2,\"82\":2,\"85\":2}}],[\"df2\",{\"1\":{\"39\":2}}],[\"df1\",{\"1\":{\"39\":2}}],[\"d\",{\"1\":{\"35\":1,\"66\":3,\"71\":3,\"75\":3,\"76\":3,\"79\":6}}],[\"download\",{\"1\":{\"32\":1}}],[\"docs\",{\"1\":{\"9\":4,\"10\":5,\"13\":2}}],[\"del\",{\"1\":{\"50\":1,\"57\":1}}],[\"deduplicate\",{\"1\":{\"39\":2}}],[\"def\",{\"1\":{\"39\":1,\"40\":3,\"41\":3,\"48\":2,\"49\":1,\"50\":5,\"55\":2,\"56\":1,\"57\":5,\"71\":1,\"75\":1,\"76\":1,\"77\":1,\"79\":3}}],[\"deploy\",{\"1\":{\"13\":1}}],[\"developers\",{\"1\":{\"32\":1}}],[\"devdependencies\",{\"1\":{\"10\":1}}],[\"dev\",{\"1\":{\"10\":5}}],[\"description\",{\"1\":{\"10\":1}}],[\"指的是你将要放置你的项目所在的文件路径\",{\"1\":{\"9\":1}}],[\"目录\",{\"1\":{\"9\":1}}],[\"进入选择安装方式\",{\"1\":{\"31\":1}}],[\"进入\",{\"1\":{\"9\":1}}],[\"盘锦\",{\"1\":{\"40\":1,\"41\":1}}],[\"盘\",{\"1\":{\"9\":1}}],[\"切换到\",{\"1\":{\"9\":1}}],[\"切换到想要放置项目的路径\",{\"1\":{\"9\":1}}],[\"执行过程中出现\",{\"1\":{\"10\":1}}],[\"执行以下命令之一\",{\"1\":{\"13\":1}}],[\"执行以下命令\",{\"1\":{\"9\":1,\"10\":1}}],[\"执行\",{\"1\":{\"9\":2}}],[\"education\",{\"1\":{\"56\":1,\"57\":1}}],[\"exception\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2}}],[\"except\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2}}],[\"exe\",{\"1\":{\"31\":1}}],[\"eles\",{\"1\":{\"60\":2}}],[\"ele\",{\"1\":{\"49\":1,\"50\":1,\"56\":2,\"57\":2,\"60\":3}}],[\"else\",{\"1\":{\"40\":1,\"41\":3,\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"82\":1,\"85\":1}}],[\"elif\",{\"1\":{\"40\":2,\"41\":2}}],[\"end=\",{\"1\":{\"41\":1}}],[\"encoding=\",{\"1\":{\"41\":1,\"50\":1,\"57\":1}}],[\"environment\",{\"1\":{\"21\":1}}],[\"engine的\",{\"1\":{\"17\":1}}],[\"enhance\",{\"1\":{\"10\":1}}],[\"embedded\",{\"1\":{\"10\":1}}],[\"echarts\",{\"1\":{\"10\":1}}],[\"e\",{\"1\":{\"9\":3,\"49\":2,\"50\":4,\"56\":2,\"57\":4}}],[\"窗口执行以下指令\",{\"1\":{\"22\":1}}],[\"窗口\",{\"1\":{\"9\":1}}],[\"cursive\",{\"1\":{\"83\":1,\"85\":1}}],[\"customize\",{\"1\":{\"31\":1}}],[\"calculable=true\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"cache\",{\"1\":{\"10\":1,\"21\":1,\"22\":2}}],[\"center\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"center=\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"76\":1,\"79\":2}}],[\"charts\",{\"1\":{\"71\":1,\"79\":1,\"85\":1}}],[\"chart\",{\"0\":{\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"75\":1,\"76\":1,\"77\":1},\"1\":{\"66\":1,\"67\":1,\"69\":3,\"70\":1,\"71\":8,\"75\":3,\"76\":3,\"77\":5,\"78\":1,\"79\":12}}],[\"chromiumpage区别于sessionpage\",{\"1\":{\"49\":1}}],[\"chromiumpage\",{\"1\":{\"41\":1,\"49\":1,\"50\":2,\"56\":1,\"57\":2,\"60\":2}}],[\"chrome\",{\"1\":{\"17\":1}}],[\"cname\",{\"1\":{\"60\":1}}],[\"css\",{\"1\":{\"49\":2,\"50\":1,\"56\":3,\"57\":2,\"60\":5}}],[\"csv\",{\"1\":{\"39\":9,\"41\":8,\"49\":1,\"50\":6,\"56\":1,\"57\":6,\"65\":2,\"71\":2,\"79\":2,\"82\":2,\"85\":2},\"2\":{\"42\":1}}],[\"cityname\",{\"1\":{\"49\":1,\"50\":1}}],[\"citylist\",{\"1\":{\"48\":2,\"50\":1}}],[\"city=101200100\",{\"1\":{\"50\":1}}],[\"city=100010000\",{\"1\":{\"46\":2}}],[\"city=city\",{\"1\":{\"39\":2,\"50\":1,\"57\":1}}],[\"city可以知道是职业的地区参数\",{\"1\":{\"45\":1}}],[\"city\",{\"1\":{\"39\":5,\"40\":1,\"41\":32,\"45\":1,\"48\":7,\"50\":14,\"55\":7,\"57\":14,\"59\":1}}],[\"c++\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"ctrl+alt+enter\",{\"1\":{\"35\":1}}],[\"ctrl\",{\"1\":{\"35\":9}}],[\"c\",{\"1\":{\"21\":1,\"39\":2,\"41\":2,\"55\":1,\"57\":1,\"60\":2,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"71\":5,\"75\":1,\"76\":1,\"79\":4,\"83\":1,\"85\":4}}],[\"close\",{\"1\":{\"50\":1,\"57\":1}}],[\"click\",{\"1\":{\"49\":1,\"50\":1,\"56\":2,\"57\":2}}],[\"client\",{\"1\":{\"10\":1}}],[\"class=joblist\",{\"1\":{\"60\":1}}],[\"class\",{\"1\":{\"49\":2,\"50\":2,\"56\":2,\"57\":2}}],[\"cleaned\",{\"1\":{\"39\":2}}],[\"clean\",{\"1\":{\"10\":2}}],[\"count\",{\"1\":{\"82\":6,\"85\":6}}],[\"color=\",{\"1\":{\"66\":2,\"70\":1,\"71\":3,\"75\":2,\"76\":1,\"78\":1,\"79\":4}}],[\"code\",{\"1\":{\"48\":3,\"50\":3,\"55\":4,\"57\":4}}],[\"continue\",{\"1\":{\"41\":2}}],[\"concat\",{\"1\":{\"39\":1}}],[\"config\",{\"1\":{\"13\":1,\"22\":2},\"2\":{\"7\":1}}],[\"companyname\",{\"1\":{\"56\":1,\"57\":1}}],[\"components\",{\"1\":{\"10\":1}}],[\"combined\",{\"1\":{\"39\":2}}],[\"commons\",{\"1\":{\"71\":1}}],[\"community\",{\"1\":{\"32\":1}}],[\"commit\",{\"1\":{\"13\":1}}],[\"com\",{\"1\":{\"13\":2,\"46\":1,\"48\":1,\"50\":2,\"52\":1,\"55\":1,\"57\":2,\"59\":2,\"60\":1}}],[\"core\",{\"1\":{\"10\":1,\"13\":1}}],[\"cd\",{\"1\":{\"9\":1}}],[\"cmd\",{\"1\":{\"9\":1,\"22\":1}}],[\"主题提供的脚手架工具创建项目\",{\"1\":{\"9\":1}}],[\"使用文档\",{\"1\":{\"47\":1,\"54\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"83\":1,\"84\":1}}],[\"使用win+r键输入cmd进入dos界面\",{\"1\":{\"31\":1}}],[\"使用\",{\"0\":{\"14\":1},\"1\":{\"9\":1}}],[\"130\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"18482\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"1400\",{\"1\":{\"84\":1,\"85\":1}}],[\"14158\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"14679\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"12989\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"12854\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"12373\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"100\",{\"1\":{\"83\":1,\"85\":1}}],[\"100010000\",{\"1\":{\"48\":1,\"50\":1}}],[\"100010000对应的是全国参数\",{\"1\":{\"45\":1}}],[\"1000\",{\"1\":{\"40\":1,\"41\":1,\"49\":1,\"50\":1,\"56\":1,\"57\":1}}],[\"10000\",{\"1\":{\"40\":1,\"41\":1}}],[\"10\",{\"1\":{\"69\":2,\"71\":2}}],[\"10200\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"10988\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"10794\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"17128\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"17\",{\"1\":{\"10\":3}}],[\"11348\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"11876\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"11\",{\"1\":{\"10\":4}}],[\"15096\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"15898\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"15584\",{\"1\":{\"41\":1,\"65\":1,\"71\":1}}],[\"15\",{\"1\":{\"10\":3,\"76\":1,\"79\":1}}],[\"1650px\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"85\":1}}],[\"16\",{\"1\":{\"10\":3}}],[\"1\",{\"0\":{\"9\":1,\"33\":1,\"39\":1,\"44\":1,\"64\":1},\"1\":{\"10\":8,\"40\":4,\"41\":9,\"59\":1,\"66\":1,\"68\":1,\"71\":2,\"75\":4,\"76\":2,\"79\":4,\"82\":2,\"85\":2}}],[\"pie\",{\"1\":{\"71\":1,\"76\":5,\"77\":1,\"79\":7}}],[\"pip\",{\"1\":{\"63\":2}}],[\"pprint\",{\"1\":{\"60\":2,\"71\":2,\"79\":2}}],[\"pc\",{\"1\":{\"59\":2,\"60\":1}}],[\"point=str\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"85\":1}}],[\"position=\",{\"1\":{\"68\":1,\"70\":1,\"71\":2,\"78\":1,\"79\":1}}],[\"positions\",{\"1\":{\"53\":1,\"56\":1,\"57\":1}}],[\"pos\",{\"1\":{\"66\":4,\"67\":2,\"68\":2,\"69\":8,\"70\":4,\"71\":20,\"75\":4,\"78\":4,\"79\":8,\"84\":1,\"85\":1}}],[\"portfolio\",{\"1\":{\"1\":1}}],[\"p=页面\",{\"1\":{\"52\":1}}],[\"p=2\",{\"1\":{\"52\":1,\"57\":1}}],[\"p2\",{\"1\":{\"40\":3,\"41\":3}}],[\"p1\",{\"1\":{\"40\":3,\"41\":3}}],[\"php\",{\"1\":{\"39\":1,\"41\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1}}],[\"pd\",{\"1\":{\"39\":3,\"41\":2,\"65\":1,\"71\":2,\"79\":2,\"82\":1,\"85\":2}}],[\"pyecharts\",{\"1\":{\"63\":2,\"71\":4,\"79\":3,\"85\":2},\"2\":{\"36\":1,\"87\":1}}],[\"pycharm的安装通用非常简单\",{\"1\":{\"34\":1}}],[\"pycharm针对每个平台都有professional和community两个版本\",{\"1\":{\"32\":1}}],[\"pycharm\",{\"1\":{\"32\":1,\"34\":1}}],[\"pycharm是一款非常好用的python\",{\"1\":{\"32\":1}}],[\"python安装非常简单\",{\"1\":{\"31\":1}}],[\"python作为众多编程语言之一\",{\"1\":{\"29\":1}}],[\"python\",{\"1\":{\"31\":1,\"32\":1,\"39\":1,\"41\":1,\"45\":1,\"65\":1,\"71\":1,\"79\":1,\"85\":1},\"2\":{\"27\":1,\"36\":1,\"42\":1,\"61\":1,\"87\":1}}],[\"print\",{\"1\":{\"39\":1,\"41\":3,\"48\":1,\"49\":1,\"50\":4,\"55\":1,\"56\":1,\"57\":4,\"60\":1}}],[\"prefix\",{\"1\":{\"22\":1}}],[\"province\",{\"1\":{\"40\":3,\"41\":3,\"65\":4,\"66\":1,\"71\":5,\"75\":1,\"76\":1,\"79\":6}}],[\"professional\",{\"1\":{\"32\":2}}],[\"pro\",{\"1\":{\"10\":1,\"40\":3,\"41\":3}}],[\"project\",{\"1\":{\"9\":1,\"10\":1},\"2\":{\"7\":1}}],[\"push\",{\"1\":{\"13\":1}}],[\"play\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"play=true\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"84\":1,\"85\":1}}],[\"playground\",{\"1\":{\"10\":1}}],[\"plugin\",{\"1\":{\"10\":6}}],[\"params\",{\"1\":{\"66\":4,\"71\":4}}],[\"part\",{\"1\":{\"82\":7,\"85\":7}}],[\"part2\",{\"1\":{\"40\":3,\"41\":3}}],[\"part1\",{\"1\":{\"40\":3,\"41\":3}}],[\"parts\",{\"1\":{\"40\":3,\"41\":3,\"82\":2,\"85\":2}}],[\"pair=pie\",{\"1\":{\"76\":1,\"79\":1}}],[\"pair=map\",{\"1\":{\"75\":1,\"79\":1}}],[\"pair=\",{\"1\":{\"66\":1,\"71\":1}}],[\"page\",{\"1\":{\"48\":4,\"49\":13,\"50\":16,\"55\":3,\"56\":15,\"57\":18,\"60\":3,\"79\":1}}],[\"pages\",{\"0\":{\"14\":1},\"1\":{\"9\":1,\"14\":3,\"49\":3,\"50\":1}}],[\"path\",{\"1\":{\"53\":1}}],[\"path一栏\",{\"1\":{\"46\":1}}],[\"path打上勾\",{\"1\":{\"31\":1}}],[\"pandas\",{\"1\":{\"41\":1,\"71\":1,\"79\":1,\"85\":1},\"2\":{\"42\":1}}],[\"package\",{\"1\":{\"10\":1}}],[\"配置项目\",{\"1\":{\"3\":1}}],[\"教程章节\",{\"0\":{\"3\":1,\"26\":1}}],[\"项目需要用到多语言么\",{\"1\":{\"9\":1}}],[\"项目的文件夹名称\",{\"1\":{\"9\":1}}],[\"项目初始化\",{\"0\":{\"9\":1}}],[\"项目配置\",{\"0\":{\"5\":1}}],[\"项目部署\",{\"0\":{\"12\":1},\"1\":{\"3\":1}}],[\"项目\",{\"1\":{\"2\":1,\"5\":1,\"8\":1,\"12\":1,\"25\":1}}],[\"tag\",{\"1\":{\"60\":1}}],[\"tags\",{\"1\":{\"60\":2}}],[\"tab\",{\"1\":{\"35\":1}}],[\"title=keyword+\",{\"1\":{\"83\":1,\"85\":1}}],[\"title=\",{\"1\":{\"66\":1,\"67\":1,\"68\":1,\"71\":3,\"75\":1,\"79\":1}}],[\"titleopts\",{\"1\":{\"66\":1,\"67\":1,\"68\":1,\"71\":3,\"75\":1,\"79\":1,\"83\":1,\"85\":1}}],[\"title\",{\"1\":{\"60\":1,\"66\":2,\"67\":1,\"68\":1,\"71\":4,\"75\":2,\"79\":2,\"83\":1,\"85\":1}}],[\"timeline\",{\"1\":{\"70\":5,\"71\":6,\"78\":5,\"79\":6,\"84\":2,\"85\":6}}],[\"time\",{\"1\":{\"57\":2,\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"85\":1}}],[\"try\",{\"1\":{\"49\":1,\"50\":2,\"56\":1,\"57\":2}}],[\"true\",{\"1\":{\"1\":2,\"13\":1}}],[\"text=\",{\"1\":{\"66\":1,\"71\":1,\"75\":1,\"79\":1}}],[\"textstyleopts\",{\"1\":{\"66\":2,\"71\":2,\"75\":2,\"79\":2,\"83\":1,\"85\":1}}],[\"textstyle\",{\"1\":{\"66\":2,\"71\":2,\"75\":2,\"79\":2,\"83\":1,\"85\":1}}],[\"text2\",{\"1\":{\"40\":2,\"41\":2}}],[\"text1\",{\"1\":{\"40\":3,\"41\":3}}],[\"text\",{\"1\":{\"40\":11,\"41\":11,\"60\":2}}],[\"template\",{\"1\":{\"10\":1}}],[\"top\",{\"1\":{\"66\":2,\"71\":2,\"75\":2,\"79\":2}}],[\"top=\",{\"1\":{\"66\":2,\"67\":1,\"68\":1,\"69\":2,\"70\":1,\"71\":7,\"75\":2,\"78\":1,\"79\":3}}],[\"tooltipopts\",{\"1\":{\"66\":2,\"67\":1,\"68\":1,\"71\":4,\"75\":1,\"76\":1,\"79\":2}}],[\"tooltip\",{\"1\":{\"66\":2,\"67\":1,\"68\":1,\"71\":4,\"75\":1,\"76\":1,\"79\":2}}],[\"toolbar\",{\"1\":{\"10\":1}}],[\"total\",{\"1\":{\"65\":1,\"67\":1,\"71\":2}}],[\"to\",{\"1\":{\"31\":1,\"34\":1,\"39\":1,\"49\":1,\"50\":1,\"56\":2,\"57\":2}}],[\"ts\",{\"1\":{\"10\":1}}],[\"types\",{\"1\":{\"10\":1}}],[\"type\",{\"1\":{\"10\":1,\"49\":2,\"50\":1,\"56\":2,\"57\":1,\"67\":1,\"71\":1}}],[\"tutorial\",{\"2\":{\"6\":1}}],[\"themetype\",{\"1\":{\"71\":1,\"79\":1}}],[\"theme=themetype\",{\"1\":{\"70\":1,\"71\":1,\"78\":1,\"79\":1,\"85\":1}}],[\"theme\",{\"1\":{\"2\":1,\"8\":1,\"9\":3,\"10\":4},\"2\":{\"11\":1}}],[\"档案主页\",{\"1\":{\"1\":1}}],[\"和city=100010000\",{\"1\":{\"45\":1}}],[\"和田地区\",{\"1\":{\"40\":1,\"41\":1}}],[\"和\",{\"0\":{\"20\":1},\"1\":{\"1\":1}}],[\"要使用此布局\",{\"1\":{\"1\":1}}],[\"介绍\",{\"0\":{\"1\":1},\"1\":{\"17\":1}}],[\"个人介绍\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
